classe adm_mudanome
herda comando_adm, comando_comum
const txtajuda = "\b\c3Mudanome\b\n\
Sintaxe: MUDANOME <nome atual> <novo nome>\n\
Muda o nome do personagem de um jogador.\n\
Nota: O jogador não precisa estar necessariamente online no MUD."

func escr
  se intsub(arg1) != 2
    ret arg0.msg("Tecle mudanome seguido do nome atual e o novo nome")
  fimse
  indiceitem ind
  txt20 nome.2 # Nome não codificado
  txt20 codif.2 # Nome codificado
  arqsav sav1
# Obtém os nomes
  nome.0 = txtmaimin(txt1(arg1))
  nome.1 = txtmaimin(txt2(arg1))
  codif.0 = txtnome(nome.0)
  codif.1 = txtnome(nome.1)
# Checa se o segundo personagem já existe
  se nome.0 == nome.1
    ret arg0.msg("Os dois nomes correspondem ao mesmo personagem.")
  senao inttotal(nome.1) < 3 || inttotal(nome.1) > 16
    ret arg0.msg("O novo nome deve ter de 3 a 16 caracteres.")
  senao intnome(nome.1)
    ret arg0.msg("O novo nome não é válido.")
  senao ind.obj("un " + codif.1)
    ret arg0.msg("Personagem " + nome.1 + " já está sendo usado.")
  senao codif.0 != codif.1 && sav1.existe("sav1/" + codif.1 + ".sav")
    ret arg0.msg("Personagem " + nome.1 + " já existe.")
  fimse
# Jogador online
  uint8 mudou
  se ind.obj("un " + codif.0)
    ref r
    r = ind.obj("un " + codif.0)
    r.cnome = "un " + codif.1
    r.nome = nome.1
    r.perso.cnome = "pn " + codif.1
    r.perso.nome = nome.1
    mudou = 1
  fimse
# Jogo salvo
  se sav1.existe("sav1/" + codif.0 + ".sav")
    textotxt t
    textopos p
    t.ler("sav1/" + codif.0 + ".sav")
    p = t.ini
    p.txtproc("\nnome=") >= 0 && p.mudar(nome.1, 5, 100)
    t.salvar("sav1/" + codif.1 + ".sav")
    codif.0 != codif.1 && sav1.apagar("sav1/" + codif.0 + ".sav")
    mudou = 1
  fimse
# Informa se mudou
  se !mudou
    arg0.msg("Personagem " + nome.0 + " não existe.")
  senao
    arg0.msg("Personagem " + nome.0 + " mudou para " + nome.1 + ".")
    cmdlog(arg0, "mudanome", "Mudou personagem jogador " + nome.0 + " para " + nome.1)
  fimse
