classe cmd_falar
herda comando_comum
const posic = 5
const txtajuda = "\b\c3Falar\b\n\
Sintaxe: FALAR <mensagem>\n\
         '<mensagem>\n\
Envia mensagem para todos os personagens que estiverem na mesma sala.\n\
A mensagem pode aparecer diferente se for iniciada com reticências ou\n\
terminada com reticências, interrogação ou exclamação."

func escr
  ret !arg1, arg0.msg("Tecle a mensagem após FALAR.")
  ret arg0.dono.s_falar, arg0.msg(arg0.dono.s_falar)
  $mens.p(arg0)
  $mens.mens = $miscbebida.msgperso(arg1, arg0.p_bebida)
  se txt(arg1, 0, 3) == "..."
    $mens.mtodos1(config:continuarmsg)
  senao txtfim(arg1, 1) == "?"
    $mens.mtodos1(config:perguntarmsg)
  senao txtfim(arg1, 1) == "!"
    $mens.mtodos1(config:exclamarmsg)
  senao txtfim(arg1, 3) == "..."
    $mens.mtodos1(config:ponderarmsg)
  senao
    $mens.mtodos1(config:falarmsg)
  fimse
# Executa eventos
  listaobj l
  epara l.addfim(arg0.evento), l, l.ini.remove
    l.objini.cmd_falou(arg0, arg1)
  efim


classe cmd_gritar
herda comando_comum
const posic = 5
const objcmd = config:gritartipo ? este
const txtajuda = config:gritartipo ? txtajuda1
const txtajuda1 = "\b\c3Gritar\b\n\
Sintaxe: GRITAR <mensagem>\n\
Envia mensagem para todos os personagens que estiverem na mesma área."

func escr
  ref r
  txt100 area
  se arg0.pnivel < config:gritarnivel
    ret arg0.msg("Para gritar você precisa estar no nível " + config:gritarnivel + ".")
  senao !arg1
    ret arg0.msg("Tecle a mensagem após GRITAR.")
  senao arg0.pmove < config:gritarmove
    ret arg0.msg("Você está cansad" + (arg0.msexo ? "o" : "a") + " demais.")
  fimse
  epara r = arg0.dono, r, r = r.dono
    area = r.s_area
    ret r.s_gritar, arg0.msg(r.s_gritar)
  efim
  arg0.pmove -= config:gritarmove
  $mens.p(arg0)
  $mens.mens = $miscbebida.msgperso(arg1, arg0.p_bebida)
  indiceitem item
  epara item.ini("pn "), txt1(item.txt) == "pn", item.depois
    continuar item.obj.var.u_[arg0.nome]
    epara r = item.obj.dono, r.dono, r = r.dono
      r.s_gritar && (r = nulo)
    efim
    r.s_gritar && (r = nulo)
    r.s_area == area && item.obj.msg($mens.proc(config:gritarmsg, item.obj))
  efim
# Executa eventos
  listaobj l
  epara l.addfim(arg0.evento), l, l.ini.remove
    l.objini.cmd_gritou(arg0, arg1)
  efim


classe cmd_sussurrar
herda comando_comum
const posic = 5
const txtajuda = "\b\c3Sussurrar\b\n\
Sintaxe: SUSSURRAR <personagem> <mensagem>\n\
Sussurra uma mensagem para um personagem que está na mesma sala.\n\
A mensagem é enviada reservadamente para o personagem escolhido.\n\
Os outros apenas ficam sabendo que você sussurrou alguma coisa."

func escr
  $mens.mens = ""
  $mens.p(arg0)
  ret !arg1, arg0.msg("Sussurrar para quem?")
  ret !txt2(arg1), arg0.msg("Sussurrar o que?")
  ret arg0.dono.s_falar, arg0.msg(arg0.dono.s_falar)
  nomeobj n
  listaobj l
  n.ini(txt1(arg1), 1)
  l.addfim(arg0.dono.dentro2)
  epara nulo, l, l.ini.remove
    continuar !l.objini.visivel(arg0) || !n.nome(l.objini.ident, l.objini.objtot)
    se l.objini.var.u_[arg0.nome]
      arg0.msg(l.objini.nome + " ignora suas palavras.")
    senao arg0.var.u_[l.objini.nome]
      arg0.msg("Você está ignorando " + l.objini.nome)
    senao arg0 == l.objini
      $mens.p(arg0, l.objini)
      $mens.mtodos1(config:sussurrar1msg)
    senao
      $mens.p(arg0, l.objini)
      $mens.mens = $miscbebida.msgperso(txt2(arg1), arg0.p_bebida)
      $mens.mtodos3(config:sussurrar2msg, config:sussurrar2msg, config:sussurrar3msg)
    fimse
    sair
  efim
# Executa eventos
  ref r
  r = l.objini
  l.remove
  epara l.addfim(arg0.evento, r.evento), l, l.ini.remove
    l.objini.cmd_sussurrou(arg0, r, arg1)
  efim
# Mensagem se não encontrou o personagem
  !r && arg0.msg("Você não vê " + txt1(arg1) + ".")
