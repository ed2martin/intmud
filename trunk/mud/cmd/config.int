classe cmd_config
herda comando_comum
const posic = 0
const txtajuda = arg0.jogconfig.23 ? txtajuda1 + txtajuda2 : txtajuda1
const txtajuda1 = aj1 + (config:chattipo ? aj2) + (config:novatostipo ? aj3) + (config:emocaotipo\
 ? aj4) + aj5
const aj1 = "\b\c3Config\b\n\
Sintaxe: CONFIG +<opção>\n\
         CONFIG -<opção>\n\
Altera algumas preferências do seu personagem. Um sinal de + ou de -\n\
seguido de uma opção ativa ou desativa a opção. Para saber as atuais\n\
preferências, tecle apenas CONFIG, sem parâmetros.\n\n\
As opções são:\n\
  \c2DESC\b      Mostra descrições completas (como ao digitar OLHAR)\n\
  \c2SAIDAS\b    Mostra as saídas visíveis após a descrição da sala\n\
  \c2CORES\b     Recebe sequência de cores no padrão ANSI (somente Telnet)\n\
  \c2ACENTO\b    Recebe letras com acentuação (codificação ISO8859-1)\n\
  \c2TELEPATIA\b Recebe mensagens com o comando Telepatia\n"
const aj2 = "  \c2CHAT\b      Participa do canal de comunicação CHAT\n"
const aj3 = "  \c2NOVATOS\b   Participa do canal de comunicação NOVATOS\n"
const aj4 = "  \c2EMOÇÃO\b    Mostra (e) nas mensagens geradas com esse comando\n"
const aj5 = "  \c2SEGUIR\b    Se outros personagens podem escolher seguir você\n\
  \c2MOEDAS\b    Pega as moedas do corpo do personagem após vencer uma batalha\n\
  \c2PROMPT\b    Ativa o prompt normal\n\
  \c2BROMPT\b    Ativa o prompt de batalha"
const txtajuda2 = "\n\
Opções para administradores:\n\
  \c2IMORTAL\b   Não morre em batalha, sempre consegue fugir, enxerga tudo exceto\n\
            cego e no escuro, tranca e destranca tudo, atravessa coisas\n\
            fechadas, anda sem gastar movimento\n\
  \c2SALA\b      Mostra o nome da sala cadastrada antes do título\n\
  \c2QUEM\b      O comando QUEM mostra onde cada jogador está no MUD\n\
  \c2INVQUEM\b   Ocultar a presença no comando quem\n\
  \c2INVSALA\b   Invisível a não administradores\n\
  \c2AC\b        Participa do canal de comunicação AC (administração)\n\
  \c2ADMLOG\b    Canal ADMLOG - é informado sobre mudanças online no MUD\n\
  \c2CMDLOG\b    Canal CMDLOG - é informado quando alguém usar Cmd, Cmdp,\n\
            Cmdj, ApagarSav, MudaNome, Ban ou teleportar outro jogador\n\
  \c2EXECLOG\b   Canal EXECLOG - só tem utilidade para programadores\n\
            informa quando a variável exec chegar a 0 (bug no programa)"
# As próximas constantes são as opções do comando CONFIG
# Cada constante contém o índice da variável de jogconfig
# As variáveis "opc_" contém o int1 de jogconfig que correspondente à opção
# Números de 0 a 13 são as opções disponíveis a todos
# Números de 14 a 23 são as opções disponíveis aos administradores
const opc_desc = 0
const opc_saidas = 1
const opc_cores = 2
const opc_acento = 3
const opc_chat = config:chattipo ? 4
const opc_seguir = 5
const opc_prompt = 6
const opc_bprompt = 7
const opc_telepatia = 8
const opc_emocao = config:emocaotipo ? 9
const opc_moedas = 10
const opc_novatos = config:novatostipo ? 11
const opc_imortal = 14
const opc_execlog = 15
const opc_sala = 16
const opc_invquem = 17
const opc_invsala = 18
const opc_ac = 19
const opc_quem = 20
const opc_admlog = 21
const opc_cmdlog = 22
# Nota: o bit 23 é reservado para indicar se é administrador

func escr
  prog p
  txt512 x
  txt512 y
  int1 opc.32
  opc.bits = arg0.jogconfig.bits
  se !arg1
    epara p.inifunc(este, "opc_"), p.lin, p.depois
      se !txt([p.texto])
      senao opc.[[p.texto]]
        x += " +" + txtmai(txt(p.texto, 4))
      senao [p.texto] < 14 || arg0.jogconfig.23
        y += " -" + txtmai(txt(p.texto, 4))
      fimse
    efim
    arg0.msg("CONFIG" + x + y)
    ret
  fimse
  x = txttroca(arg1, "+", " +")
  x = txttroca(x, "-", " -")
  x = txtremove(x, "EMD")
  txt512 mudou
  enquanto x
    epara p.inifunc(este, "opc_" + txt(txt1(x), 1)), p.lin, p.depois
      sair ([p.texto] < 14 || arg0.jogconfig.23) && txt([p.texto])
    efim
    se !p.lin
      y += " " + txt1(x)
    senao txt(x, 0, 1) == "+"
      opc.[[p.texto]] = 1
      mudou += " +" + txtmai(txt(p.texto, 4))
    senao txt(x, 0, 1) == "-"
      opc.[[p.texto]] = 0
      mudou += " -" + txtmai(txt(p.texto, 4))
    senao
      y += " " + txt1(x)
    fimse
    x = txt2(x)
  efim
  ret y, arg0.msg("Opção inexistente:" + y)
# Checa a propriedade INVIS
  se arg0.jogconfig.18 != opc.18 # Se a propriedade INVIS mudou
    arg0.recalc = 1 # Deverá atualizar bitinv
  fimse
# Checa a propriedade IMORTAL
  se arg0.jogconfig.14 != opc.14 # Se a propriedade IMORTAL mudou
    arg0.recalc = 1 # Deverá atualizar bitver
  fimse
# Checa a propriedade SEGUIR
  se !opc.5 # Se não pode ser seguido
    epara nulo, arg0.lseguir, arg0.lseguir.ini.remove
      arg0.lseguir.objini.msg("Você pára de seguir " + arg0.descnome + ".")
    efim
  fimse
# Atualiza a configuração
  arg0.jogconfig.bits = opc.bits
  arg0.sock.jogconfig.bits = opc.bits
  arg0.msg("Configuração alterada:" + mudou)
