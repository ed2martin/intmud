classe cmd_acender
herda comando_comum
const txtajuda = "\b\c3Acender\b\n\
Sintaxe: ACENDER <objeto>\n\
Acende um objeto (um fósforo, uma lamparina, etc)."
const posic = 5

func escr
  listaobj l
  nomeobj n # Para reconhecer os itens
  textotxt nomes # Nomes dos itens pegos
  ret !arg1, arg0.msg("Acender o quê?")
  n.ini(arg1, 1)
  epara l.addfim(arg0.dentro1, arg0.dono.dentro1), l, l.ini.remove
    continuar !l.objini.visivel(arg0) || !n.nome(l.objini.ident, l.objini.objtot)
    ref r
    r = l.objini
# Checa se pode acender
    se !r.luzitem || r.luzitem == 3
      ret arg0.msg("Você não consegue acender " + r.descnome + ".")
    senao !r.luztempo
      ret arg0.msg(txtcopiamai(r.descnome, "A") + " não acende mais.")
    senao r.luztempo > 0
      ret arg0.msg(txtcopiamai(r.descnome, "A") + " já está aces" + (r.msexo ? "o." : "a."))
    senao r.luzitem == 6 # Se requer fogo para acender
      l.limpar
      epara l.addfim(arg0.dentro1, arg0.dono.dentro1), l, l.ini.remove
        sair int(l.objini.luzitem) >= 3 && int(l.objini.luztempo) > 0
      efim
      ret !l.objini, arg0.msg("Você precisa de fogo para acender " + r.descnome + ".")
    senao r.luzitem == 7 # Se acende ao vestir
      ret arg0.msg("Você acenderá " + r.descnome + " quando usar.")
    fimse
# Eventos
    l.limpar
    epara l.addfim(arg0.evento, r.evento), l, l.ini.remove
      ret l.objini.cmd_acender(arg0, r), nulo
    efim
# Acende
    r.luztempo.pos, r.recalc = 1, r.ajustapeso
    $mens.p(arg0, nulo, r)
    $mens.mvis1(r.luzliga ? r.luzliga : "$P acende $o.")
    epara l.addfim(arg0.evento, r.evento), l, l.ini.remove
      ret l.objini.cmd_acendeu(arg0, r), nulo
    efim
    ret
  efim
  arg0.msg("Você não vê isso.")


classe cmd_apagar
herda comando_comum
const txtajuda = "\b\c3Apagar\b\n\
Sintaxe: APAGAR <objeto>\n\
Apaga um objeto (um fósforo, uma lamparina, etc)."
const posic = 5

func escr
  listaobj l
  nomeobj n # Para reconhecer os itens
  textotxt nomes # Nomes dos itens pegos
  ret !arg1, arg0.msg("Apagar o quê?")
  n.ini(arg1, 1)
  epara l.addfim(arg0.dentro1, arg0.dono.dentro1), l, l.ini.remove
    continuar !l.objini.visivel(arg0) || !n.nome(l.objini.ident, l.objini.objtot)
    ref r
    r = l.objini
# Checa se pode apagar
    se !r.luzitem || r.luzitem == 3
      ret arg0.msg("Você não consegue apagar " + r.descnome + ".")
    senao !r.luztempo || r.luztempo < 0
      ret arg0.msg(txtcopiamai(r.descnome, "A") + " já está apagad" + (r.msexo ? "o." : "a."))
    fimse
# Eventos
    l.limpar
    epara l.addfim(arg0.evento, r.evento), l, l.ini.remove
      ret l.objini.cmd_apagar(arg0, r), nulo
    efim
# Apaga
    r.luztipo == 5 ? (r.luztempo = 0) : r.luztempo.neg, r.recalc = 1, r.ajustapeso
    $mens.p(arg0, nulo, r)
    $mens.mvis1("$P apaga $o.")
    epara l.addfim(arg0.evento, r.evento), l, l.ini.remove
      ret l.objini.cmd_apagou(arg0, r), nulo
    efim
    ret
  efim
  arg0.msg("Você não vê isso.")
