classe cmd_aulas
herda comando_comum
const txtajuda = "\b\c3Aulas\b\n\
Sintaxe: AULAS [nome ou número do curso]\n\
Sem argumentos mostra quem dá aulas e o que ensina.\n\
Seguido de um nome ou o número na lista mostra informações sobre um curso.\n\
Para aprender, tecle APRENDER seguido do nome ou número do curso."
const posic = 5
txt200 lin
int8 abre # Usado internamente: horário de abertura
int8 fecha # Usado internamente: horário de fechamento
uint32 aulas # Usado internamente: quantas aulas ensina
uint32 valor # Usado internamente: preço da aula
real2 lucro # Para calcular o lucro do vendedor
int32 linha
txt30 tipo1 # arg0.tipo1
txt30 tipo2 # arg0.tipo2
txt30 tipo3 # arg0.tipo3

func escr
  tipo1 = arg0.tipo1 ? "\n" + txte(arg0.tipo1) + "\n" : ""
  tipo2 = arg0.tipo2 ? "\n" + txte(arg0.tipo2) + "\n" : ""
  tipo3 = arg0.tipo3 ? "\n" + txte(arg0.tipo3) + "\n" : ""
  arg1 ? escr2(arg0, arg1) : escr1(arg0)

func escr1 # Consultar a lista de aulas
  textotxt t
  listaobj l
  linha = 1, l.addfim(arg0.dono.dentro2)
  epara l.remove(arg0), l, l.ini.remove
    continuar l.objini.atkenv || !l.objini.lojaaula(arg0)
    lin = l.objini.cmd_ensinar(arg0)
    se lin
      t.addfim(txtcopiamai(l.objini.descnome, "A") + ": " + lin)
      continuar
    senao tipo1 && txtproc("\n" + txte(l.objini.lojanao) + "\n", tipo1) >= 0
      t.addfim(txtcopiamai(l.objini.descnome, "A") + ": Não negocio com " + arg0.tipo1)
      continuar
    senao tipo2 && txtproc("\n" + txte(l.objini.lojanao) + "\n", tipo2) >= 0
      t.addfim(txtcopiamai(l.objini.descnome, "A") + ": Não negocio com " + arg0.tipo2)
      continuar
    senao tipo3 && txtproc("\n" + txte(l.objini.lojanao) + "\n", tipo3) >= 0
      t.addfim(txtcopiamai(l.objini.descnome, "A") + ": Não negocio com " + arg0.tipo3)
      continuar
    fimse
    abre = l.objini.lojaini - misc:hora, fecha = l.objini.lojafim - misc:hora
    se abre < fecha ? abre > 0 || fecha <= 0 : abre > 0 && fecha <= 0
      t.addfim(txtcopiamai(l.objini.descnome, "A") + ": Volte outra hora")
      continuar
    senao
      listaobj e
      epara e.addfim(arg0.evento, l.objini.evento), e, e.ini.remove
        lin = e.objini.cmd_negociar(arg0, l.objini, "aprender")
        sair lin
      efim
      se lin
        t.addfim(txtcopiamai(l.objini.descnome, "A") + ": " + lin)
        continuar
      fimse
    fimse
    t.addfim("\b\c6" + txtcopiamai(l.objini.descnome, "A") + " ensina:\b")
    lucro = l.objini.taxaaula / 100
    textotxt t2
    t2.addfim(l.objini.lojaaula(arg0))
    enquanto t2.linhas
      continuar !(lin = t2.remove)
      aulas = txt2(lin)
      valor = lucro * $[misc:objvar(lin)].valor(arg0)
      lin = "\b\c2" + linha + (linha < 10 ? "\b. " : "\b.") + misc:nomevar(txt1(lin))
      lin += txtesp(40 - inttotal(lin + valor)) + "$" + valor
      aulas && (lin += "   (" + txtsublin(misc:aulas, aulas, 1) + ")")
      t.addfim(lin), linha += 1
    efim
  efim
  se t.linhas
    arg0.msg2(t.remove(1000))
  senao
    arg0.msg("Não há professores aqui.")

func escr2 # Consultar uma aula
  listaobj l
  nomeobj n
  linha = 0, l.addfim(arg0.dono.dentro2), n.ini(arg1, 1)
  epara l.remove(arg0), l, l.ini.remove
    continuar l.objini.atkenv || !l.objini.lojaaula(arg0) || l.objini.cmd_ensinar(arg0)
    continuar tipo1 && txtproc("\n" + txte(l.objini.lojanao) + "\n", tipo1) >= 0
    continuar tipo2 && txtproc("\n" + txte(l.objini.lojanao) + "\n", tipo2) >= 0
    continuar tipo3 && txtproc("\n" + txte(l.objini.lojanao) + "\n", tipo3) >= 0
    abre = l.objini.lojaini - misc:hora, fecha = l.objini.lojafim - misc:hora
    continuar abre < fecha ? abre > 0 || fecha <= 0 : abre > 0 && fecha <= 0
    listaobj e
    epara e.addfim(arg0.evento, l.objini.evento), e, e.ini.remove
      sair e.objini.cmd_negociar(arg0, l.objini, "aprender")
    efim
    continuar e
    textotxt t2
    epara t2.addfim(l.objini.lojaaula(arg0)), t2.linhas, t2.remove
      continuar !(lin = t2.ini.texto)
      lin = misc:nomevar(txt1(lin)), linha += 1
      continuar !n.nome(lin, 1) && txt(linha) != arg1
      ref r
      r = $[misc:objvar(t2.ini.texto)]
      valor = r.valor(arg0) * l.objini.taxaaula / 100
      aulas = txt2(t2.ini.texto)
      t2.limpar
      t2.addfim(r.habajuda)
      se t2.bytes <= 1
        t2.limpar
        t2.addfim("\b\c3" + lin + "\b")
      fimse
      t2.addini("\b\c6" + txtcopiamai(l.objini.descnome, "A") + " explica:\b")
      lin = "Ensino até o nível " + txtmin(txtsublin(misc:aulas, aulas, 1))
      lin += valor <= 0 ? ", não cobro nada." : ", cobro $" + valor + " por aula."
      t2.addfim(lin)
      ret arg0.msg2(t2.remove(1000))
    efim
  efim
  arg0.msg("Ninguém ensina isso aqui.")
