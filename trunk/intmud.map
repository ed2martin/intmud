[teste]
herda bom dia
comum int8 x1
int1 x2
int1 x3
int1 x4
const nn = arg0*2+args
#func iniclasse
#teste:x1 = teste:f1(10,20)
#2
#"abc" + teste:nn(4)
#teste:var + teste:var
#teste:var = 10
#ret teste:var
#args(teste:var)
func f1
  ret arg0+1
varfunc var
  ret 4

[bom dia]
int1 y1
int1 y2
int1 y3

[abc def]
#herda teste, bom dia
int8 inteiro8
uint16 teste1
int1 z1
int1 z2
# bom dia
const c1 = (1 | 2) & 3
comum int1 n1
comum uint8 n2
func f
x=1
se x=0
  bom_dia:n(1)
  n("teste")
  $teste.n1("abc" "def")
  $teste.n2("abc" + "def")
fimse #teste
saidas = ds1("norte", "n") + ds1("sul", "s")
prg.var("comandos", txt1(arg0))
abc = -0.0000415+-x-(3+!"teste")*(!1+2)

[teste2]
int8 x2
int1 x3
int1 x4
func iniclasse
  ref r
#criar(arg0, 5).x2 += 5
  ret
  r = criar(arg0, 2)
# r.x2 += 10
 teste2:f1.x2 += teste2:var + 3 + 2
  apagar(r)
func f1
  int8 lixo
  ref nn
  nn = $teste2
  ret nn
varfunc var
  ret 8
func ini
  x2 = arg0
func fim
  10

[testesock]
socket s
int1 recebeu
func iniclasse
  criar(arg0)
func ini
  s.abrir("localhost", 1963)
func s_msg
  se recebeu=0
    recebeu=1
    s.msg("\n")
#func s_fechou # Se estiver ausente, apaga objeto
func fim
  terminar
