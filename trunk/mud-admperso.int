classe jog_admperso
# Comandos de personagem
#
const adm_perso = "\b\c3Comandos de personagens não jogador\b\n\
\c2LPERSO\b [nome]\n\
  Lista personagens que começam com o nome especificado.\n\
\c2CPERSO\b <tipo> <nome>\n\
  Cria personagem. Tipo é uma letra entre P, B ou A:\n\
  P pacífico, B pode batalhar, A pode usar animais\n\
  Nome deve ser o nome de uma área ou do personagem\n\
  (nome da área seguido de um número de três dígitos de 001 a 999).\n\
\c2EPERSO\b <nome>\n\
  Edita personagem.\n\
\c2APERSO\b <nome>\n\
  Apaga personagem."

func cmd_lperso # Listar personagens
  prog p
  se !p.iniclasse("p_" + arg0)
    msg("\bNenhum personagem encontrado.")
  senao
    textotxt t
    t.addfim("\bPersonagens:")
    enquanto p.lin && t.linhas < 500
      t.addfim(txt(p.texto, 2) + "  " + [p.texto]:nome)
      p.depois
    efim
    msg2(t.remove(500))
  fimse
  ret 1

func cmd_cperso # Criar personagem
  prog p
  uint16 num
  txt40 deriv
  txt40 nome
# Obtém a classe base conforme o tipo de personagem
  casovar txtmin(txt1(arg0))
  casose "p"
    deriv = "comum_perso"
    sair
  casose "b"
    deriv = "comum_persobat"
    sair
  casose "a"
    deriv = "comum_persoanimal"
    sair
  casose
    msg("Tecle o tipo e o nome após CPERSO; os tipos válidos são:")
    msg("P pacífico, B pode batalhar, A pode usar animais")
    ret 1
  casofim
# Checa se digitou nome do personagem
  nome = txt2(arg0)
  se nome == ""
    msg("Tecle o nome do personagem após CPERSO e o tipo")
    ret 1
  fimse
# Checa nome completo
  num = int(txtfim(nome, 3)) + 1000
  se num > 1000 && txtfim(num, 3) == txtfim(arg0, 3)
    se !p.existe("a_" + txt(nome, 0, inttotal(nome) - 3))
      msg("Área não existe: " + txt(nome, 0, inttotal(nome) - 3))
      ret 1
    senao p.existe("p_" + nome)
      msg("Personagem já existe: " + nome)
      ret 1
    fimse
# Checa nome de área
  senao !p.existe("a_" + nome)
    msg("Área não existe: " + nome)
    ret 1
  senao
    epara num = 1001, p.existe("p_" + nome + txtfim(num, 3)), num += 1
      continuar num < 2000
      msg("Atingido limite de personagens na área " + nome)
      ret 1
    efim
    nome += txtfim(num, 3)
  fimse
# Cria personagem
  txt100 area
  area = txt(nome, 0, inttotal(nome) - 3)
  p.criar("p_" + nome + "\na-" + area + "\nherda " + deriv)
  config:salvar
  msg("\bPersonagem criado: " + nome)
  ret 1

func cmd_aperso # Apagar personagem
  prog p
  se arg0 == ""
    msg("Tecle um ou mais nomes do personagem após APERSO")
    ret 1
  fimse
  uint16 x
  enquanto txtsub(arg0, x, 1)
    se !p.existe("p_" + txtsub(arg0, x, 1))
      msg("Personagem não existe: " + txtsub(arg0, x, 1))
      ret 1
    fimse
    x += 1
  efim
  tpasso = arg0, p_aperso
  ret 1

func p_aperso # Confirmar que quer apagar personagem
  passo = ""
  se arg0 == "n"
    msg("Cancelado")
  senao arg0 == "s"
    prog p
    uint16 x
    enquanto txtsub(tpasso, x, 1)
      p.apagar("p_" + txtsub(tpasso, x, 1))
      x += 1
    efim
    config:salvar
    se x < 2
      msg("Personagem apagado: " + tpasso)
    senao
      msg("Personagens apagados: " + tpasso)
    fimse
  senao
    txt20 m1
    passo = "aperso"
    m1 = txt2(tpasso) ? "personagens" : "personagem"
    msg("Apagar " + m1 + " " + tpasso + "? Tecle S ou N")
  fimse
  ret 1

func cmd_eperso # Editar personagem
  prog p
  uint8 num
  se !p.existe("p_" + arg0)
    msg("\bPersonagem não existe: " + arg0)
  senao !p.existe("adm_perso" + (num = p_[arg0]:perso))
    msg("\bPersonagem não pode ser editado: " + arg0)
  senao
    var.classe1 = "p_" + txtmin(arg0)
    m_menu("adm_perso" + num)
  fimse
  ret 1


classe adm_pcomum
const nome1 = "Nome"
const tipo1 = "linha"
const classe1 = var.classe1
const var1 = "nome"
#
const nome2 = "Palavras chave"
const info2 = "Palavras que os jogadores digitam para se referir ao item"
const tipo2 = "linha"
const classe2 = var.classe1
const var2 = "ident"
#
const nome3 = "Sexo"
const info3 = "Aleatório escolhe um quando o personagem é criado"
const tipo3 = "opcao"
const classe3 = var.classe1
const var3 = "sexoini"
const extra3 = "feminino\nmasculino\naleatório"
#
const nome4 = "Descrição padrão"
const info4 = "Descrição quando está na sala"
const tipo4 = "linha"
const classe4 = var.classe1
const var4 = "descpos"
#
const nome5 = "Descrição ao ver"
const tipo5 = "texto"
const classe5 = var.classe1
const var5 = "descver"
#
const nome6 = "Posição padrão"
const tipo6 = "opcao"
const classe6 = var.classe1
const var6 = "pospadr"
const extra6 = "morto (não usar essa opção)\n\
mortalmente ferido\n\
incapacitado\n\
fraco\n\
dormindo\n\
descansando\n\
sentado\n\
lutando (não usar essa opção)\nem pé"
#
const nome7 = "Tipo 1"
const info7 = "Os tipos são as funções misc:tipo_ do arquivo misc.int"
const tipo7 = "linha"
const classe7 = var.classe1
const var7 = "tipo1"
#
const nome8 = "Tipo 2"
const info8 = "Os tipos são as funções misc:tipo_ do arquivo misc.int"
const tipo8 = "linha"
const classe8 = var.classe1
const var8 = "tipo2"
#
const nome9 = "Peso"
const info9 = "Em gramas"
const tipo9 = "numero"
const classe9 = var.classe1
const var9 = "pesoobj"
const extra9 = "1 1000000000"
#
const nome12 = "Volume"
const tipo12 = "numero"
const extra12 = "1 1000000000"
const var12 = "volobj"
#
const nome10 = "Volume máximo"
const tipo10 = "numero"
const classe10 = var.classe1
const var10 = "volmax"
#
const nome11 = "Objetos máximo"
const tipo11 = "numero"
const classe11 = var.classe1
const var11 = "objmax"
#
const nome12 = "Expande"
const info12 = "Volume aumenta se tiver itens dentro"
const tipo12 = "simnao"
const classe12 = var.classe1
const var12 = "volexp"
#
const nome41 = "Variáveis"
const tipo41 = "linha"
const classe41 = var.classe1
const var41 = "inivar"
#
const nome42 = "Eventos perso"
const info42 = "Receber eventos do próprio personagem"
const tipo42 = "simnao"
const classe42 = var.classe1
const var42 = "eveste"
#
const nome43 = "Eventos em perso"
const info43 = "Se recebe eventos do dono se for personagem"
const tipo43 = "simnao"
const classe43 = var.classe1
const var43 = "evperso"
#
const nome44 = "Eventos em item"
const info44 = "Se recebe eventos do dono se for item"
const tipo44 = "simnao"
const classe44 = var.classe1
const var44 = "evitem"
#
const nome45 = "Eventos em sala"
const info45 = "Se recebe eventos da sala se estiver em uma sala"
const tipo45 = "simnao"
const classe45 = var.classe1
const var45 = "evsala"


classe adm_perso1
herda adm_pcomum
const titulo = "Perso simples " + txt(var.classe1, 2)


classe adm_perso2
herda adm_pcomum
const titulo = "Perso batalha " + txt(var.classe1, 2)
#
const nome13 = "Movimento"
const tipo13 = "opcao"
const classe13 = var.classe1
const var13 = "p_mover"
const extra13 = "não sai do lugar\nsomente na área\nqualquer lugar"
#
const nome14 = "Agressivo"
const tipo14 = "opcao"
const classe14 = var.classe1
const var14 = "p_agressivo"
const extra14 = "pacífico\nse atacarem\nsim"


classe adm_perso3
herda adm_perso2
const titulo = "Perso completo " + txt(var.classe1, 2)
