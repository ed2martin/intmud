classe jog_admperso
# Comandos de personagem
#
const adm_perso = "\b\c3Comandos de personagens não jogador\b\n\
\c2LPERSO\b [nome]\n\
  Lista personagens que começam com o nome especificado.\n\
\c2CPERSO\b <nome>\n\
  Cria personagem. Nome deve ser o nome de uma área ou do personagem\n\
  (nome da área seguido de um número de três dígitos de 001 a 999).\n\
\c2EPERSO\b <nome>\n\
  Edita personagem.\n\
\c2APERSO\b <nome>\n\
  Apaga personagem."

func cmd_lperso # Listar personagens
  prog p
  se !p.iniclasse("p_" + arg0)
    msg("\bNenhum personagem encontrado.")
  senao
    textotxt t
    txt100 lin
    t.addfim("\bPersonagem Tipo Quantidade Nome")
    enquanto p.lin && t.linhas < 500
      lin = txt(p.texto, 2) + " " + txt(" SBA", [p.texto]:perso, 1)
      se inttotal($[p.texto]) == [p.texto]:objsolto.total
        lin += " " + inttotal($[p.texto])
      senao
        lin += " " + [p.texto]:objsolto.total + "/" + inttotal($[p.texto])
      fimse
      t.addfim(lin + "  " + [p.texto]:nome)
      p.depois
    efim
    msg2(t.remove(500))
  fimse
  ret 1

func cmd_cperso # Criar personagem
  prog p
  txt40 nome
  uint16 num
# Checa se digitou nome da sala
  se arg0 == ""
    msg("Tecle o nome do item ou da área após CPERSO")
    ret 1
  fimse
# Checa nome completo
  nome = arg0
  num = int(txtfim(nome, 3)) + 1000
  se num > 1000 && txtfim(num, 3) == txtfim(arg0, 3)
    se !p.existe("a_" + txt(nome, 0, inttotal(nome) - 3))
      msg("Área não existe: " + txt(nome, 0, inttotal(nome) - 3))
      ret 1
    senao p.existe("p_" + nome)
      msg("Personagem já existe: " + nome)
      ret 1
    fimse
# Checa nome de área
  senao !p.existe("a_" + nome)
    msg("Área não existe: " + nome)
    ret 1
  senao
    epara num = 1001, p.existe("p_" + nome + txtfim(num, 3)), num += 1
      continuar num < 2000
      msg("Atingido limite de personagens na área " + nome)
      ret 1
    efim
    nome += txtfim(num, 3)
  fimse
# Pergunta que tipo de personagem criar
  var.opcclasse = nome
  ret p_cperso("\b")

func p_cperso # Escolher o tipo de personagem ao criar
  txt40 deriv
  casovar txtmin(arg0)
  casose
    msg("Opção inválida")
  casose "\b"
  casose ""
    passo = "cperso"
    msg("Entre com o tipo de personagem, O mostra as opções, Z cancela")
    ret 1
  casose "z"
    msg("Retornando ao jogo")
    passo = "", var.opcclasse = ""
    ret 1
  casose "o"
    txtmais.limpar
    txtmais.addfim("S Simples/pacífico")
    txtmais.addfim("B Pode batalhar")
    txtmais.addfim("A Pode usar animais")
    txtmostra
    ret 1
  casose "s"
    deriv = "comum_perso"
    sair
  casose "b"
    deriv = "comum_persobat"
    sair
  casose "a"
    deriv = "comum_persoanimal"
    sair
  casofim
# Cria item
  prog p
  txt100 area
  area = txt(var.opcclasse, 0, inttotal(var.opcclasse) - 3)
  p.criar("p_" + var.opcclasse + "\na-" + area + "\nherda " + deriv)
  config:salvar
  msg("\bPersonagem criado: " + var.opcclasse)
  admlog("criou personagem " + var.opcclasse)
  passo = "", var.opcclasse = ""
  ret 1

func cmd_aperso # Apagar personagem
  prog p
  se arg0 == ""
    msg("Tecle um ou mais nomes de personagens após APERSO")
    ret 1
  fimse
  uint16 x
  enquanto txtsub(arg0, x, 1)
    se !p.existe("p_" + txtsub(arg0, x, 1))
      msg("Personagem não existe: " + txtsub(arg0, x, 1))
      ret 1
    fimse
    x += 1
  efim
  tpasso = arg0, p_aperso
  ret 1

func p_aperso # Confirmar que quer apagar personagem
  passo = ""
  se arg0 == "n"
    msg("Cancelado")
  senao arg0 == "s"
    prog p
    uint16 x
    enquanto txtsub(tpasso, x, 1)
      p.apagar("p_" + txtsub(tpasso, x, 1))
      x += 1
    efim
    config:salvar
    se x < 2
      msg("Personagem apagado: " + tpasso)
      admlog("apagou personagem " + tpasso)
    senao
      msg("Personagens apagados: " + tpasso)
      admlog("apagou personagens " + tpasso)
    fimse
  senao
    txt20 m1
    passo = "aperso"
    m1 = txt2(tpasso) ? "personagens" : "personagem"
    msg("Apagar " + m1 + " " + tpasso + "? Tecle S ou N")
  fimse
  ret 1

func cmd_eperso # Editar personagem
  prog p
  uint8 num
  se arg0 == ""
    msg("Tecle o nome do personagem após EPERSO")
  senao !p.existe("p_" + arg0)
    msg("\bPersonagem não existe: " + arg0)
  senao !p.existe("adm_perso" + (num = p_[arg0]:perso))
    msg("\bPersonagem não pode ser editado: " + arg0)
  senao
    var.classe1 = "p_" + txtmin(arg0)
    m_menu("adm_perso" + num)
  fimse
  ret 1


classe adm_pcomum1
const nome1 = "Nome"
const tipo1 = "linha"
const classe1 = var.classe1
const var1 = "nome"
#
const nome2 = "Palavras chave"
const info2 = "Palavras que os jogadores digitam para se referir ao item"
const tipo2 = "linha"
const classe2 = var.classe1
const var2 = "ident"
#
const nome3 = "Sexo"
const info3 = "Aleatório escolhe um quando o personagem é criado"
const tipo3 = "opcao"
const classe3 = var.classe1
const var3 = "sexoini"
const extra3 = "Feminino\nMasculino\nAleatório"
#
const nome4 = "Descrição padrão"
const info4 = "Descrição quando está na sala na posição padrão"
const tipo4 = "linha"
const classe4 = var.classe1
const var4 = "descpadr"
#
const nome5 = "Descrição ao ver"
const tipo5 = "texto"
const classe5 = var.classe1
const var5 = "descver"
#
const nome6 = "Peso"
const info6 = "Em gramas"
const tipo6 = "numero"
const classe6 = var.classe1
const var6 = "pesoobj"
const extra6 = "1 1000000000"
const mudou6 = "ajustapeso"
#
const nome7 = "Volume"
const tipo7 = "numero"
const extra7 = "1 1000000000"
const classe7 = var.classe1
const var7 = "volobj"
const mudou7 = "ajustapeso"
#
const nome8 = "Volume dentro"
const tipo8 = "numero"
const classe8 = var.classe1
const var8 = "volmax"
#
const nome9 = "Expande"
const info9 = "Volume aumenta se tiver itens dentro"
const tipo9 = "simnao"
const classe9 = var.classe1
const var9 = "volexp"
const mudou9 = "ajustapeso"
#
const nome10 = "Objetos máximo"
const tipo10 = "numero"
const classe10 = var.classe1
const var10 = "objmax"
#
const nome11 = "Nível"
const tipo11 = "numero"
const classe11 = var.classe1
const var11 = "nivel"
#
const nome12 = "Posição padrão"
const tipo12 = "opcao"
const classe12 = var.classe1
const var12 = "pospadr"
const extra12 = "Morto (não usar essa opção)\n\
Mortalmente ferido\n\
Incapacitado\n\
Fraco\n\
Dormindo\n\
Descansando\n\
Sentado\n\
Lutando (não usar essa opção)\nEm pé"
#
const nome13 = "Tipo 1"
const info13 = "Os tipos são as funções misc:tipo_ do arquivo misc.int"
const tipo13 = "linha"
const classe13 = var.classe1
const var13 = "tipo1"
#
const nome14 = "Tipo 2"
const info14 = "Os tipos são as funções misc:tipo_ do arquivo misc.int"
const tipo14 = "linha"
const classe14 = var.classe1
const var14 = "tipo2"
#
const nome15 = "Tipo 3"
const info15 = "Os tipos são as funções misc:tipo_ do arquivo misc.int"
const tipo15 = "linha"
const classe15 = var.classe1
const var15 = "tipo3"
#
const nome16 = "Recebe itens"
const info16 = "Se outros personagens podem dar itens para este"
const tipo16 = "simnao"
const classe16 = var.classe1
const var16 = "p_recebe"
#
const nome17 = "Não podem seguir"
const tipo17 = "simnao"
const classe17 = var.classe1
const var17 = "p_naoseguir"
#
const nome18 = "Anda em silêncio"
const info18 = "Não informa outros personagens quando muda de sala"
const tipo18 = "simnao"
const classe18 = var.classe1
const var18 = "p_silencio"
#
const nome41 = "Variáveis"
const tipo41 = "linha"
const classe41 = var.classe1
const var41 = "inivar"
#
const nome42 = "Eventos perso"
const info42 = "Receber eventos do próprio personagem"
const tipo42 = "simnao"
const classe42 = var.classe1
const var42 = "eveste"
const mudou42 = "ajustaev"
#
const nome43 = "Eventos em perso"
const info43 = "Se recebe eventos do dono se for personagem"
const tipo43 = "simnao"
const classe43 = var.classe1
const var43 = "evperso"
const mudou43 = "ajustaev"
#
const nome44 = "Eventos em item"
const info44 = "Se recebe eventos do dono se for item"
const tipo44 = "simnao"
const classe44 = var.classe1
const var44 = "evitem"
const mudou44 = "ajustaev"
#
const nome45 = "Eventos em sala"
const info45 = "Se recebe eventos da sala se estiver em uma sala"
const tipo45 = "simnao"
const classe45 = var.classe1
const var45 = "evsala"
const mudou45 = "ajustaev"


classe adm_pcomum2
const nome19 = "Morreu"
const info19 = "Quando não tem dono"
const tipo19 = "linha"
const classe19 = var.classe1
const var19 = "p_morreu1"
#
const nome20 = "Desmaiou"
const info20 = "Quando pertence a outro personagem"
const tipo20 = "linha"
const classe20 = var.classe1
const var20 = "p_morreu2"
#
const nome21 = "Movimentar"
const tipo21 = "opcao"
const classe21 = var.classe1
const var21 = "p_mover"
const extra21 = "Não sai do lugar\nSomente na área\nQualquer lugar"
#
const nome22 = "Tempo move"
const nome22 = "Tempo médio em décimos de segundo para ir para outra sala"
const tipo22 = "numero"
const classe22 = var.classe1
const var22 = "p_movervel"
const extra22 = "5 1000"
#
const nome23 = "Agressivo"
const tipo23 = "opcao"
const classe23 = var.classe1
const var23 = "p_agressivo"
const extra23 = "Pacífico\nSe atacarem\nSim"
#
const nome24 = "Sem resgate"
const info24 = "Se não é possível resgatar jogadores desse personagem"
const tipo24 = "simnao"
const classe24 = var.classe1
const var24 = "p_naoresg"


classe adm_perso1
herda adm_pcomum1
const titulo = "Perso simples " + txt(var.classe1, 2)


classe adm_perso2
herda adm_pcomum1, adm_pcomum2
const titulo = "Perso batalha " + txt(var.classe1, 2)
#
const nome25 = "Capturar"
const info25 = "Se pode ser capturado"
const tipo25 = "opcao"
const classe25 = var.classe1
const var25 = "p_captura"
const extra25 = "Não\nMuito fácil\nFácil\nNormal\nDifícil\nMuito difícil"
#
const nome26 = "Dar e soltar"
const info26 = "Se esse personagem pode ser dado ou solto"
const tipo26 = "opcao"
const classe26 = var.classe1
const var26 = "p_soltar"
const extra26 = "Pode-se dar e soltar\n\
Pode-se apenas soltar\n\
Não se pode dar nem soltar"


classe adm_perso3
herda adm_pcomum1, adm_pcomum2
const titulo = "Perso completo " + txt(var.classe1, 2)
