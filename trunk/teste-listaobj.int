classe teste
comum serv servidor
socket conec
listaobj lista
const msg = conec.msg(arg0)
func iniclasse
  se ![arg0]:servidor.abrir("", 2000)
    terminar
func servidor_socket
  criar("teste", arg0)
func ini
  conec = arg0
  msg("l - mostra a lista\n")
  msg("t - mostra os objetos\n")
  msg("x - teste com lista local\n")
  msg("y - teste sem listaitem\n")
  msg("e - encerrar o programa\n")
  msg("f - fim (apenas fecha conexão)\n")
  lista.addfim(criar("porta"))
  lista.addfim(criar("janela"))
  lista.addfim(criar("cadeira"))
  lista.addfim(criar("janela"))
func conec_msg
  se !escr_[txt1(arg0)](txt2(arg0))
    msg("O quê?\n")
func escr_l
  listaitem item
  item = lista.ini
  msg("Lista pertence a " + lista.objlista + "/" + item.objlista + "\n")
  msg("Lista contém (" + lista.total + "):\n")
  enquanto item
    msg(txt(item.obj) + "\n")
    item.depois
  efim
  ret 1
func escr_t
  msg("porta = " + porta:total + "\n")
  msg("janela = " + janela:total + "\n")
  msg("cadeira = " + cadeira:total + "\n")
  ret 1
func escr_x
  listaobj l1
  listaitem i1
  l1.addfim($janela)
  l1.addfim($janela)
  l1.addfim($cadeira)
#i1 = l1.ini
#i1.depois
#i1.addfim($porta)
#i1.remove
  msg("Lista local\n")
  i1 = l1.fim
  enquanto i1
    msg(txt(i1.obj) + "\n")
    i1.antes
  efim
  ret 1
func escr_y
  listaobj l1
  l1.addfim($janela)
  l1.addfim($cadeira)
  l1.addfim($cadeira)
  msg("Lista local (" + l1.total + ")\n")
  enquanto l1.ini
    msg(txt(l1.ini.obj) + "   (" + l1.total + ")\n")
    l1.ini.remove
  efim
  ret 1
func escr_e
  terminar
func escr_f
  apagar(este)
  ret 1

classe comum
comum uint16 total
func ini
  total += 1
func fim
  total -= 1

classe porta
herda comum

classe janela
herda comum

classe cadeira
herda comum
