classe a_teste
herda area
const a_nome = "Testes e exemplos"


classe b_teste
herda sala
const s_area = "teste"
const s_terreno = 1
const s_luta = 1


classe i_teste001
herda comum_item
const nome = "borracha"
const descnome = "uma borracha"
const msexo = 0
const descpos = "Uma borracha está jogada aqui."
const vestir = 8


classe i_teste002
herda comum_item
const nome = "pedra"
const descnome = "uma pedra"
const msexo = 0
const descpos = "Aqui tem uma pedra."
const pesoobj = 200


classe i_teste003
herda comum_itemgrupo
const nome = "carne crua"
const descnome = "uma carne crua"
const pesoobj = 50
const i_captura = 4
const volobj = 4
const pnivel = 4


classe i_teste004
herda comum_itemgrupo
const nome = "carne cozida"
const descnome = "uma carne cozida"
const pesoobj = 100
const volobj = 8
const i_captura = 8


classe i_teste005
herda comum_itemperso
const nome = "bolsa"
const descnome = "uma bolsa"
const pesoobj = 200
const volobj = 30
const volmax = 5000
const objmax = 20
const i_abertoini = 2 # Container: 2 Inicialmente aberto
const i_tranc = 1 # Trancar: 1 Pode ser trancado
const tipoitem = 2048 # Tipo de produto: Container


classe i_teste006
herda comum_itemperso
const nome = "tocha"
const descnome = "uma tocha"
const luzini = -600
const luztxt = "Uma tocha se apagou"
const luzfim = 1 # Sem luz item some: Sim
const luzitem = 6 # Tipo de luz: 6 Tocha (acende com fogo, produz fogo)
const tipoitem = 256 # Tipo de produto: Fonte de luz


classe i_teste007
herda comum_itemperso
const nome = "lanterna"
const descnome = "uma lanterna"
const luzitem = 1 # Tipo de luz: 1 Lanterna (acende/apaga, sem fogo)
const luzini = -6000
const luztxt = "Uma lanterna apagou."
const tipoitem = 256 # Tipo de produto: Fonte de luz


classe i_teste008
herda comum_itemperso
const nome = "lampião"
const descnome = "um lampião"
const msexo = 1 # Sexo: 1 Masculino
const luzitem = 4 # Tipo de luz: 4 Lampião (acende/apaga, produz fogo)
const luzini = -3000
const luztxt = "Um lampião apagou."
const tipoitem = 256 # Tipo de produto: Fonte de luz


classe i_teste009
herda comum_itemgrupo
const nome = "palito de fósforo"
const descnome = "um palito de fósforo"
const msexo = 1 # Sexo: 1 Masculino
const tipoitem = 256 # Tipo de produto: Fonte de luz


classe i_teste010
herda comum_itemperso
const nome = "fósforo aceso"
const descnome = "um fósforo aceso"
const msexo = 1 # Sexo: 1 Masculino
const luzini = 80
const luzitem = 3 # Tipo de luz: 3 Não aceita acender/apagar, produz fogo
const luztxt = "Um palito de fósforo acaba de queimar."
const luzfim = 1 # Sem luz item some: Sim


classe i_teste011
herda comum_itemperso
const nome = "caixa de fósforo"
const descnome = "uma caixa de fósforo"
const eveste = 1 # Receber eventos do próprio objeto
sav uint8 palitos # Quantidade de palitos de fósforo da caixa
const luzitem = 5 # Tipo de luz: 5 Fósforo (acende uma vez, produz fogo)
const luztempo = -10 # Quantidade de luz; para indicar que sempre pode acender
const tipoitem = 256 # Tipo de produto: Fonte de luz

func cmd_ini
  palitos = 20

func descver
  se !palitos
    ret "Está vazia."
  senao palitos == 1
    ret "Contém um palito."
  senao
    ret "Contém " + palitos + " palitos."

func cmd_acender
  se !palitos
    arg0.msg("Caixa de fósforo está vazia.")
  senao
    palitos -= 1
    criar("i_teste010", arg0, 0) # Cria um palito aceso
    $mens.p(arg0)
    $mens.mvis1("$P risca um palito de fósforo.")
  fimse
  ret 1


classe i_teste012
herda comum_itemgrupo
const nome = "faca"
const descnome = "uma faca"
const pesoobj = 300
const armatipo = 3 # Arma tipo: 1 Lâmina curta
const armaprecisao = 100
const armamin = 70
const armamax = 120
const valor = 50
const armatipoatk = 2 # Ataque tipo: 2 Cortante
const descpos = "Há uma faca no chão."
const tipoitem = 3 # Tipo de produto: Possui metal, Arma


classe i_teste013
herda comum_itemgrupo
const nome = "colete"
const descnome = "um colete"
const msexo = 1 # Sexo: 1 Masculino
const pesoobj = 1000
const vestir1 = 64 # Aonde vestir: 6-sobre o corpo
const descpos = "Um colete está jogado aqui."
const valor = 300
const nivel = 1
const tipoitem = 8 # Tipo de produto: Vestimenta

func cmd_recalc2 # Recalcula variáveis do personagem
  arg0.defnorm += 10 # Ganha 10 pontos de defesa contra ataques normais
# Nota os tipos de ataque são considerados normais ou especiais conforme
# a constante config:atkespecial, no arquivo mud-b-config.int
# Mas não é necessário editar diretamente; use o comando econfig para isso


classe i_teste014
herda comum_itemgrupo
const nome = "colete dos elfos"
const descnome = "o colete dos elfos"
const msexo = 1 # Sexo: 1 Masculino
const pesoobj = 1000
const vestir1 = 64 # Aonde vestir: 6-sobre o corpo
const pnivel = 3
const tipoitem = 8 # Tipo de produto: Vestimenta

func cmd_podevestir
# Essa função é chamada sempre que um personagem tenta vestir um item
# Se ela retornar um texto, será apresentado o texto ao invés de vestir
# Nota:
# dono.tipo1 é a raça
# dono.tipo2 é a classe
  se dono.tipo1 != "elfo" # Checa se a raça é "elfo"
    ret "Somente elfos podem vestir o colete dos elfos."

func recalc_auto # Altera atributos do personagem
# Não alterar; função criada automaticamente
  defnorm += 15


classe i_teste015
herda comum_itemgrupo
const nome = "capa da invisibilidade"
const descnome = "uma capa da invisibilidade"
const descver = "Essa capa é capaz de deixar alguém quase que completamente invisível.\n\
Há, no entanto, uns óculos que permitem ver através da capa."
const vestir1 = 64 # Aonde vestir: Sobre o corpo

func recalc_auto # Altera atributos do personagem
# Não alterar; função criada automaticamente
  bitinv = 4 | bitinv


classe i_teste016
herda comum_itemgrupo
const nome = "óculos especiais"
const descnome = "uns óculos especiais"
const msexo = 1 # Sexo: 1 Masculino
const descver = "Esses óculos permitem ver coisas invisíveis."
const vestir1 = 2 # Aonde vestir: 1-rosto

func recalc_auto # Altera atributos do personagem
# Não alterar; função criada automaticamente
  bitver = 4 | bitver


classe i_teste017
herda comum_itemgrupo
const nome = "camisa"
const descnome = "uma camisa"
const vestir1 = 32 # Aonde vestir: 5-corpo


classe i_teste018
herda comum_itemgrupo
const nome = "sapatos"
const descnome = "um par de sapatos"
const msexo = 1 # Sexo: 1 Masculino

func recalc_auto # Altera atributos do personagem
# Não alterar; função criada automaticamente
  pmovemax += 5
  atknorm += 10
  precisao += -4

const vestir1 = 262144 # Aonde vestir: 18-pés


classe i_teste019
herda comum_itemgrupo
const nome = "algemas"
const descnome = "um par de algemas"
const pesoobj = 300
const vestir1 = 131584 # Aonde vestir: 9-mãos, 17-tornozelos
const evperso = 1 # Eventos em perso: Sim
const i_fechadura = "algema1"

func recalc_auto # Altera atributos do personagem
# Não alterar; função criada automaticamente
  pveloc1 += -2 * pnivel - 3
  atknorm += -2 * pnivel - 10
  evasao += -1 * pnivel - 2

func cmd_mover
# Nos tornozelos, prejudica os pontos de movimento
  se vestpos == 18 && arg0.pmove < arg0.pmovemax * 0.3
    arg0.msg("Você está cansad" + (arg0.msexo ? "o" : "a") + " demais.")
    ret 1

func cmd_moveu
  se vestpos == 18 # Usando nos tornozelos
    arg0.pmove -= arg0.pmovemax * 0.3
  senao vestpos # Usando em qualquer outro lugar
    arg0.pmove -= 1

func cmd_remover
  se i_fechadura # Se tem fechadura: só pode remover se o jogador tiver a chave
    listaitem i
    epara i = arg0.dentro1.ini, i, i.depois
      ret i_fechadura == i.obj.i_chave && i.obj.visivel(arg0), nulo
    efim
    arg0.msg("Você não possui a chave de " + descnome + ".")
    ret 1


classe i_teste020
herda comum_itemgrupo
const nome = "chave das algemas"
const descnome = "a chave das algemas"
const i_chave = "algema1"


classe p_teste001
herda comum_perso
const nome = "Jardineiro"
const descpadr = "Um jardineiro está sentado aqui."
const msexo = 1 # 0=feminino, 1=masculino
const p_recebe = 1 # Se pode receber itens de outros personagens
const eveste = 1 # Receber eventos do próprio objeto
const evsala = 1 # Receber eventos do dono se o dono for sala

func cmd_chegou # Chegou na sala
  ret !arg0.jog, nulo # Retorna se não for jogador
  misc:tempo("entrou", arg0) # Dispara funções 'entrou'

func entrou10
  arg0.msg("Jardineiro disse: Olá.")

func entrou20
  arg0.msg("Jardineiro disse: Preciso de uma pedra.")

func cmd_darobj # Alguém deu algum item
# telatxt t
# t.msg(">" + arg0 + "/" + arg1 + "/" + arg2 + "\n")
  se arg2.nome == "pedra"
    apagar(arg2) # Apaga o item
    misc:tempo("deupedra", arg0) # Dispara 'deupedra'
  senao
    arg0.msg("Jardineiro não aceita " + arg2.descnome + ".")
    ret 1 # Para não receber o item

func deupedra15
  arg0.msg("Jardineiro jogou a pedra na planta carnívora.")
  arg0.var.j_planta = 1 # Indica que já passou pela planta

const pesoobj = 80000


classe p_teste002
herda comum_persobat
const nome = "macaco"
const descnome = "um macaco"
const descpadr = "Um macaco está fazendo bagunça aqui."
const descver = "Mamífero quadrúmeno.\nVocê não vê nada de especial."
const msexo = 1 # 0=feminino, 1=masculino
const p_captura = 3 # Capturar: 3 Normal
const p_agressivo = 2 # Agressivo: 2 Sim
const pesoobj = 30500
const volobj = 500
const tipo1 = "luta"
const inivar = "h_socar=1,h_chutar=1"
const sexoini = 2 # Sexo Perso: 2 Aleatório


classe p_teste003
herda comum_persobat
const nome = "cão"
const descnome = "um cão"
const descpadr = "Um cão late para você."
const descver = "Mamífero da família dos canídeos."
const msexo = 1 # 0=feminino, 1=masculino
const p_captura = 2 # Capturar: 2 Fácil
const p_agressivo = 2 # Agressivo: 2 Sim
const pesoobj = 30100
const volobj = 500
const inivar = "h_arremessar=1"
const sexoini = 2 # Sexo Perso: 2 Aleatório


classe p_teste004
herda comum_persobat
const nome = "morcego"
const descnome = "um morcego"
const descpadr = "Um morcego está voando."
const descver = "Mamífero da ordem dos quirópteros"
const msexo = 1 # 0=feminino, 1=masculino
const p_captura = 4 # Capturar: 4 Difícil
const p_agressivo = 2 # Agressivo: 2 Sim
const pesoobj = 30500
const volobj = 500
const tipo1 = "ar"
const inivar = "h_arremessar=1"

func recalc_auto # Altera atributos do personagem
# Não alterar; função criada automaticamente
  pveloc1 += 2 * pnivel

const sexoini = 2 # Sexo Perso: 2 Aleatório


classe p_teste005
herda comum_persoanimal
const nome = "Lixeiro"
const msexo = 1 # Sexo: 1 Masculino
const pesoobj = 75300
const volobj = 1000
const p_naoresg = 1 # Sem resgate: Sim
const nivel = 8
const p_agressivo = 2 # Agressivo: 2 Sim


classe p_teste006
herda comum_persobat
const nome = "geléia"
const descnome = "uma geléia"
const msexo = 0 # Sexo: 0 Feminino
const pesoobj = 10000
const nivel = 3
const tipo1 = "água" # Inclui também os atributos na classe tipo_agua

func cmd_recalc1 # Recalcula variáveis do personagem
  deftipo.0 = 0 # Imune a ataques de contusão
  deftipo.2 *= 0.5 # Frágil contra ataques cortantes
  defnorm *= 1.5 # Mais forte contra ataques normais
  defesp *= 0.7 # Mais fraco contra ataques especiais
  pvidamax += 100 # 100 pontos a mais de vida
# Veja também a variável deftipo, no arquivo em mud-perso.int


classe p_teste007
herda comum_perso
const nome = "João o mercenário"
const msexo = 1 # Sexo: 1 Masculino
const tipo1 = "Humano"
const lojaitem = "teste012 3\nteste013 0"
const taxavenda = 20
const taxacompra = 30
const lojanao = ""
const tipoitem = 3 # Compra produtos: Possui metal, Arma


classe p_teste008
herda comum_perso
const nome = "Faixa preta"
const msexo = 1 # Sexo: 1 Masculino
const tipo1 = "Humano"
const lojaaula = "h_Chutar 3\n\
h_Voadora 7\n\
h_Morder 4\n\
i_Hebráico 2\n\
m_Fogo 4\n\
m_Retornar 8\n\
m_Identificar 8\n\
h_Visível 8\n\
h_Ocultar 8\n\
h_Furtividade 8\n\
m_Ver_Invisível 8\n\
m_Ver_Oculto 8\n\
m_Invisibilidade 8\n\
m_Flutuar 8\n\
m_Cegueira 8\n\
m_Curar_Cegueira 8"
const taxaaula = 50
const lojanao = ""


classe p_teste009
herda comum_perso
const nome = "Perito"
const msexo = 1 # Sexo: 1 Masculino
const tipo1 = "Anão"
const lojaaula = "h_Varinha 8\n\
h_Cajado 8\n\
h_Lâmina_curta 8\n\
h_Lâmina_longa 8\n\
h_Maca_e_Martelo 8\n\
h_Mangual 8\n\
h_Chicote_e_Corrente 8\n\
h_Arma_exótica 8\n\
h_Segundo_ataque 8\n\
h_Terceiro_ataque 8"
const taxaaula = 50
const lojanao = ""


classe p_teste010
herda comum_perso
const nome = "Prefeito"
const msexo = 1 # Sexo: 1 Masculino
const tipo1 = "Elfo"
const evsala = 1 # Eventos em sala: Sim

func cmd_chegou # Chegou na sala
  ret !arg0.jog, nulo # Retorna se não for jogador
  misc:evento(arg0) # Receber eventos do jogador
  misc:tempo("entrou", arg0) # Dispara funções 'entrou'

func entrou10 # 1 segundo depois do jogador chegar
  arg0.msg("Prefeito: Olá. Você pode vir morar nessa cidade por míseras 20 moedas.")

func entrou30 # 3 segundos depois do jogador chegar
  arg0.msg("Prefeito: Basta falar: Desejo morar aqui.")

func cmd_falou
  se arg1 == "Desejo morar aqui."
    ret arg0.var.z_salafim == txt(dono), arg0.msg("Prefeito: Mas você já mora aqui.")
    ret arg0.var.z_moedas_ < 20, arg0.msg("Prefeito: Você não tem 20 moedas")
    arg0.var.z_moedas_ -= 20
    arg0.var.z_salafim = dono
    $mens.p(este, arg0)
    $mens.mtodos1("Prefeito disse para $a: Agora seu ponto de retorno é aqui.")


classe p_teste011
herda comum_persobat
const msexo = 1 # Sexo: 1 Masculino
const nome = "camundongo gigante"
const descnome = "um camundongo gigante"
const p_corpo = 2 # Quando morre: 2 Deixa corpo com itens e moedas

func recalc_auto # Altera atributos do personagem
# Não alterar; função criada automaticamente
  pvidamax += -40


classe p_teste012
herda comum_perso
const nome = "Adestradora de animais raros"
const ident = "adestradora"
const descpadr = "Adestradora de animais raros está aqui, esperando por clientes."
const evsala = 1 # Receber eventos do dono se o dono for sala

func cmd_chegou # Alguém chegou na mesma sala
  ret !arg0.jog, nulo # Retorna se não for jogador
  misc:evento(arg0) # Receber eventos do personagem

func cmd_falou
  se arg1 == "branco"
    se arg0.dentro2.objini("p_teste013")
      arg0.msg("Adestradora: Mas você já possui uma duende branca!")
    senao !arg0.animalmais
      arg0.msg("Adestradora: Você não tem espaço para receber mais animais")
    senao
      txt200 habs
      habs = "z_dono=Adestradora_de_animais,m_Curar=4,m_Raio_confusão=4"
      habs += ",m_Sono_profundo=4,m_Sopro_de_gelo=4,h_Meditar=4"
      refvar r = criar("p_teste013", arg0, 3, habs)
      $mens.p(arg0, r)
      $mens.mvis1("Adestradora dá $a para $P.")
    fimse
  senao arg1 == "negro"
    se arg0.dentro2.objini("p_teste014")
      arg0.msg("Adestradora: Mas você já possui um duende negro!")
    senao !arg0.animalmais
      arg0.msg("Adestradora: Você não tem espaço para receber mais animais")
    senao
      txt200 habs
      habs = "z_dono=Adestradora_de_animais,h_Explodir=4,h_Choque=1"
      habs += ",h_Onda_trovão=4,h_Drenar=4,h_Endurecer=4,h_Meditar=4"
      refvar r = criar("p_teste014", arg0, 3, habs)
      $mens.p(arg0, r)
      $mens.mvis1("Adestradora dá $a para $P.")
    fimse


classe p_teste013
herda comum_persobat
const nome = "Duende branca"
const equip1 = 262182 # Equip posições: 1-rosto, 2-olhos, 5-corpo, 18-pés
const equip2 = 16 # Equip adicionar: 4-pescoço


classe p_teste014
herda comum_persobat
const nome = "Duende negro"
const msexo = 1 # Sexo Msg: 1 Masculino


classe s_teste001
herda b_teste
const s_titulo = "Entrada"
const s_desc = "Aqui há duas portas, uma ao norte, que leva ao início do jogo, e uma\n\
ao sul para uma área de testes e exemplos. Para desabilitar a área de\n\
testes, digite econfig, como administrador e mude a opção \"Sala inicial\"\n\
para ini001. Inicialmente a senha de administração é x2."
const s_luz = 1 # Luz: 1 Claro sem eventos de tempo
const dir_n = $s_ini001
const dir_s = $s_teste002
const eveste = 1 # Receber eventos do próprio objeto

func cmd_mover
  se arg2 == "s"
    !arg0.var.h_socar && (arg0.var.h_socar = 3)
    !arg0.var.h_chutar && (arg0.var.h_chutar = 3)
    !arg0.pnivel && (arg0.pnivel = 1)
    arg0.recalc = 1


classe s_teste002
herda b_teste
const s_titulo = "Portaria"
const s_desc = "Cada andar desse pequeno edifício trata de um assunto.\n\
A leste há um pequeno jardim.\n\
A sudeste você pode mudar de nível.\n\
As salas ao sul mostram diversos recursos do MUD.\n\
A oeste há explicações sobre o comando de administração CMD e derivados."
const dir_n = $s_teste001
const dir_l = $s_teste003
const dir_c = $s_teste014
const dir_o = $s_teste033
const dir_se = $s_teste015


classe s_teste003
herda b_teste
const s_titulo = "Jardim"
const s_desc = "Isso é o que restou de um pequeno jardim. Não é grande, mas a grama\n\
já virou mato, de modo que mal se vê as cercas à sua volta.\n\
Há uma placa aqui, com os seguintes dizeres:\n\
Tecle as direções cardeais para ir de um lugar a outro: n s l o\n\
Há também as direções colaterais: ne no se so\n\
Em alguns lugares pode-se ir para cima e para baixo: c b"
const dir_l = $s_teste004
const dir_o = $s_teste002


classe s_teste004
herda b_teste
const s_titulo = "Centro do jardim"
const s_desc = "Aqui o mato é ainda mais alto. À oeste o mato é um pouco mais baixo,\n\
enquanto que ao norte você vê uma pequena trilha. À leste e ao sul não é\n\
possível saber o que há além do mato."
const s_noite = "Aqui o mato é ainda mais alto, e como está escuro, você não consegue\n\
ver o que tem em nenuma direção. Mas aqui começa uma pequena trilha\n\
em direção ao norte."
const dir_o = $s_teste003
const dir_s = $s_teste005
const dir_l = $s_teste006
const dir_n = $s_teste007


classe s_teste005
herda b_teste
const s_titulo = "Jardim"
const s_desc = "Aqui o mato é um pouco mais baixo que ao norte. Há algumas pedras\n\
espalhadas pelo chão. Se fosse de noite, provavelmente teria torcido o pé."
const s_noite = "Está escuro, e você acaba pisando em algumas pedras espalhadas pelo chão,\n\
mesmo andando devagar. Por pouco não torce o pé."
const dir_n = $s_teste004
const dir_ne = $s_teste006

func cmd_salaperso # Personagem chegou
  ret !arg0.jog, nulo # Retorna se não for jogador
  misc:evento(arg0) # Receber eventos do jogador

func cmd_pegarobj # Pegar alguma coisa
  se arg2.nome == "pedra"
    criar("i_teste002", este) # Cria uma pedra na sala

func cmd_soltarobj # Soltar alguma coisa
  se arg2.nome == "pedra"
    apagar(arg2) # Apagará a pedra

const s_reset = "S 100 teste002 0 S"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  !dentro1.objini("i_teste002") && criar("i_teste002", este, 0)


classe s_teste006
herda b_teste
const s_titulo = "Jardim"
const s_desc = "O mato termina repentinamente nessa direção. Há uma parede à leste. Algum\n\
vândalo pixou uma mensagem que mal se entende. Depois de um tempo você lê:\n\
Se houvesse uma minhoca aqui, e você quisesse pegá-la e depois soltá-la,\n\
bastaria teclar pegar minhoca, e em seguida, teclar soltar minhoca.\n\
E se encontrasse um pescador, poderia teclar: dar minhoca pescador\n\
Pode-se abreviar muita coisa, escrevendo só o começo das palavras. Exemplo,\n\
peg minho ou mesmo pe mi ao invés de pegar minhoca."
const dir_o = $s_teste004
const dir_so = $s_teste005
const dir_no = $s_teste007


classe s_teste007
herda b_teste
const s_titulo = "Trilha"
const s_desc = "O mato chega a um metro aqui, e ao sul crece ainda mais. Na direção norte,\n\
vai diminuindo gradativamente. É possível seguir também a sudeste.\n\
Nas outras direções não há trilha, e o mato é denso demais para prosseguir."
const s_noite = "O mato chega a um metro aqui. Na direção norte ele parece diminuir um\n\
pouco. Nas outras direções, você não vê nada além do mato na escuridão."
const dir_s = $s_teste004
const dir_n = $s_teste008
const dir_se = $s_teste006
const eveste = 1 # Receber eventos do próprio objeto
const s_reset = "P 100 teste001 0 0 1"

func cmd_mover
  se arg2 == "n" && !arg0.var.j_planta # Se ainda não passou pela planta carnívora
    arg0.msg("Você começa a ir para o norte, mas uma planta carnívora tenta te comer.")
    arg0.msg("Então você recua.")
    ret 1

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  se p_teste001:objsolto.total < 1
    criar("p_teste001", este, 0)
  fimse


classe s_teste008
herda b_teste
const s_titulo = "Sala ampla"
const s_desc = "Você está em uma sala bastante ampla de uma casa, dizem ser mal assombrada.\n\
Há janelas mas é alto demais para pular. Há também um corredor a leste\n\
e uma passagem ao norte."
const dir_l = $s_teste010
const dir_n = $s_teste009
const dir_s = $s_teste007
const portaini_n = 2


classe s_teste009
herda b_teste
const s_titulo = "Passagem"
const s_desc = "Um pequeno quarto escuro, que deveria levar a algum lugar, mas você não vê\n\
nenhuma saída. As paredes estão cinzas de sujeira e há teias de aranha\n\
por toda parte. Nota-se que ninguém vem aqui há anos."
const dir_s = $s_teste008
const portaini_s = 2


classe s_teste010
herda b_teste
const s_titulo = "Corredor"
const s_desc = "Você está em um corredor que se estende a oeste. Mais adiante há uma\n\
sala bastante ampla. À leste há uma escada para o andar de baixo."
const dir_s = $s_teste011
const dir_o = $s_teste008

func cmd_salaperso # Personagem chegou
  ret !arg0.jog, nulo # Retorna se não for jogador
  misc:tempo("entrou", arg0) # Dispara funções 'entrou'

func entrou10
  arg0.msg("Alguém disse olá")

func ini
  sala:ini
  criar("i_teste001", este)


classe s_teste011
herda b_teste
const s_titulo = "Sala de estar"
const s_desc = "Você está em uma pequena sala com mesa, poltronas e uma televisão. Pode\n\
ir para a cozinha à oeste ou a sala de jantar ao norte. Há também um\n\
corredor estreito para leste e uma escada para o andar de cima, ao sul.\n\
Aqui você pode salvar o personagem teclando salvar"
const dir_n = $s_teste010
const dir_l = $s_teste012

func cmd_salaperso # Personagem chegou
  ret !arg0.jog, nulo # Retorna se não for jogador
  misc:evento(arg0) # Receber eventos do jogador

func cmd_escr # Personagem escreveu alguma coisa
  se arg1 == "salvar"
    arg0.mudasenha # Muda a senha
    ret 1


classe s_teste012
herda b_teste
const s_titulo = "Forno microondas"
const s_desc = "Misteriosamente você acaba de entrar em um forno de microondas.\n\
Há um copo de leite gigante aqui. A tampa é tão pesada que não é possível\n\
saber se está fechada ou trancada. De repente apareceu alguém lá fora e\n\
apertou alguns botões. Está ficando quente, muito quente. Você desmaia."
const s_morre = 1
const dir_o = $ini015


classe s_teste013
herda b_teste
const s_titulo = "Dentro de um armário"
const s_desc = "Esse lugar está completamente abandonado há alguns anos. Há teias de aranha\n\
por todo lado. As paredes de madeira, marrom claro, agora estão pretas de\n\
sujeira. O simples fato de entrar aqui levanta uma poeira que faz você\ntossir."


classe s_teste014
herda b_teste
const s_titulo = "Primeiro andar: Animais e batalha"
const s_desc = "À leste você pode mudar o seu nível.\n\
Ao sul há alguns itens, usados para capturar animais.\n\
À oeste pode batalhar com animais de níveis diferentes.\n\
Ao norte fica um pequeno centro de treinamento de animais."
const dir_b = $s_teste002
const dir_l = $s_teste015
const dir_s = $s_teste016
const dir_o = $s_teste017
const dir_n = $s_teste021
const dir_c = $s_teste023


classe s_teste015
herda b_teste
const s_titulo = "Mudança de nível"
const s_desc = "Aqui você pode mudar o nível do seu personagem.\n\
Tecle A ou AA para aumentar 1 ou 10 níveis\n\
Tecle D ou DD para diminuir 1 ou 10 níveis"
const dir_o = $s_teste014
const eveste = 1 # Eventos sala: Sim

func cmd_salaperso # Personagem chegou
  se arg0.jog
    misc:evento(arg0) # Receber eventos do jogador

func cmd_escr # Escreveu algo
  casovar txtmin(arg1)
  casose "aa"
    arg0.pnivel += 9
    arg0.recalc = 1
  casose "a"
    arg0.pnivel += 1
    arg0.recalc = 1
    se arg0.pnivel > 80
      arg0.msg("Nível máximo é 80")
      arg0.pnivel = 80
    senao
      arg0.msg(arg0.descnome + " é nível " + arg0.pnivel)
    fimse
    ret 1
  casose "dd"
    arg0.pnivel -= 9
    arg0.recalc = 1
  casose "d"
    arg0.pnivel -= 1
    arg0.recalc = 1
    arg0.msg(arg0.descnome + " é nível " + arg0.pnivel)
    ret 1
  casofim

const dir_no = $s_teste002


classe s_teste016
herda b_teste
const s_titulo = "Itens de captura"
const s_desc = "Você pode capturar animais aproximadamente nível 6 com esses itens\n\
no chão. Alguns são mais fáceis, outros mais difíceis.\n\
Pegue alguns, e quando estiver lutando, use o comando capturar. Mas\n\
antes, enfraqueça o animal, senão é mais dífícil de capturar.\n\
Pode pegar itens teclando, por exemplo, \"peg 3 car_cru\" e \"peg 5 car_coz\"."
const dir_n = $s_teste014
const s_reset = "S 100 teste003 10 S\nS 100 teste004 10 S"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  !dentro1.objini("i_teste003") && criar("i_teste003", este, 10)
  !dentro1.objini("i_teste004") && criar("i_teste004", este, 10)


classe s_teste017
herda b_teste
const s_titulo = "Animais"
const s_desc = "Esta é a praça central de um pequeno zoológico. À leste fica a saída.\n\
Nas outras direções, você entra na jaula de alguns animais, e poderá\n\
batalhar com eles. Você pode se recuperar aqui teclando deitar."
const dir_l = $s_teste014
const dir_n = $s_teste018
const dir_o = $s_teste019
const dir_s = $s_teste020

func cmd_salaperso # Personagem chegou
  ret !arg0.jog, nulo # Retorna se não for jogador
  misc:evento(arg0) # Receber eventos do jogador

func cmd_escr # Escreveu algo
  se arg1 == "deitar"
    persobat.restaurar
    listaitem i
    epara i = dentro2.ini, i, i.depois
      i.obj.perso && i.obj.restaurar
    efim
    arg0.restaurar
    $mens.p(arg0)
    $mens.mtodos1("$P descansa e se recupera.")
    ret 1


classe s_teste018
herda b_teste
const dir_s = $s_teste017
const s_titulo = "Macaco"
const s_desc = "Aqui fica um mamífero quadrúmeno. Se alimentam de frutas e de sementes,\n\
ma quem sabe algum deles se interesse por uma bisteca. Geralmente são\n\
inteligentes, sociáveis e muito ágeis, mas esses aqui se sentiram\n\
ameaçados quando você entrou na jaula."
const s_reset = "P 100 teste002 3 6 1"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  se p_teste002:objsolto.total < 1
    criar("p_teste002", este, rand(3, 6))
  fimse


classe s_teste019
herda b_teste
const dir_l = $s_teste017
const s_titulo = "Cão"
const s_desc = "Aqui é a jaula de um mamífero da família dos canídeos. São quadrúpedes,\n\
mas de vez em quando ficam em pé apoiados em duas patas apenas. Esses\n\
aqui são um pouco selvagens, pouco acostumados com a presença humana."
const s_reset = "P 100 teste003 3 6 1 h_socar=1,h_arremessar=1"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  se p_teste003:objsolto.total < 1
    criar("p_teste003", este, rand(3, 6), "h_socar=1,h_arremessar=1")
  fimse


classe s_teste020
herda b_teste
const dir_n = $s_teste017
const s_titulo = "Morcego"
const s_desc = "Esta é a jaula de alguns mamíferos da ordem dos quirópteros. Esses aqui\n\
são basicamente ratos voadores, mas os membros inferiores possuem patágio,\n\
por isso podem funcionar como asas, e esses animais podem voar."
const s_reset = "P 100 teste004 3 6 1 h_arremessar=1"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  se p_teste004:objsolto.total < 1
    criar("p_teste004", este, rand(3, 6), "h_arremessar=1")
  fimse


classe s_teste021
herda b_teste
const s_titulo = "Centro de treinamento"
const s_desc = "Aqui os funcionários do zoológico treinam animais e fazem duelos\n\
entre si. No momento estão descansando, mas você pode desafiá-los\n\
seguindo ao norte."
const dir_s = $s_teste014
const dir_n = $s_teste022


classe s_teste022
herda b_teste
const s_titulo = "Sala"
const s_desc = "Aqui está totalmente vazio. Apenas alguns quadros enfeitam a parede.\n\
O chão é de concreto, dando a impressão de inacabado. No teto há\n\
uma lâmpada pendurada. De dia, a luz vem de duas grandes janelas."
const dir_s = $s_teste021
const s_reset = "P 100 teste005 0 0 1 h_chutar=1,e_apagar=5\n\
A 100 teste003 4 4 h_socar=1\n\
A 100 teste003 5 5 h_socar=1"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  ref p # Último personagem criado
  ref u # Último personagem ou animal criado
  se p_teste005:objsolto.total < 1
    p = u = criar("p_teste005", este, 0, "h_chutar=1,e_apagar=5")
  fimse
  se p.animalmais
    criar("p_teste003", p, 4, "h_socar=1")
  fimse
  se p.animalmais
    criar("p_teste003", p, 5, "h_socar=1")
  fimse


classe s_teste023
herda b_teste
const s_titulo = "Segundo andar: Luz e itens que iluminam"
const s_desc = "À leste você pode pegar uma lamparina.\n\
À oeste há uma sala escura, porém visível se houver uma lamparina."
const dir_b = $s_teste014
const dir_l = $s_teste024
const dir_o = $s_teste025
const dir_c = $s_teste026


classe s_teste024
herda b_teste
const s_titulo = "Itens que produzem luz"
const s_desc = "Aqui há diversos itens que podem ser usados como fonte de luz.\n\
Você pode acender e apagar usando os comandos acender e apagar.\n\
Para acender um fósforo da caixa, basta tentar acender a caixa.\n\
Já a tocha requer algum fogo para ser acesa (fósforo ou lambião)."
const dir_o = $s_teste023
const s_reset = "S 100 teste006 0 S\n\
S 100 teste005 0 S\n\
S 100 teste007 0 S\n\
S 100 teste008 0 S\n\
S 100 teste009 1 S\n\
S 100 teste011 0 S"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  !dentro1.objini("i_teste006") && criar("i_teste006", este, 0)
  !dentro1.objini("i_teste005") && criar("i_teste005", este, 0)
  !dentro1.objini("i_teste007") && criar("i_teste007", este, 0)
  !dentro1.objini("i_teste008") && criar("i_teste008", este, 0)
  !dentro1.objini("i_teste009") && criar("i_teste009", este, 1)
  !dentro1.objini("i_teste011") && criar("i_teste011", este, 0)


classe s_teste025
herda b_teste
const s_titulo = "Quarto escuro"
const s_desc = "Este é um pequeno quarto para revelar fotografias. Não é à toa que é\n\
tão escuro aqui."
const dir_l = $s_teste023
const s_luz = 3 # Luz: 3 Escuro


classe s_teste026
herda b_teste
const s_titulo = "Terceiro andar: Armas e equipamentos"
const s_desc = "Para checar seus atributos tecle estat.\n\
Para aprender a cortar, nessa sala, tecle cortar.\n\
À leste há duas armas e explicações de como criar equipamentos.\n\
À oeste há uma geléia, imune a socos e chutes, mas frágil contra\n\
armas cortantes."
const dir_b = $s_teste023
const dir_c = $s_teste052
const dir_o = $s_teste027
const dir_l = $s_teste028
const eveste = 1 # Eventos sala: Sim

func cmd_salaperso # Personagem chegou
  misc:evento(arg0) # Receber eventos do personagem

func cmd_escr # Escreveu algo
  se arg1 == "cortar"
    arg0.var.h_cortar = 1
    arg0.msg("Você aprende a cortar.")
    ret 1


classe s_teste027
herda b_teste
const s_titulo = "Poço da geléia"
const s_desc = "A vegetação já tomou conta de um antigo poço, de modo que agora\n\
ele é bastante raso, embora bastante largo."
const dir_l = $s_teste026
const s_reset = "P 100 teste006 0 0 1 h_socar=3"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  se p_teste006:objsolto.total < 1
    criar("p_teste006", este, 0, "h_socar=3")
  fimse


classe s_teste028
herda b_teste
const s_titulo = "Criando equipamentos"
const s_desc = "Personagens podem ter algumas propriedades especiais, e alguns itens\n\
também podem mudar alguns atributos de um personagem, quando vestidos.\n\
Veja a opção \"Atributos\" de tipos (raças e classes) e personagens,\n\
e a opção \"Atributos vestir\" de itens."
const dir_o = $s_teste026
const dir_l = $s_teste032
const dir_n = $s_teste029
const dir_s = $s_teste063
const s_reset = "S 100 teste012 3 S\n\
S 100 teste013 3 S\n\
S 100 teste015 1 S\n\
S 100 teste016 1 S"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  !dentro1.objini("i_teste012") && criar("i_teste012", este, 3)
  !dentro1.objini("i_teste013") && criar("i_teste013", este, 3)
  !dentro1.objini("i_teste015") && criar("i_teste015", este, 1)
  !dentro1.objini("i_teste016") && criar("i_teste016", este, 1)


classe s_teste029
herda b_teste
const s_titulo = "Itens restritos"
const s_desc = "Alguns itens só podem ser vestidos ou empunhados por determinados\n\
personagens. O colete dos elfos é um exemplo, só pode ser usado por elfos.\n\
Uma forma de fazer isso é editar a opção \"Não podem vestir\" do item.\n\
Outra é escrevendo a função cmd_podevestir do item. Nesse caso, veja\n\
a classe i_teste014 no arquivo mud-a-teste.int."
const dir_s = $s_teste028
const s_reset = "S 100 teste014 3 S\nS 100 teste017 1 S"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  !dentro1.objini("i_teste014") && criar("i_teste014", este, 3)
  !dentro1.objini("i_teste017") && criar("i_teste017", este, 1)


classe s_teste030
herda b_teste
const s_titulo = "Quinto andar: Loja, professores e ponto de retorno"
const s_desc = "À leste há um vendedor e um professor.\n\
À oeste trata-se do ponto de retorno.\n\
À sudeste você pode matar um PNJ e pegar itens e dinheiro do corpo dele.\n\
Ou pode teclar AA nessa sala, para ficar com mil moedas."
const dir_b = $s_teste052
const dir_c = $s_teste064
const dir_l = $s_teste031
const dir_o = $s_teste049
const dir_s = $s_teste051

func cmd_salaperso # Personagem chegou
  misc:evento(arg0) # Receber eventos do personagem

func cmd_escr # Escreveu algo
  se arg1 == "aa"
    arg0.var.z_moedas = 1000
    arg0.msg("Agora você tem 1000 moedas.")
    ret 1


classe s_teste031
herda b_teste
const s_titulo = "Escola de luta"
const s_desc = "Aqui pode-se ver o que é vendido, teclando lista seguido ou não de um item.\n\
Os comandos comprar, vender e avaliar também podem ser usados em lojas.\n\
Pode-se também saber o que é ensinado teclando aulas, seguido ou não de uma\n\
habilidade. E para aprender, tecle aprender seguido de um número ou uma\n\
habilidade mostrada no comando aulas."
const dir_o = $s_teste030
const s_reset = "P 100 teste007 0 0 1\nP 100 teste008 0 0 1"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  se p_teste007:objsolto.total < 1
    criar("p_teste007", este, 0)
  fimse
  se p_teste008:objsolto.total < 1
    criar("p_teste008", este, 0)
  fimse


classe s_teste032
herda b_teste
const s_titulo = "Ataques manuais e automáticos"
const s_desc = "Os ataques do MUD podem ser automáticos ou manuais. Isso é definido com\n\
o comando ECONFIG.\n\
Se você escolher ataque automático, para empunhar uma arma é necessário\n\
saber lidar com aquele tipo de arma. Este sujeito aqui ensina essas\n\
habilidades. Tecle AULAS para saber o que ele ensina e APRENDER seguido\n\
de um número ou nome para aprender. A cada aula você aprende mais."
const dir_o = $s_teste028
const s_reset = "S 100 teste018 2 S\nP 100 teste009 0 0 1"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  !dentro1.objini("i_teste018") && criar("i_teste018", este, 2)
  se p_teste009:objsolto.total < 1
    criar("p_teste009", este, 0)
  fimse

const dir_l = $s_teste066


classe s_teste033
herda b_teste
const s_titulo = "CMD - Introdução"
const s_desc = "Os comandos de administração CMD, CMDP e CMDJ permitem executar instruções\n\
na linguagem do IntMUD. Todo o MUD foi feito nessa linguagem.\n\
Pode-se carregar itens e personagens em uma sala, ler e alterar algumas\n\
variáveis, como pontos de vida, mana, e vigor, transportar um jogador\n\
para uma sala, entre outras coisas."
const dir_l = $s_teste002
const dir_o = $s_teste034


classe s_teste034
herda b_teste
const s_titulo = "Tipos de CMD"
const s_desc = "Os personagens têm a função morreu, que é chamada quando o personagem\n\
deve morrer. Assim, se quiser matar seu personagem, basta teclar:\n\
cmd morreu\n\
Se quiser matar o personagem de um jogador, chamado Joaquim, tecle:\n\
cmdj joaquim morreu\n\
Se Joaquim for um personagem na sala e você quiser matá-lo, tecle:\n\
cmdp joaquim morreu"
const dir_l = $s_teste033
const dir_o = $s_teste035


classe s_teste035
herda b_teste
const s_titulo = "Corredor"
const s_desc = "A noroeste, teletransportando personagens.\n\
Ao norte, restaurando pontos de vida, mana e movimento.\n\
A sudoeste, mudando o nível.\n\
Ao sul, mudando as habilidades e magias.\n\
A sudeste, mudando a quantidade de dinheiro."
const dir_l = $s_teste034
const dir_no = $s_teste036
const dir_n = $s_teste038
const dir_so = $s_teste039
const dir_s = $s_teste040
const dir_se = $s_teste042
const dir_o = $s_teste043


classe s_teste036
herda b_teste
const s_titulo = "Teletransportando personagens"
const s_desc = "Administradores podem se transportar usar o comando tele. Exemplo:\n\
tele teste002\n\
E transportar um jogador chamado João para teste002 assim:\n\
tele João teste002\n\
Usando o CMD são os seguintes comandos:\n\
cmd mudadono($s_teste002)\n\
cmdj João mudadono($s_teste002)\n\
Mas tele não transporta um personagem da sala. Com CMDP isso é possível."
const dir_se = $s_teste035
const dir_n = $s_teste037


classe s_teste037
herda b_teste
const s_titulo = "Continuação"
const s_desc = "Cuidado ao transportar usando CMD e similares.\n\
Se a sala não existir, o personagem é mandado para o nada, ou seja\n\
não estará em nenhuma sala. Não tem título nem descrição, nem saída.\n\
Nesse caso, basta transportar o jogador novamente, para alguma sala."
const dir_s = $s_teste036


classe s_teste038
herda b_teste
const s_titulo = "Restaurando"
const s_desc = "A função que restaura pontos de vida, mana e movimento chama-se restaurar.\n\
Para restauraurar seu personagem tecle:\n\
cmd restaurar\n\
Para restaurar um jogador chamado João tecle:\n\
cmd joão restaurar"
const dir_s = $s_teste035


classe s_teste039
herda b_teste
const s_titulo = "Mudando de nível"
const s_desc = "Em princípio, colocar o seu personagem no nível 10 é algo assim:\n\
cmd pnivel=10\n\
Mas só isso não é suficiente, porque os pontos de vida, movimento e mais\n\
algumas variáveis não são ajustadas. Então tecle em seguida:\n\
cmd recalc=1\n\
Pode-se combinar as duas instruções em uma única linha, assim:\n\
cmd pnivel=10,recalc=1\n\
Para mudar nível de outro jogador ou personagem, use CMDJ ou CMDP."
const dir_ne = $s_teste035


classe s_teste040
herda b_teste
const s_titulo = "Habilidades e magias"
const s_desc = "Se quiser ter a habilidade socar no nível mais baixo, basta teclar:\n\
cmd var.h_Socar=1\n\
E no nível mais alto, o de perito:\n\
cmd var.h_Socar=8\n\
No entanto, ao fazer var.h_Socar=0, a habilidade aparece no comando\n\
hab como \"Não sabe\". Para realmente apagá-la, tecle:\n\
cmd var.h_socar=\"\""
const dir_n = $s_teste035
const dir_s = $s_teste041


classe s_teste041
herda b_teste
const s_titulo = "Continuação"
const s_desc = "Se quiser checar o quanto sabe de socar, tecle:\n\
cmd var.h_Socar\n\
As habilidade começam com var.h_ e magias começam com var.m_.\n\
Quando houver espaço no nome, troque por sublinhado. Exemplo, supondo\n\
que exista uma magia chamada Bola de fogo, e você quiser tê-la no\n\
nível intermediário, deve teclar:\n\
cmd var.m_Bola_de_fogo=4"
const dir_n = $s_teste040


classe s_teste042
herda b_teste
const s_titulo = "Dinheiro"
const s_desc = "Dinheiro é a variável var.z_moedas_. O sublinhado no final do nome,\n\
nesse caso é necessário para a variável ser interpretada com numérica.\n\
Se quiser ter exatamente 500 moedas, tecle:\n\
cmd var.z_moedas_=500\n\
Se quiser ganhar 300 moedas, tecle:\n\
cmd var.z_moedas_+=300\n\
Pode-se, por exemplo, criar 400 moedas para um jogador chamado João:\n\
cmdj João var.z_moedas_+=400"
const dir_no = $s_teste035


classe s_teste043
herda b_teste
const s_titulo = "Corredor"
const s_desc = "A noroeste, uma calculadora.\n\
Ao norte, carregando personagens.\n\
A nordeste, carregando itens.\n\
Ao sul, apagando personagens e itens."
const dir_l = $s_teste035
const dir_no = $s_teste044
const dir_n = $s_teste046
const dir_ne = $s_teste047
const dir_s = $s_teste048


classe s_teste044
herda b_teste
const s_titulo = "Calculadora"
const s_desc = "Para realizar cálculos basta teclar cmd e o cálculo. Exemplo:\n\
cmd 1+2\n\
É possível usar as quatro operações, + - * /, bem como parênteses.\n\
Exemplo:\n\
cmd 2.5*(3+4)\n\
Rand retorna um número aleatório inteiro. Exemplo, um número de 3 a 8:\n\
cmd rand(3, 8)"
const dir_se = $s_teste043
const dir_n = $s_teste045


classe s_teste045
herda b_teste
const s_titulo = "Continuação"
const s_desc = "O cálculo de raiz quadrada é realizado com a função matraiz.\n\
Exemplo, a raiz quadrada de 2:\n\
cmd matraiz(2)\n\
Existem também funções trigonométricas, exponencial e logaritmo\n\
natural. Para detalhes, consulte o tópico Funções numéricas do manual\n\
do IntMUD."
const dir_s = $s_teste044


classe s_teste046
herda b_teste
const s_titulo = "Carregando personagens"
const s_desc = "O personagem teste002 é um macaco. Para criar um macaco na sala em\n\
que você está, basta teclar:\n\
cmd criar(\"p_teste002\", dono)\n\
Mas cuidado, ele é um personagem agressivo e vai te atacar.\n\
Pode-se definir o nível do animal, assim (nesse caso é de nível 10):\n\
cmd criar(\"p_teste002\", dono, 10)"
const dir_s = $s_teste043


classe s_teste047
herda b_teste
const s_titulo = "Carregando itens"
const s_desc = "O item teste002 é uma pedra. Se quiser ter uma pedra tecle:\n\
cmd criar(\"i_teste002\", este)\n\
Se quiser uma pedra na sala em que você está, tecle:\n\
cmd criar(\"i_teste002\", dono)\n\
Se quiser que um jogador chamado João tenha uma pedra, tecle:\n\
cmdj joão criar(\"i_teste002\", dono)"
const dir_so = $s_teste043


classe s_teste048
herda b_teste
const s_titulo = "Apagando personagens e itens"
const s_desc = "O comando matar1 é o suficiente para apagar um personagem ou item (tirar\n\
do jogo). Exemplo, para apagar o jardineiro, vá até ele e tecle:\n\
matar1 jardineiro\n\
Com o comando cmdp fica assim:\n\
cmdp jardineiro apagar(este)\n\
Entretanto, apagar itens não pode ser feito com CMD e derivados."
const dir_n = $s_teste043


classe s_teste049
herda b_teste
const s_titulo = "Retornar para níveis baixos"
const s_desc = "Como administrador, tecle ECONFIG e mude a opção \"Retornar até nível\" para,\n\
por exemplo, 10. Assim jogadores até nível 10 poderão retornar teclando\n\
retornar. Depois, vá até o centro de uma cidade, tecle ESALA e mude a opção\n\
\"Comando retornar\" para 3. Assim, o comando retornar retornará para a primeira\n\
dessas salas em que o jogador esteve."
const dir_l = $s_teste030
const dir_o = $s_teste050


classe s_teste050
herda b_teste
const s_titulo = "Mais sobre retornar"
const s_desc = "Jogadores de nível mais alto podem retornar usando a magia retornar.\n\
Faixa preta, indo a leste, ensina essa magia.\n\
O personagem prefeito é a classe p_teste010 do arquivo mud-a-teste.int.\n\
Para mudar as mensagens ou o valor que ele cobra, basta mudar essa classe."
const dir_l = $s_teste049
const s_reset = "P 100 teste010 0 0 1"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  se p_teste010:objsolto.total < 1
    criar("p_teste010", este, 0)
  fimse


classe s_teste051
herda b_teste
const s_titulo = "Pegar itens de PNJs"
const s_desc = "Esse pequeno camundongo gigante carrega algumas coisas úteis,\n\
por incrível que possa parecer. Primeiro tecle chutar camundongo.\n\
Quando ele morrer, tecle pegar moedas corpo, depois tecle olhar corpo,\n\
e então pode pegar a faca dele teclando pegar faca corpo.\n\
Obviamente, pode-se usar abreviações. Exemplo, peg fa cor."
const dir_n = $s_teste030
const s_reset = "P 100 teste011 0 0 1 z_moedas=200\nI 100 teste012 1"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  ref p # Último personagem criado
  ref u # Último personagem ou animal criado
  se p_teste011:objsolto.total < 1
    p = u = criar("p_teste011", este, 0, "z_moedas=200")
  fimse
  u && criar("i_teste012", u, 1)


classe s_teste052
herda b_teste
const s_titulo = "Quarto andar: Fórmulas de batalha"
const s_desc = "A leste há explicações sobre danos de batalha.\n\
O principal objetivo é ter uma ideia de como funciona a batalha,\n\
para balancear melhor os itens e personagens. Esses cálculos são\n\
realizados pela classe comando_ataque, no arquivo mud-ataque.int."
const dir_b = $s_teste026
const dir_c = $s_teste030
const dir_l = $s_teste053


classe s_teste053
herda b_teste
const s_titulo = "Acertar o alvo"
const s_desc = "Quando um personagem ataca, primeiro é necessário saber se acertou o alvo.\n\
É sorteado um número de 1 a 20. Se for 20 ou o alvo estiver dormindo,\n\
acertou o golpe. Se for 1, errou o golpe.\n\
Outros valores, some à precisão do personagem e subtraia à evasão do alvo.\n\
Alvo invisível, subtraia 5. Se o resultado for maior que 0, acertou o alvo.\n\
Nota: As precisões do ataque e da arma também são levadas em consideração."
const dir_o = $s_teste052
const dir_l = $s_teste054


classe s_teste054
herda b_teste
const s_titulo = "Danos de batalha"
const s_desc = "Os danos de um ataque dependem basicamente da seguinte fórmula:\n\
danos = ataque_perso * ataque_perso * força_golpe / defesa_alvo / 300\n\
Por exemplo, se você possui 50 pontos de ataque, e dá um chute de força 70\n\
em um personagem com 30 pontos de defesa, os danos serão 50*50*70/30/300,\n\
que resulta em 19 pontos de vida. O valor de 19,444 é arredondado para 19."
const dir_o = $s_teste053
const dir_l = $s_teste055


classe s_teste055
herda b_teste
const s_titulo = "Modificadores de batalha"
const s_desc = "Diversos fatores podem afetar a batalha:\n\
Ao norte, tipo de ataque; nordeste, tipo normal ou especial\n\
A leste, usando uma arma; sudeste, ataque sem armas\n\
Ao sul, posição do alvo; sudoeste, conhecimento do golpe\n\
A noroeste, bônus do personagem"
const dir_o = $s_teste054
const dir_n = $s_teste056
const dir_ne = $s_teste057
const dir_l = $s_teste058
const dir_se = $s_teste059
const dir_s = $s_teste060
const dir_so = $s_teste061
const dir_no = $s_teste062


classe s_teste056
herda b_teste
const s_titulo = "Tipo de ataque"
const s_desc = "Existem diversos tipos de ataque (são definidos com o comando ECONFIG).\n\
É comum um personagem ser forte contra alguns tipos e fraco contra outros,\n\
e algumas vezes pode ser até imune. Ao editar um ataque, escolhe-se o tipo.\n\
Vide também \"Atributos ataque\" e \"Atributos defesa\", ao editar personagens,\n\
itens e classes/raças."
const dir_s = $s_teste055


classe s_teste057
herda b_teste
const s_titulo = "Tipo normal ou especial"
const s_desc = "Alguns tipos de ataque são considerados normais (contusão, luta, terra,\n\
etc) e outros são especiais (fogo, água, luz, etc). O que define se é\n\
normal ou especial é uma opção do comando ECONFIG.\n\
Os tipos normais usam ataque e defesa normal. Os especiais usam ataque e\n\
defesa especial."
const dir_so = $s_teste055


classe s_teste058
herda b_teste
const s_titulo = "Usando uma arma"
const s_desc = "Quando está usando uma arma, o cálculo de danos, passa a ser:\n\
danos = ataque_perso * ataque_arma * força_golpe / defesa_alvo / 300\n\
Portanto, os danos dependem tanto do seu ataque quanto da sua arma.\n\
Nos ataques automáticos, com e sem armas, os danos são multiplicados pela\n\
opção \"Força do ataque automático\" do comando ECONFIG."
const dir_o = $s_teste055


classe s_teste059
herda b_teste
const s_titulo = "Ataque sem armas"
const s_desc = "Nesse caso, é usada a fórmula já apresentada:\n\
danos = ataque_perso * ataque_perso * força_golpe / defesa_alvo / 300\n\
Pode haver ainda uma variação de 10 por cento nos danos, para mais ou\n\
para menos. Quando os dois personagens possuem níveis diferentes,\n\
os danos são multiplicados pelo resultado da seguinte fórmula:\n\
1 + (nível_perso - nível_alvo) / (nível_perso + nível_alvo + 10)\n\
Portanto, atacar personagens de nível mais baixo causa mais danos."
const dir_no = $s_teste055


classe s_teste060
herda b_teste
const s_titulo = "Posição do alvo"
const s_desc = "Dependendo da posição do personagem alvo, os danos causados por um\n\
golpe podem ser maiores.\n\
Sentado, 33% a mais. Descansando, 67% a mais. Dormindo, o dano dobra.\n\
E se estiver incapacitado, 133% a mais."
const dir_n = $s_teste055


classe s_teste061
herda b_teste
const s_titulo = "Conhecimento do golpe"
const s_desc = "Dependendo do quanto o seu personagem conhece um golpe, os danos podem\n\
ser maiores ou menores. Abaixo do nível perito, o ataque é mais fraco.\n\
perito=100%, mestre=90%, muito avançado=80%, avançado=70%,\n\
intermediário=60%, básico=50%, muito básico=40%, iniciante=30%"
const dir_ne = $s_teste055


classe s_teste062
herda b_teste
const s_titulo = "Bônus do personagem"
const s_desc = "Ao editar um ataque, é possível especificar que tipos de personagens\n\
(ou seja, raças e classes) possuem bônus (lidam melhor com o ataque).\n\
Esse bônus aumenta os danos em cinquenta por cento."
const dir_se = $s_teste055


classe s_teste063
herda b_teste
const s_titulo = "Testes"
const s_desc = "Aqui há dois itens para testes. As algemas podem ser usadas nas mãos ou\n\
nos tornozelos, teclando usar algemas mãos ou usar algemas tornozelos.\n\
Quando usado nos tornozelos, perde-se muitos pontos de movimento ao andar.\n\
Há também outro trigger que não deixa remover se você não tiver a chave.\n\
Triggers são funções, na linguagem do IntMUD. No caso da algema, é\n\
a classe i_teste019 do arquivo mud-a-teste.int."
const dir_n = $s_teste028
const s_reset = "S 100 teste019 3 S\nS 100 teste020 3 S"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  !dentro1.objini("i_teste019") && criar("i_teste019", este, 3)
  !dentro1.objini("i_teste020") && criar("i_teste020", este, 3)


classe s_teste064
herda b_teste
const s_titulo = "Sexto andar: Lidando com animais"
const s_desc = "A oeste pode-se conseguir dois animais."
const dir_b = $s_teste030
const dir_o = $s_teste065


classe s_teste065
herda b_teste
const s_titulo = "Animais"
const s_desc = "Se quiser um duende branco tecle: falar branco\n\
Se quiser um duende negro tecle: falar negro\n\
Esses duendes possuem outras habilidades e magias, e podem ser usados\n\
em batalhas. Para saber como lidar com animais, tecle: ajuda animal"
const dir_l = $s_teste064
const s_reset = "P 100 teste012 0 0 1"

func s_reset1 # Realiza o reset
# Não alterar; função criada automaticamente a partir de s_reset
  se p_teste012:objsolto.total < 1
    criar("p_teste012", este, 0)
  fimse


classe s_teste066
herda b_teste
const s_titulo = "Habilidades automáticas"
const s_desc = "Pode-se definir em que nível aprende e o preço da aula das habilidades\n\
ensinadas pelo Perito (a oeste). Para isso, basta criar a habilidade\n\
teclando chab seguido do nome da habilidade. Depois, editar a habilidade,\n\
com o comando ehab, e na opção \"Alvo\" tecle 6, que significa automático\n\
(sem intervenção do jogador).\n\
Veja também a ajuda teclando: adm atk"
const dir_o = $s_teste032
