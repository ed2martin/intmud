classe config
# Configuração
#
# A variável versão é usada na classe atualiza, arquivo mud.int,
# para atualizar os arquivos mud-a-*.int e mud-b-*.int, porque podem
# haver mudanças nesses arquivos em versões mais recentes
const versao = 297 # Para atualizar arquivos mud-a-*.int e mud-b-*.int
#
# Jogar localmente (na janela do IntMUD)? 0=não, 1=sim
const modolocal = 1 # Jogar localmente: Sim
#
# Ativar em uma porta? 0=não, 1=Telnet, 2=Telnet e Papovox
const modoserv = 0 # Jogar em uma porta: 0 Não
#
# Ativar como bot em um chat? 0=não, 1=sim
const modobot = 0 # Jogar em um chat: Não
#
# Endereço, se modoserv for 1 ou 2
const servender = ""
#
# Porta, se modoserv for 1 ou 2 (nota: Papovox só se conecta na porta 1963)
const servporta = 1963
#
# Limite de conexões por IP na porta definida em servporta
const servusr = 3
#
# Tempo entre duas conexões do mesmo endereço IP, em décimos de segundo
const servtempo = 80
#
# Variáveis se ativar como bot em um chat
const serv = "localhost"
const porta = 1963
const sala = "sala01"
const senha = ""
#
# Senha para se tornar administrador, ou "" se não puder
const senhaadm = "x2"
#
# Mensagem de apresentação
# Primeira mensagem que o jogador recebe ao entrar no MUD
const apres = ""
#
# Sala inicial
const salaini = $s_teste001
# Sala para continuar jogo salvo (se estava numa sala que não existe mais)
const salasav = $s_casa001
# Sala quando morre
const salafim = $s_fim001
#
# Quantos animais pode ter numa batalha, de 0 a 8
# Se 0, os comandos para animais deixam de existir
const animal1 = 5
#
# Quantos itens (ao todo) cada personagem pode ter
const itens = 50
#
# Se deve salvar o personagem ao criar: 0=não salvar, 1=salvar
const salvacria = 0
#
# Se pede o e-mail ao criar personagem
# 0=não pede, 1=opcional, 2=obrigatório
const email = 0
#
# Opções ativas do comando CONFIG quando um jogador cria um personagem
const jogconfig = 319 # Config ao criar personagem: desc, saidas, cores, acento, chat, seguir, \
pvt
#
# Quem deve ser informado quando um jogador entra ou sai
# 0=ninguém, 1=administradores, 2=todos
const entrainfo = 1
#
# Quanta experiência os personagens dão quando morrem, em porcentagem
const atkexp = 100
#
# Tempo de um turno (em décimos de segundo)
const atktempo = 60
#
# Somente em ataque automático: força do ataque
const atkfor = 30
#
# Mensagem do comando Echo
const echomsg = "\b\cb(ADM) $m\b"
#
# Mensagem do canal Chat
const chatmsg = "(chat) $R '$m'"
#
# Mensagem do canal Novatos
const novatosmsg = "(novatos) $R '$m'"
#
# Falar: ao teclar falar e uma mensagem qualquer
const falarmsg = "$P falou '$m'"
#
# Perguntar: ao teclar falar e uma mensagem terminada com interrogação
const perguntarmsg = "$P perguntou '$m'"
#
# Exclamar: ao teclar falar e uma mensagem terminada com exclamação
const exclamarmsg = "$P exclamou '$m'"
#
# Ponderar: ao teclar falar e uma mensagem terminada com reticências
const ponderarmsg = "$P ponderou '$m'"
#
# Continuar: ao teclar falar e uma mensagem começada com reticências
const continuarmsg = "$P continuou '$m'"
#
# Gritar: ao teclar gritar e uma mensagem
const gritarmsg = "$P gritou '$m'"
#
# Comandos salvar e senha: 0=não existe, 1=existe
const salvartipo = 0 # Comando Salvar: 0 Desabilitado
#
# Nível necessário para usar o comando salvar
# Abaixo desse nível, só pode salvar quem já tem jogo salvo
# Se for um número acima de 65535, quem não tem jogo salvo não salva
const salvarnivel = 0
#
# Comando rezar: 0=não existe, 1=existe
const rezartipo = 0 # Comando Rezar: 0 Desabilitado
#
# Nível necessário para usar o comando rezar
const rezarnivel = 0
#
# Canal chat: 0=não existe, 1=somente em uma sala de bot, 2=todo o chat
const chattipo = 2 # Canal chat: 2 Para todo o MUD
#
# Nível necessário para escrever no canal chat
const chatnivel = 0
#
# Canal novatos: 0=não existe, 1=somente em uma sala de bot, 2=todo o chat
const novatostipo = 2 # Comando Novatos: 2 Para todo o MUD
#
# Nível necessário para escrever no canal novatos
const novatosnivel = 0
#
# Comando emoção: 0=não existe, 1=existe
const emocaotipo = 0 # Comando Emoção: 0 Desabilitado
#
# Nível necessário para usar o comando emoção
const emocaonivel = 0
#
# Comando gritar: 0=não existe, 1=existe
const gritartipo = 0 # Comando Gritar: 0 Desabilitado
#
# Nível necessário para usar o comando gritar
const gritarnivel = 0
#
# Quantos pontos de movimentos o personagem gasta ao gritar
const gritarmove = 2
#
# Comando matar: 0=não existe, 1=existe
const matartipo = 1 # Comando Matar: 1 Habilitado
#
# Até que nível pode usar o comando retornar
const retornar = -1
#
# Se não administradores podem saber quem é administrador teclando QUEM
# 0=não, 1=sim
const mostraadm = 0 # Comando quem mostra admin: Não
#
# Se não administradores podem saber quem é imortal teclando QUEM
# 0=não, 1=sim
const mostraimortal = 0 # Comando Quem mostra imortal: Não
#
# Quantos pontos de aulas ganha quando sobe de nível
# Se 0, o comando aprender não usa pontos de aula
const aulas = 0
#
# Os tipos de produtos (itens) que vendedores podem comprar
const produtos = "Possui metal\n\
Arma\n\
Armadura\n\
Vestimenta\n\
Cajado\n\
Varinha\n\
Pergaminho\n\
Tesouro\n\
Fonte de luz\n\
Mobília\n\
Poção\n\
Container\n\
Vasilhame\n\
Comida\nBarco"
#
# Tipos de ataque existentes
const atknomes = "Contusão\n\
Luta\n\
Cortante\n\
Perfurante\n\
Fogo\n\
Água\n\
Gelo\n\
Terra\n\
Pedra\n\
Aéreo/vento\n\
Luz\n\
Trevas\n\
Elétrico\n\
Vegetal\n\
Psíquico\n\
Veneno\n\
Fantasma\nDragão"
#
# Tipos de ataque que usam ataque e defesa especiais (cada bit é um tipo)
# Nota: é bem mais fácil editar essa opção com o comando ECONFIG, dentro do MUD
const atkespecial = 31856 # Ataques especiais: Fogo, Água, Gelo, Luz, Trevas, Elétrico, Vegetal, \
Psíquico
#
# Habilidades usadas em ataques automáticos sem arma
const atk_txt = "Bater"
#
# Tipos de armas existentes
# Habilidades usadas em ataques automáticos com arma
const arma_txt = "Sem armas\n\
Varinha\n\
Cajado\n\
Lâmina curta\n\
Lâmina longa\n\
Maca e Martelo\n\
Mangual\n\
Chicote e Corrente\n\
Arma exótica"
#
# Mensagens quando acertou um golpe com uma arma
# Somente ataques automáticos
#
# Mensagens quando errou um golpe com uma arma
# Somente ataques automáticos
#
# Mensagens quando um golpe com uma arma não teve efeito
# Somente ataques automáticos
#
# Tipos de comandos sociais existentes
const social_txt = "Neutro\nAgradecer\nOfender\nCumprimentar"
#
# Nomes das posições aonde os itens são vestidos
# Não contém a posição 50, que é "empunhando"
const equip_txt = "cabeça\n\
rosto\n\
olhos\n\
orelhas\n\
pescoço\n\
corpo\n\
sobre o corpo\n\
costas\n\
braços\n\
mãos\n\
pulso direito\n\
pulso esquerdo\n\
dedo direito\n\
dedo esquerdo\n\
escudo\n\
cintura\n\
pernas\n\
tornozelos\npés"
#
# Em que ordem as posições são mostradas no comando equip
# A posição 49 corresponde à arma sendo empunhada
const equip_ordem = "49 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 \
27 28 29"
#
# Mensagens ao vestir um item
# Não contém a posição 50, que é "empunhando"
const equip_vestir = "$P coloca $o na cabeça.\n\
$P coloca $o no rosto.\n\
$P coloca $o nos olhos.\n\
$P coloca $o nas orelhas.\n\
$P coloca $o no pescoço.\n\n\n\
$P coloca $o nas costas.\n\n\
$P coloca $o nas mãos.\n\
$P coloca $o.\n\
$P coloca $o.\n\n\n\
$P usa $o como escudo.\n\
$P coloca $o na cintura.\n\n\
$P coloca $o nos tornozelos.\n\
$P calça $o."
#
# As posições que estão em cima de cada posição
const vestir0 = 0
const vestir1 = 0
const vestir2 = 2
const vestir3 = 0
const vestir4 = 0
const vestir5 = 64
const vestir6 = 0
const vestir7 = 0
const vestir8 = 0
const vestir9 = 0
const vestir10 = 512
const vestir11 = 512
const vestir12 = 512
const vestir13 = 512
const vestir14 = 0
const vestir15 = 0
const vestir16 = 0
const vestir17 = 0
const vestir18 = 0
const vestir19 = 0
const vestir20 = 0
const vestir21 = 0
const vestir22 = 0
const vestir23 = 0
const vestir24 = 0
const vestir25 = 0
const vestir26 = 0
const vestir27 = 0
const vestir28 = 0
const vestir29 = 0

func atribcfg # Altera atributos do personagem
# Função criada automaticamente
  pvidamax = 15 * pnivel + 45
  pmanamax = 1 * pnivel + 30
  pmovemax = 2 * pnivel + 30
  pveloc1 = 5 * pnivel + 20
  atknorm = 12 * pnivel + 36
  defnorm = 10 * pnivel + 30
  atkesp = 12 * pnivel + 36
  defesp = 10 * pnivel + 30
  evasao = 2 * pnivel + 30
  precisao = 2 * pnivel + 30
  pesomax = 20000

func salvar # Salva o programa
  prog p
  p.salvar("L99N1I2C2F1V0")
  $mudaprog.ini # Para indicar que nenhum arquivo foi mudado

func sav # Para salvar acertando indentação e linhas entre classes e funções
  prog p
  p.salvartudo("L99N1I2C2F1V0")
