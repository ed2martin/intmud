classe com _ini
# Contém os objetos que tratam cada comando
const c_ = $com_vazio # Não digitou nada
# Direções abreviadas
const c_n = $com_move_norte
const c_s = $com_move_sul
const c_l = $com_move_leste
const c_e = $com_move_leste
const c_o = $com_move_oeste
const c_w = $com_move_oeste
const c_c = $com_move_cima
const c_b = $com_move_baixo
# Direções
const c_norte = $com_move_norte
const c_sul = $com_move_sul
const c_leste = $com_move_leste
const c_oeste = $com_move_oeste
const c_cima = $com_move_cima
const c_baixo = $com_move_baixo
# Outros comandos
const c_a = $ajuda__comandos
const c_ajuda = $ajuda__comandos
const c_encerrar = $com_encerrar
const c_falar = $com_falar
const c_fim = $com_fim
const c_quit = $com_fim
const c_ver = $com_ver

classe com comum
const nivel = 0 # Nível mínimo para usar o comando
const posic = 8 # Posição mínima para usar o comando; vide [comum_perso]
const iniclasse = criar(arg0) # Cria um objeto do comando
func exec # Executa o comando
# arg0=personagem
# arg1=o que escreveu
  arg0.msg("Você digitou " + arg1)

classe com encerrar
herda com_comum
func exec
  msg("Encerrando o MUD")
  terminar

classe com falar
herda com_comum
const posic = 5
func exec
  listaitem l
  txt300 texto # O que o usuário digitou
  txt20 ini
  se sala.semsom
    arg0.msg("Você tenta falar alguma coisa mas não sai nenhum som")
    ret
  fimse
  texto = txttroca(arg1, "'", "")
  ini = txt(texto, inttotal(texto)-1)
  se ini == ""
    arg0.msg("Falar o quê?")
    ret
  senão ini == "?"
    ini = " pergunta '"
  senão ini == "!"
    ini = " exclama '"
  senão
    ini = " fala '"
  fimse
  l = arg0.sala.dentro.ini
  enquanto l
    se l.obj == arg0
      l.obj.msg("Você" + ini + texto + "'")
    senão l.obj.invisver >= arg0.invis
      l.obj.msg(arg0.nome + ini + texto + "'")
    senão
      l.obj.msg("Alguém" + ini + texto + "'")
    fimse
    l.depois
  efim

classe com fim
herda com_comum
func exec
  apagar(arg0)

classe com move
# Movimenta-se em uma direção
const nivel = 0
const posic = 8
const iniclasse = criar(arg0)

func exec # Executa o comando
# arg0=personagem
# arg1=o que escreveu
  ref destino
  destino = arg0.sala.[dir]
  se destino == nulo
    arg0.msg("Impossível seguir nessa direção")
  senão arg0.sala.[dir]_agora >= 2
    arg0.msg("A porta está trancada")
  senão destino = arg0.sala
    arg0.msg("Você tenta, mas acaba voltando no mesmo lugar")
  senão
    $mens.p(arg0)
    $mens.todos(m_sair)
    arg0.msg(m_perso)
    arg0.mudasala(destino)
    arg0.descrsala(arg0.sala)
    $mens.todos(m_chegar)

classe com move_norte
herda com_move
const dir = "norte"
const m_perso = "norte"
const m_sair = "$p foi para o norte"
const m_chegar = "$p chegou do sul"

classe com move_sul
herda com_move
const dir = "sul"
const m_perso = "sul"
const m_sair = "$p foi para o sul"
const m_chegar = "$p chegou do norte"

classe com move_leste
herda com_move
indiceobj comando3
const dir = "leste"
const m_perso = "leste"
const m_sair = "$p foi para o leste"
const m_chegar = "$p chegou do oeste"

classe com move_oeste
herda com_move
indiceobj comando3
const dir = "oeste"
const m_perso = "oeste"
const m_sair = "$p foi para o oeste"
const m_chegar = "$p chegou do leste"

classe com move_cima
herda com_move
const dir = "cima"
const m_perso = "cima"
const m_sair = "$p subiu"
const m_chegar = "$p chegou de baixo"

classe com move_baixo
herda com_move
const dir = "baixo"
const m_perso = "baixo"
const m_sair = "$p desceu"
const m_chegar = "$p chegou de cima"

classe com vazio
const nivel = 0
const posic = 0
const iniclasse = criar(arg0)

classe com ver
herda com_comum
const posic = 5
func exec
  nomeobj nomes
  listaitem l
  se arg1 == ""
    arg0.descrsala(arg0.sala)
    ret
  fimse
  nomes.ini(arg1, 10)
  l = arg0.sala.dentro.ini
  enquanto l
    se l.obj.invisver >= arg0.invis && nomes.nome(l.obj.alias)
      se l.obj == arg0
        arg0.msg("Você tenta olhar para si mesmo.")
      senão
        $mens.p(arg0, l.obj)
        $mens.todos2("$p olha para $a")
        $mens.perso("$p olha para $a")
        $mens.alvo2("$p olha para $a")
        arg0.msg(l.obj.dver)
      fimse
      ret
    fimse
    l.depois
  efim
  arg0.msg("Não há nenhum " + arg1 + " aqui.")
