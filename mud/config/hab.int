classe cmd_arco_e_flecha
herda comando_ataque
const nomevar = "h_Arco_e_flecha"
const tipoalvo = 1 # Alvo: 1 Exceto o personagem; ataque
const tipoarma = 64 # Requer arma: 6-Arco e flecha
const tipomunicao = 2 # Munição: 2 Usa e perde uma munição
const atk1_auto1 = "$P lança $n $e $a, $m"
const atk1_perso1 = "$P lança $n $e $a, $m"
const atk1_matou1 = "$P lança $n e mata $a, $m"
const atk1_errou1 = "$P lança $n, mas $a desvia"
const atk1_nulo1 = "$P lança $n, mas $a sente apenas cóssegas"


classe cmd_arma_exótica
herda comando_ataque
const nomevar = "h_arma_exótica"
const tipoalvo = 9
const tipoarma = 256 # Usa arma: 8-Arma exótica
const atk1_auto1 = "$P ataca $a, $m"
const atk1_perso1 = "$P ataca $a, $m"
const atk1_matou1 = "$P ataca $a, $m"
const atk1_errou1 = "$P ataca $a, errou"
const atk1_nulo1 = "$P ataca $a, nada acontece"


classe cmd_arremessar
herda comando_ataque
const nomevar = "h_Arremessar"
const ataquemin = 40
const ataquemax = 120
const tipoatk = 0 # Tipo: 0 Contusão
const vel = 30
const msgextra = "Golpe físico de força"
const atk1_auto1 = "$P se joga contra $a, $m"
const atk1_perso1 = "$P se joga contra $a, $m"
const atk1_matou1 = "$P se joga contra $a, $m"
const atk1_errou1 = "$P se joga contra $a, errou"
const atk1_nulo1 = "$P se joga contra $a, nada acontece"


classe cmd_Bater
herda comando_ataque
const nomevar = "h_Bater"
const tipoalvo = 9
const atk1_auto1 = "$P bate em $a, $m"
const atk1_perso1 = "$P bate em $a, $m"
const atk1_matou1 = "$P dá uma batida fatal em $a, $m"
const atk1_errou1 = "$P olha para $a e bate no ar"
const atk1_nulo1 = "$P bate em $a, nada acontece"
const atk1_esquivou1 = "$A se esquiva da sua batida"
const atk1_esquivou2 = "Você se esquiva da batida de $p"
const atk1_esquivou3 = "$A se esquiva da batida de $p"


classe cmd_brasa
herda comando_ataque
const nomevar = "h_Brasa"
const tipoalvo = 0 # Alvo: 0 Qualquer um; ataque
const a_efeito1 = "Queimando"
const a_prob1 = 10
const c_mana1 = 30
const c_mana2 = 20
const tipoatk = 4 # Tipo: 4 Fogo
const msgextra = "Pode causar queimaduras."
const atk1_auto1 = "$P lança brasa em $a, $m"
const atk1_perso1 = "$P lança brasa em $a, $m"
const atk1_matou1 = "$P transforma $a em brasa, $m"
const atk1_errou1 = "$P lança brasa mas não acerta $a, $m"


classe cmd_cajado
herda comando_ataque
const nomevar = "h_cajado"
const tipoalvo = 9
const tipoarma = 4 # Usa arma: 2-Cajado
const atk1_auto1 = "$P lança um raio com um cajado em $a, $m"
const atk1_perso1 = "$P lança um raio com um cajado em $a, $m"
const atk1_matou1 = "$P lança um raio com um cajado em $a, $m"
const atk1_errou1 = "$P lança um raio com um cajado em $a, mas erra"
const atk1_nulo1 = "$P lança um raio com um cajado em $a mas nada acontece"


classe cmd_chicote_e_corrente
herda comando_ataque
const nomevar = "h_chicote_e_corrente"
const tipoalvo = 9
const tipoarma = 128 # Usa arma: 7-Chicote e Corrente
const atk1_auto1 = "$P ataca $a, $m"
const atk1_perso1 = "$P ataca $a, $m"
const atk1_matou1 = "$P ataca $a, $m"
const atk1_errou1 = "$P ataca $a, errou"
const atk1_nulo1 = "$P ataca $a, nada acontece"


classe cmd_choque
herda comando_ataque
const nomevar = "h_Choque"
const a_efeito1 = "paralisado"
const a_prob1 = 10
const tipoatk = 12 # Tipo: 12 Elétrico
const msgextra = "Dá uma descarga elétrica que pode paralisar."
const atk1_auto1 = "$P dá um choque em $a, $m"
const atk1_perso1 = "$P dá um choque em $a, $m"
const atk1_matou1 = "$P dá um choque em $a, $m"
const atk1_errou1 = "$P erra um choque em $a, errou"
const atk1_nulo1 = "$P dá um choque em $a, nada acontece"


classe cmd_chutar
herda comando_ataque
const nomevar = "h_Chutar"
const tipoalvo = 1 # Alvo: 1 Exceto o personagem; ataque
const ataquemin = 35
const ataquemax = 105
const tipoatk = 0 # Tipo: 0 Contusão
const valor = 80
const vel = 50
const msgextra = "Golpe físico de força"
const atk1_auto1 = "$P chuta $a, $m"
const atk1_perso1 = "$P chuta $a, $m"
const atk1_matou1 = "$P chuta $a, $m"
const atk1_errou1 = "$P dá um chute bem longe de $a"
const atk1_nulo1 = "Seu chute parece não fazer efeito em $a"
const atk1_nulo2 = "O chute de $p parece não fazer efeito em $a"
const atk1_nulo3 = "O chute de $p parece não fazer efeito em $a"
const atk1_esquivou1 = "$A sai da frente do seu chute"
const atk1_esquivou2 = "Você sai da frente do chute de $p"
const atk1_esquivou3 = "$A sai da frente do chute de $p"


classe cmd_chute_élfico
herda comando_ataque
const nomevar = "h_Chute élfico"
const tipoalvo = 1 # Alvo: 1 Exceto o personagem; ataque
const ataquemin = 30
const ataquemax = 90
const msgextra = "Consome 20 pontos de movimento. Se você não tiver movimento\n\
suficiente, consome 20 pontos de vida.\n\
Se usado contra elfos, é uma magia de cura.\n\
Se usado contra anões, é um chute comum.\n\
Contra outras raças, chuta e lança o efeito Dreno de Mana."
const atk1_auto1 = "$P chuta $a, $m"
const atk1_perso1 = "$P chuta $a, $m"
const atk1_matou1 = "$P chuta $a, $m"
const atk1_errou1 = "$P chuta $a, errou"
const atk1_nulo1 = "$P mostra para $a como se chuta"

func cmd_atacar # Vai atacar
# Consome 20 pontos de movimentos. Se não tiver, consome 20 pontos de vida.
# Nota: para consumir mana ao invés de movimentos, substituir pmove por pmana.
  se arg0.pmove >= 20
    arg0.pmove -= 20
  senao arg0.pvida > 20
    $mens.p(arg0)
    $mens.msginv("Você se sente mais frac$s.", arg0)
    arg0.pvida -= 20
  senao
    arg0.msg("Pontos de movimento e vida insuficientes.")
    ret 1 # Cancela o ataque
  fimse
# Se for usado contra elfos, vira habilidade de cura
  se arg1.tipo1 == "elfo"
    $mens.p(arg0, arg1)
    $mens.mtodos1("$P dá um chute direto e $a se sente melhor.")
    arg1.pvida = intmin(arg1.pvida + 20, arg1.pvidamax)
    arg1.acertapos(1) # Acerta posição de arg1
    arg0.acertapos(1) # Checa se arg0 morreu e acerta posição de arg0
    ret 1 # Cancela o ataque
  fimse

func cmd_atacou # Realizou o ataque
  se arg2.result == 0 && arg1.tipo1 != "anão"
    criar("e_dreno_de_mana", arg1, 0) # Cria efeito Dreno de Mana nível 0 em arg1
  fimse


classe cmd_cortar
herda comando_ataque
const nomevar = "h_Cortar"
const c_move1 = 5
const c_move2 = 5
const tipoarma = 8 # Requer arma: Lâmina curta
const tipoatk = 2 # Tipo: 2 Cortante
const atk1_auto1 = "$P corta $a, $m"
const atk1_perso1 = "$P corta $a, $m"
const atk1_matou1 = "$P corta $a, $m"
const atk1_errou1 = "$P tenta cortar $a, errou"
const atk1_nulo1 = "$P corta $a, nada acontece"


classe cmd_drenar
herda comando_ataque
const nomevar = "h_Drenar"
const c_move1 = 10
const c_move2 = 5
const tipoatk = 13 # Tipo: 13 Vegetal
const msgextra = "Absorve metade dos danos que causa."
const atk1_auto1 = "$P drena $a, $m"
const atk1_perso1 = "$P drena $a, $m"
const atk1_matou1 = "$P drena $a, $m"
const atk1_errou1 = "$P tenta drena $a, errou"
const atk1_nulo1 = "$P drena $a, nada acontece"
int32 pontos

func cmd_atkenv
  pontos = arg1.pvida

func cmd_atacou
  refvar vida = arg0.pvida
  refvar max = arg0.pvidamax
  se arg2.result == 0 && vida && vida < max
    pontos = intpos(pontos - arg1.pvida) / 2
    vida += pontos
    vida > max && (vida = max)
  fimse


classe cmd_endurecer
herda comando_ataque
const nomevar = "h_Endurecer"
const tipoalvo = 7 # Alvo: 7 O personagem; não é ataque
const a_montado = 0 # Montado: Não
const a_em_pe = 0 # Em pé: Não
const a_efeito1 = "endurecer"
const c_espera = 40
const c_move1 = 15
const c_move2 = 5
const msgextra = "Endurece os músculos para melhorar a sua defesa.\n\
Só pode ser usado durante uma batalha."
const atk1_auto1 = "$P endurece."
const atk1_perso1 = "$P endurece."
const atk1_matou1 = "$P endurece."
const atk1_errou1 = "$P tenta endurecer."
const atk1_nulo1 = "$P parece tão dur$s quanto antes."


classe cmd_espiar_inventário
herda comando_ataque
const nomevar = "h_Espiar Inventário"
const tipoalvo = 6 # Alvo: 6 Qualquer um; não é ataque
const falha1 = 70
const falha2 = 20
const msgextra = "Quando falha, todos na sala ficam sabendo que você tentou espiar o que o\n\
personagem alvo está carregando, mas você não é atacado por tentar espiar.\n\
Não é permitido espiar jogadores."
const atk1_perso1 = ""
const atk1_errou1 = "$P tenta espiar o inventário $d $a sem sucesso."

func cmd_alvo
  se arg0 == arg1
    $mens.mp("Espiar você mesm$s?", arg0)
    ret 1
  senao arg1.jog
    $mens.mp("Não é possível espiar jogadores.", arg0)
    ret 1
  senao arg1.persodomador.jog
    $mens.mp("Não é possível espiar animais de jogadores.", arg0)
    ret 1
  fimse

func cmd_alvofim
  se arg2.result == 0
    textotxt t
    listaitem item
    epara item = arg1.dentro1.fim, item, item.antes
      refvar i = item.obj
      continuar !i.visivel(arg0)
      t.addfim(txt(i.objtot) + " " + txtcopiamai(i.descnome2, "A"))
    efim
    t.juntalin("(", "x)")
    se t
      $mens.p(arg0, arg1)
      t.addini($mens.txt("\b\c6$A carrega:\b", arg0))
      arg0.msg2(t.remove(1000))
    senao
      $mens.mp("$A não está carregando nada.", arg0, arg1)
    fimse
  fimse


classe cmd_explodir
herda comando_ataque
const nomevar = "h_Explodir"
const ataquemin = 100
const ataquemax = 300
const atkfalha = 0 # Pode falhar: Não
const vel = 100
const msgextra = "Extremamente forte, mas quem aplica esse golpe desmaia."
const atk1_auto1 = "$P explodiu na direção de $a, $m"
const atk1_perso1 = "$P explodiu na direção de $a, $m"
const atk1_matou1 = "$P explodiu na direção de $a, $m"
const atk1_errou1 = "$P explodiu mas $a desviou em tempo."
const atk1_nulo1 = "$P explodiu, nada acontece com $a, nada acontece"

func cmd_atacou # Desmaia após o ataque
  arg0.pvida = 0


classe cmd_furtar
herda comando_ataque
const nomevar = "h_Furtar"
const tipoalvo = 6 # Alvo: 6 Qualquer um; não é ataque
const falha1 = 70
const falha2 = 20
const msgextra = "Tenta furtar algo que outro personagem está carregando sem ninguém perceber.\n\
Quando falha, o personagem alvo ataca. Não é permitido furtar jogadores."
const atk1_perso1 = ""
const atk1_errou1 = "$P tenta furtar $a sem sucesso."

func cmd_alvo
  se arg0 == arg1
    $mens.mp("Espiar você mesm$s?", arg0)
    ret 1
  senao arg1.jog
    $mens.mp("Não é possível furtar jogadores.", arg0)
    ret 1
  senao arg1.persodomador.jog
    $mens.mp("Não é possível furtar animais de jogadores.", arg0)
    ret 1
  fimse

func cmd_alvofim
  se arg2.result == 0 # Teve sucesso
    listaobj l # Lista de objetos que podem ser roubados
    listaitem i
    epara i = arg1.dentro1.ini, i, i.depois
      i.obj.item && i.obj.visivel(arg0) && l.addfim(i.obj)
    efim
    se l.total == 0
      $mens.mp("$A não está carregando nada.", arg0, arg1)
      ret
    fimse
    i = l.ini.depois(rand(l.total)) # Escolhe um objeto aleatoriamente
    $mens.mp("Você furta $o de $a.", arg0, arg1, i.obj)
    i.obj.mudadono(arg0, 1)
  senao # Não teve sucesso
    se arg1.perso == 1 || !arg1.p_agressivo(arg0) # Não participa de batalha
      uint32 danos = arg0.pvida / 4 # Tirar 1/4 dos pontos de vida
      $mens.p(arg1, arg0)
      $mens.mens = -danos
      $mens.mvis1("$P bate com força em $a, $m")
      arg0.pvida -= danos
      arg0.acertapos
    senao # Participa de batalha
      arg1.persobat.atkauto(arg0.persobat, 8)
    fimse
  fimse


classe cmd_furtividade
herda comando_ataque
const nomevar = "h_Furtividade"
const tipoalvo = 7 # Alvo: 7 O personagem; não é ataque
const a_bat_sentado = 0 # Lutando sentado: Não
const a_bat_montado = 0 # Lutando nontado: Não
const a_bat_em_pe = 0 # Lutando em pé: Não
const a_efeito1 = "furtividade"
const c_move1 = 20
const c_move2 = 5
const atk1_auto1 = ""
const atk1_perso1 = ""
const atk1_matou1 = ""
const atk1_errou1 = ""
const atk1_nulo1 = ""


classe cmd_gás_tóxico
herda comando_ataque
const nomevar = "h_Gás tóxico"
const a_efeito1 = "envenenado"
const a_prob1 = 70
const c_mana1 = 10
const c_mana2 = 5
const c_move1 = 5
const c_move2 = 2
const tipoatk = 15 # Tipo: 15 Veneno
const msgextra = "Tem grandes chances de envenenar."
const atk1_auto1 = "$P lança gás tóxico em $a, $m"
const atk1_perso1 = "$P lança gás tóxico em $a, $m"
const atk1_matou1 = "$P lança gás tóxico em $a, $m"
const atk1_errou1 = "$P lança gás tóxico em $a, errou"
const atk1_nulo1 = "$P lança gás tóxico em $a, nada acontece"


classe cmd_lâmina_curta
herda comando_ataque
const nomevar = "h_lâmina_curta"
const tipoalvo = 9
const tipoarma = 8 # Usa arma: 3-Lâmina curta
const atk1_auto1 = "$P fura $a com $o, $m"
const atk1_perso1 = "$P fura $a com $o, $m"
const atk1_matou1 = "$P fura $a com $o, $m"
const atk1_errou1 = "$P tenta furar $a com $o, mas erra"
const atk1_nulo1 = "$P tenta furar $a com $o, sem sucesso"


classe cmd_lâmina_longa
herda comando_ataque
const nomevar = "h_lâmina_longa"
const tipoalvo = 9
const tipoarma = 16 # Usa arma: 4-Lâmina longa
const atk1_auto1 = "$P corta $a, $m"
const atk1_perso1 = "$P corta $a, $m"
const atk1_matou1 = "$P corta $a, $m"
const atk1_errou1 = "$P tenta cortar $a, mas erra"
const atk1_nulo1 = "$P tenta cortar $a, sem sucesso"


classe cmd_maca_e_martelo
herda comando_ataque
const nomevar = "h_maca_e_martelo"
const tipoalvo = 9
const tipoarma = 32 # Usa arma: 5-Maca e Martelo
const atk1_auto1 = "$P ataca $a, $m"
const atk1_perso1 = "$P ataca $a, $m"
const atk1_matou1 = "$P ataca $a, $m"
const atk1_errou1 = "$P ataca $a, errou"
const atk1_nulo1 = "$P ataca $a, nada acontece"


classe cmd_mangual
herda comando_ataque
const nomevar = "h_mangual"
const tipoalvo = 9
const tipoarma = 64 # Usa arma: 6-Mangual
const atk1_auto1 = "$P ataca $a, $m"
const atk1_perso1 = "$P ataca $a, $m"
const atk1_matou1 = "$P ataca $a, $m"
const atk1_errou1 = "$P ataca $a, errou"
const atk1_nulo1 = "$P ataca $a, nada acontece"


classe cmd_meditar
herda comando_ataque
const nomevar = "h_Meditar"
const tipoalvo = 7 # Alvo: 7 O personagem; não é ataque
const a_descansando = 1 # Descansando: Sim
const a_sentado = 1 # Sentado: Sim
const a_efeito1 = "meditando"
const atk1_auto1 = "$P começa a meditar."
const atk1_perso1 = "$P começa a meditar."
const atk1_matou1 = "$P começa a meditar."
const atk1_errou1 = "$P tenta meditar mas não consegue."
const atk1_nulo1 = "$P tenta meditar, em vão."


classe cmd_morder
herda comando_ataque
const nomevar = "h_Morder"
const ataquemin = 25
const ataquemax = 75
const tipoatk = 2 # Tipo: 2 Cortante
const valor = 120
const vel = 60
const msgextra = "Golpe físico de força"
const atk1_auto1 = "$P morde $a, $m"
const atk1_perso1 = "$P morde $a, $m"
const atk1_matou1 = "$P morde $a, $m"
const atk1_errou1 = "$P morde $a, errou"
const atk1_nulo1 = "$P morde $a, nada acontece"


classe cmd_multissoco
herda comando_ataque
const nomevar = "h_Multissoco"
const tipoalvo = 3 # Alvo: 3 Outros dividindo o ataque
const ataquemin = 35
const ataquemax = 105
const falha1 = 30
const falha2 = 30
const tipoatk = 1 # Tipo: 1 Luta
const atk1_auto1 = "$P acerta um belo soco em si mesm$s, $m"
const atk1_perso1 = "$P dá um soco múltiplo em $a, $m"
const atk1_matou1 = "$P mata $a com um multissoco, $m"
const atk1_errou1 = "$P dá um multissoco em $a, errou"
const atk1_nulo1 = "$P dá um multissoco em $a, nada acontece"


classe cmd_ocultar
herda comando_ataque
const nomevar = "h_Ocultar"
const tipoalvo = 7 # Alvo: 7 O personagem; não é ataque
const a_bat_sentado = 0 # Lutando sentado: Não
const a_bat_montado = 0 # Lutando nontado: Não
const a_bat_em_pe = 0 # Lutando em pé: Não
const a_efeito1 = "ocultar"
const c_move1 = 20
const c_move2 = 5
const atk1_auto1 = ""
const atk1_perso1 = ""
const atk1_matou1 = ""
const atk1_errou1 = ""
const atk1_nulo1 = ""


classe cmd_onda_trovão
herda comando_ataque
const nomevar = "h_Onda trovão"
const a_efeito1 = "paralisado"
const c_mana1 = 20
const c_mana2 = 5
const ataquemin = 0
const ataquemax = 0
const tipoatk = 12 # Tipo: 12 Elétrico
const msgextra = "Paralisa com uma descarga elétrica."


classe cmd_retornar
herda comando_retornar
const nomevar = "h_Retornar"
const nivel = 5
const msgextra = "Teletransporta o seu personagem para o ponto de retorno, geralmente sua\n\
cidade natal. Esse comando existe para jogadores até o nível 5."
const msgerrou1 = "Você não consegue retornar."
const msgnulo1 = "Você não consegue retornar."


classe cmd_revolver
herda comando_ataque
const nomevar = "h_Revolver"
const tipoalvo = 1 # Alvo: 1 Exceto o personagem; ataque
const tipoarma = 256 # Requer arma: 8-Revolver
const tipomunicao = 2 # Munição: 2 Usa e perde uma munição
const atk1_auto1 = "$P atira $e $a, $m"
const atk1_perso1 = "$P atira $e $a, $m"
const atk1_matou1 = "$P atira $e e mata $a, $m"
const atk1_errou1 = "$P atira, mas $a desvia"
const atk1_nulo1 = "$P atira, mas $a sente apenas cóssegas"


classe cmd_roncar
herda comando_ataque
const nomevar = "h_Roncar"
const tipoalvo = 4 # Alvo: 4 Todos sem dividir o ataque
const a_dormindo = 1 # Dormindo: Sim
const a_montado = 0 # Montado: Não
const a_em_pe = 0 # Em pé: Não
const a_bat_sentado = 0 # Lutando sentado: Não
const a_bat_montado = 0 # Lutando nontado: Não
const a_bat_em_pe = 0 # Lutando em pé: Não
const c_move1 = 10
const c_move2 = 4
const ataquemin = 35
const ataquemax = 105
const atkfalha = 0 # Pode falhar: Não
const tipoatk = 9 # Tipo: 9 Aéreo/vento
const msgextra = "Só pode ser usado enquanto estiver dormindo."
const atk1_auto1 = "$P ronca alto e se machuca, $m"
const atk1_perso1 = "Seu ronco potente atinge $a, $m"
const atk1_perso2 = "O ronco potente de $p atinge $a, $m"
const atk1_perso3 = "O ronco potente de $p atinge $a, $m"
const atk1_matou1 = "$A sucumbe com o seu ronco ensurdecedor, $m"
const atk1_matou2 = "$A sucumbe com o ronco ensurdecedor de $P, $m"
const atk1_matou3 = "$A sucumbe com o ronco ensurdecedor de $P, $m"
const atk1_errou1 = "$P ronca alto mas $a se afasta a tempo."
const atk1_nulo1 = "$A apenas observa $p roncando alto."


classe cmd_rosnar
herda comando_ataque
const nomevar = "h_Rosnar"
const tipoalvo = 1 # Alvo: 1 Exceto o personagem; ataque
const a_efeito1 = "medo"
const c_espera = 40
const c_move1 = 15
const c_move2 = 5
const msgextra = "Rosna para diminuir o ataque do adversário por um tempo.\n\
Só pode ser usado durante uma batalha."
const atk1_auto1 = "$P rosna e se assusta."
const atk1_perso1 = "$P rosna para $a."
const atk1_matou1 = "$P mata $a rosnando."
const atk1_errou1 = "$P rosna para onde $a estava."
const atk1_nulo1 = "$A não entende por que $p rosnou."


classe cmd_sapato
herda comando_ataque
const nomevar = "h_Sapato"
const tipoalvo = 1 # Alvo: 1 Exceto o personagem; ataque
const ataquemin = 15
const ataquemax = 45
const tipomunicao = 1 # Munição: 1 Usa mas não perde
const itemmunicao = "teste018\nteste048"
const msgextra = "Ataca atirando sapatos e botas, que vão parar na sala."
const atk1_auto1 = "$P joga $o em $a, $m"
const atk1_perso1 = "$P joga $o em $a, $m"
const atk1_matou1 = "$P mata $a jogando $o, $m"
const atk1_errou1 = "$P joga $o, mas $a desvia"
const atk1_nulo1 = "$P joga $o, que cai centímetros antes de acertar $a"

func cmd_atacou
  arg2.arma1.mudadono(arg0.dono, 1) # Sapato vai para a sala


classe cmd_socar
herda comando_ataque
const nomevar = "h_Socar"
const tipoalvo = 1 # Alvo: 1 Exceto o personagem; ataque
const ataquemin = 20
const ataquemax = 60
const tipoatk = 0 # Tipo: 0 Contusão
const vel = 80
const msgextra = "Golpe físico de força"
const atk1_auto1 = "$P soca $a, $m"
const atk1_perso1 = "$P soca $a, $m"
const atk1_matou1 = "$P dá o último soco em $a, $m"
const atk1_errou1 = "$P soca $a, errou"
const atk1_nulo1 = "$A observa sem entender o seu soco"
const atk1_nulo2 = "$A observa sem entender o soco de $P"
const atk1_nulo3 = "Você observa sem entender o soco de $P"
const atk1_esquivou1 = "$A se esquiva do seu soco"
const atk1_esquivou2 = "Você se esquiva do soco de $p"
const atk1_esquivou3 = "$A se esquiva do soco de $p"


classe cmd_soneca
herda comando_ataque
const nomevar = "h_Soneca"
const tipoalvo = 7 # Alvo: 7 O personagem; não é ataque
const a_efeito1 = "soneca"
const a_vida1 = 10000
const msgextra = "Recupera os pontos de vida e dorme por 15 segundos\n\
Depois disso, você deve teclar acorar para acordar"
const atk1_auto1 = "$P boceja, $m"
const atk1_perso1 = "$P boceja, $m"
const atk1_matou1 = "$P boceja, $m"
const atk1_errou1 = "$P boceja, errou"
const atk1_nulo1 = "$P boceja, nada acontece"


classe cmd_varinha
herda comando_ataque
const nomevar = "h_varinha"
const tipoalvo = 9
const tipoarma = 2 # Usa arma: 1-Varinha
const atk1_auto1 = "$P lança um feitiço em $a, $m"
const atk1_perso1 = "$P lança um feitiço em $a, $m"
const atk1_matou1 = "$P lança um feitiço em $a, $m"
const atk1_errou1 = "$P lança um feitiço na direção de $a"
const atk1_nulo1 = "$P lança um feitiço em $a mas nada acontece"


classe cmd_visivel
herda comando_ataque
const nomevar = "h_Visivel"
const tipoalvo = 7 # Alvo: 7 O personagem; não é ataque
const a_bat_sentado = 0 # Lutando sentado: Não
const a_bat_montado = 0 # Lutando nontado: Não
const a_bat_em_pe = 0 # Lutando em pé: Não
const a_remove = "furtividade\ninvisibilidade\nocultar"
const atk1_auto1 = "$P fica visível."
const atk1_perso1 = "$P fica visível."
const atk1_matou1 = "$P fica visível."
const atk1_errou1 = "$P tenta ficar visível."
const atk1_nulo1 = "$P tenta ficar visível."


classe cmd_voadora
herda comando_ataque
const nomevar = "h_Voadora"
const tipoalvo = 1 # Alvo: 1 Exceto o personagem; ataque
const ataquemin = 45
const ataquemax = 135
const aulaini = 6
const aulafim = 12
const depende = "h_chutar"
const valor = 100
const vel = 40
const atk1_auto1 = "$P dá uma voadora em $a, $m"
const atk1_perso1 = "$P dá uma voadora em $a, $m"
const atk1_matou1 = "$P dá uma voadora em $a, $m"
const atk1_errou1 = "$P dá uma voadora em $a, errou"
const atk1_nulo1 = "$P dá uma voadora em $a, nada acontece"


classe cmd_voltar
herda comando_retornar
const nomevar = "h_Voltar"
const escolhearea = 1 # Escolhe a área: Sim
const depende = "h_retornar"
const msgextra = "Permite voltar a algumas das áreas que você já esteve."
