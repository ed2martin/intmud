classe h_cmd_pegar
herda comando_comum
const objmenu = $m_cmd_pegar
const objtipo = 2 # Pode renomear
const posic = 5
#
const m_ajuda = "-t\n\
-s <objeto>\n\
-s <quantidade> <objeto>\n\
-s <objeto> <container>\n\
-s <quantidade> <objeto> <container>\n\
Pega um objeto do chão ou de um container (uma bolsa, uma estante, etc).\n\
Para pegar tudo (até 10 objetos) tecle TUDO ao invés do objeto."
const m_naover = "Você não vê $m."
const m_semperm_pegar = "Melhor não pegar nada daqui."
const m_nao_container = "$O não é container."
const m_fechado = "$O está fechad$u."
const m_item_dormindo = "Você não consegue pegar porque tem alguém dormindo $e $a."
const m_item_descansando = "Você não consegue pegar porque tem alguém descansando $e $a."
const m_item_sentado = "Você não consegue pegar porque tem alguém sentado $e $a."
const m_item_emcima = "Você não consegue pegar porque tem alguém em cima $d $a."
const m_item_sala = "Você não consegue pegar isso."
const m_muitos_itens = "Você não consegue carregar tanta coisa."
const m_item_pesado = "$O é pesad$u demais."
const m_muito_peso = "Você não consegue carregar tanto peso."
const m_pegar_sala1 = "Você pega $o."
const m_pegar_sala2 = "$P pega $o."
const m_pegar_item1 = "Você pega $o $d $a."
const m_pegar_item2 = "$P pega $o $d $a."
const admordem = "m_ajuda m_naover m_semperm_pegar m_nao_container m_fechado\n\
m_item_dormindo m_item_descansando m_item_sentado m_item_emcima m_item_sala\n\
m_muitos_itens m_item_pesado m_muito_peso m_pegar_sala1 m_pegar_sala2\n\
m_pegar_item1 m_pegar_item2"
#
uint32 total # Quantidade de itens do mesmo tipo
int8 pegar # 0=pega da sala, 1=pega de outro item
const txtitens = total <= 1 ? arg0 : txttroca(arg0, "$o", "$1x $o")
const txtmoedas = txttroca(arg0, "$o", "$1")

func escr
  ref item # Item aonde está soltando os itens
  ref sala # Aonde soltar os itens
  txt512 erro # Mensagem de erro
  listaobj l
  refvar perm_msg = $perm_[arg0.jogperm].item
  ret perm_msg, $mensjog.msg(perm_msg, arg0)
  ret cmd_pegar(arg0, arg1), nulo
  epara l.addfim(arg0.evento), l, l.ini.remove
    ret l.objini.cmd_pegar(arg0, arg1), nulo
  efim
  arg0.p_espera < 3 && (arg0.p_espera = 3)
# Obtém o objeto de onde pegar
  misc:separa(arg1) # Separa nome do objeto do nome do alvo
  se !misc:sep2 # Se não tem alvo, o alvo é a sala
    pegar = 0
    item = sala = arg0.dono
    se sala.var.ini("u_") && !sala.var.u_[arg0.nome]_
      ret $mens.mp(m_semperm_pegar, arg0, nulo, item)
    fimse
  senao
    pegar = 1
    item = misc:itemtudo(arg0, misc:sep2) # Procura o alvo para o personagem arg0
    sala = item.item ? item.i_salapegar
    se !item
      $mens.mens = misc:sep2
      ret $mens.mp(m_naover, arg0)
    senao item.dono.s_sala && item.dono.var.ini("u_") && !item.dono.var.u_[arg0.nome]_
      ret $mens.mp(m_semperm_pegar, arg0, nulo, item)
    senao !item.i_aberto && !sala
      ret $mens.mp(m_nao_container, arg0, nulo, item)
    senao item.i_aberto > 2 && !arg0.j_imortal
      ret $mens.mp(m_fechado, arg0, nulo, item)
    fimse
    !sala && (sala = item)
  fimse
  nomeobj n # Para reconhecer os itens
  n.ini(misc:sep1, misc:objmax, misc:tudo)
# Pega os itens
  int8 achou # Quantos itens achou
  epara l.addfim(sala.dentro1), l && achou < 10, l.ini.remove
    refvar obj = l.objini
    continuar !obj.visivel(arg0) || !n.nome(obj.ident2, obj.objtot)
    total = n # Quantidade de itens
    refvar erro1 = pegarobj(arg0, item, sala, obj)
    erro1 ? (erro = erro1) : achou++
  efim
  ret achou, nulo
# Pega moedas
  se sala.var.z_moedas_ && sala.visivel(arg0) && n.nome("moedas", sala.var.z_moedas_)
    total = int(misc:sep1) ? n : sala.var.z_moedas
    ret pegarmoedas(arg0, sala)
  fimse
# Não encontrou o item
  ret erro, arg0.msg(erro)
  $mens.mens = misc:sep1
  $mens.mp(m_naover, arg0)

func pegarobj
# arg0 = personagem
# arg1 = item ou sala de onde quer pegar (para mensagens)
# arg2 = objeto que representa o conteúdo interno de arg1
# arg3 = item que quer pegar
# total = quantidade de itens
# Retorna mensagem de erro ou nulo se conseguiu pegar
  ret arg3.i_pegar, arg3.i_pegar
  $mens.m(arg0, arg1, arg3)
  listaitem i
  epara i = arg3.dentro2.ini, i, i.depois
    continuar !i.obj.s_sala
    $mens.p(arg0, arg1, arg3)
    ret $mens.txt(m_item_sala, arg0)
  efim
  se arg3.persolugar
    $mens.p(arg0, arg1, arg3)
    casovar arg3.persolugar.objini.posicao
    casose "4"
      ret $mens.txt(m_item_dormindo, arg0)
    casose "5"
      ret $mens.txt(m_item_descansando, arg0)
    casose "6"
      ret $mens.txt(m_item_sentado, arg0)
    casofim
    ret $mens.txt(m_item_emcima, arg0)
  senao arg3.cabedentro(arg0) < total
    $mens.p(arg0, arg1, arg3)
    ret $mens.txt(m_muitos_itens, arg0)
  senao arg0 == arg2.dono
  senao arg0.pesoden - arg0.pesoveste + arg3.pesotot * total / arg3.objtot > arg0.pesomax
    $mens.p(arg0, arg1, arg3)
    ret arg3.pesotot > arg3.objtot * arg0.pesomax, $mens.txt(m_item_pesado, arg0)
    ret $mens.txt(m_muito_peso, arg0)
  fimse
  ret cmd_pegarobj(arg0, arg1, arg3, total), nulo
  listaobj e
  epara e.addfim(arg0.evento), e, e.ini.remove
    ret e.objini.cmd_pegarobj(arg0, arg1, arg3, total, arg0), nulo
  efim
  epara e.addfim(arg1.evento), e, e.ini.remove
    ret e.objini.cmd_pegarobj(arg0, arg1, arg3, total, arg1), nulo
  efim
  epara e.addfim(arg3.evento), e, e.ini.remove
    ret e.objini.cmd_pegarobj(arg0, arg1, arg3, total, arg3), nulo
  efim
  $mens.p(arg0, arg1, arg3)
  $mens.o_1 = total
  se pegar
    refvar m1 = txtitens(arg1.i_pegouitem1 ?? m_pegar_item1)
    refvar m2 = txtitens(arg1.i_pegouitem2 ?? m_pegar_item2)
    $mens.mvis2(m1, m2)
  senao
    refvar m1 = txtitens(arg1.s_pegarmsg1 ?? m_pegar_sala1)
    refvar m2 = txtitens(arg1.s_pegarmsg2 ?? m_pegar_sala2)
    $mens.mvis2(m1, m2)
  fimse
  refvar r = arg3.mudadono(arg0, total)
  cmd_pegouobj(arg0, arg1, r, total)
  epara e.addfim(arg0.evento), e, e.ini.remove
    e.objini.cmd_pegouobj(arg0, arg1, r, total, arg0)
  efim
  epara e.addfim(arg1.evento), e, e.ini.remove
    e.objini.cmd_pegouobj(arg0, arg1, r, total, arg1)
  efim
  epara e.addfim(r.evento), e, e.ini.remove
    e.objini.cmd_pegouobj(arg0, arg1, r, total, r)
  efim
  arg0.p_espera += 2

func pegarmoedas
# arg0=personagem, arg1=de onde pegar, total=quantidade de moedas
  ret cmd_pegarmoedas(arg0, arg1, total), nulo
  listaobj e
  epara e.addfim(arg0.evento), e, e.ini.remove
    ret e.objini.cmd_pegarmoedas(arg0, arg1, total, arg0), nulo
  efim
  epara e.addfim(arg1.evento), e, e.ini.remove
    ret e.objini.cmd_pegarmoedas(arg0, arg1, total, arg1), nulo
  efim
  ret !total, nulo
  arg1.var.z_moedas_ -= total
  arg1.var.z_moedas_ < 0 && (arg1.var.z_moedas = "")
  arg0.var.z_moedas_ += total
  arg0.p_espera += 2
  arg1.objmudou = 1
  $mens.p(arg0, arg1)
  $mens.o_1 = total == 1 ? "uma moeda" : total == 2 ? "duas moedas" : txt(total) + " moedas"
  se pegar
    refvar m1 = txtmoedas(arg1.i_pegouitem1 ?? m_pegar_item1)
    refvar m2 = txtmoedas(arg1.i_pegouitem2 ?? m_pegar_item2)
    $mens.mvis2(m1, m2)
  senao
    $mens.mvis2(txtmoedas(m_pegar_sala1), txtmoedas(m_pegar_sala2))
  fimse


classe m_cmd_pegar
herda comando_menu_cmd
#
const nome1 = "Ajuda"
const tipo1 = "opc_texto"
const vari1 = "m_ajuda"
#
const nome2 = "Sem alvo"
const tipo2 = "opc_linha"
const vari2 = "m_naover"
#
const nome3 = "Sem permissão"
const tipo3 = "opc_linha"
const vari3 = "m_semperm_pegar"
#
const nome4 = "Não é container"
const tipo4 = "opc_linha"
const vari4 = "m_nao_container"
#
const nome5 = "Está fechado"
const tipo5 = "opc_linha"
const vari5 = "m_fechado"
#
const nome6 = "Alguém dormindo"
const tipo6 = "opc_linha"
const vari6 = "m_item_dormindo"
#
const nome7 = "Alguém descansando"
const tipo7 = "opc_linha"
const vari7 = "m_item_descansando"
#
const nome8 = "Alguém sentado"
const tipo8 = "opc_linha"
const vari8 = "m_item_sentado"
#
const nome9 = "Alguém em cima"
const tipo9 = "opc_linha"
const vari9 = "m_item_emcima"
#
const nome10 = "Item tem salas dentro"
const tipo10 = "opc_linha"
const vari10 = "m_item_sala"
#
const nome11 = "Muitos itens"
const tipo11 = "opc_linha"
const vari11 = "m_muitos_itens"
#
const nome12 = "Item pesado"
const tipo12 = "opc_linha"
const vari12 = "m_item_pesado"
#
const nome13 = "Muito peso"
const tipo13 = "opc_linha"
const vari13 = "m_muito_peso"
#
const nome14 = "Pegar da sala perso"
const tipo14 = "opc_linha"
const vari14 = "m_pegar_sala1"
#
const nome15 = "Pegar da sala outros"
const tipo15 = "opc_linha"
const vari15 = "m_pegar_sala2"
#
const nome16 = "Pegar de item perso"
const tipo16 = "opc_linha"
const vari16 = "m_pegar_item1"
#
const nome17 = "Pegar de item outros"
const tipo17 = "opc_linha"
const vari17 = "m_pegar_item2"
