classe h_cmd_gritar
herda comando_comum
const objmenu = $m_cmd_gritar
const objtipo = 2 # Pode renomear
const posic = 5
const objcmd = v_tipo ? este
const txtajuda = v_tipo ? txtajuda1(m_ajuda)
#
const m_ajuda = "-t\n\
-s [mensagem]\n\
Envia mensagem para todos os personagens que estiverem na mesma área.\n\
Se a mensagem for omitida, mostra as últimas mensagens enviadas\n\
e recebidas."
const m_hist_vazio = "Nenhuma mensagem ao gritar."
const m_hist_lista = "\b\c6Últimas mensagens ao gritar:\b"
const m_nivel = "Para gritar você precisa chegar no nível $m."
const v_nivel = 0
const m_move = "Você está cansad$s demais."
const v_move = 2
const m_gritar1 = "Você gritou '$m'"
const m_gritar2 = "$P gritou '$m'"
const m_hist1 = "$R '$m'"
const m_hist2 = "$R '$m'"
const v_tipo = 1
const admordem = "m_ajuda v_tipo m_hist_vazio m_hist_lista m_nivel v_nivel\n\
m_move v_move m_gritar1 m_gritar2 m_hist1 m_hist2"

func escr
  ref r
  txt100 area
  refvar perm_msg = $perm_[arg0.jogperm].c_gritar
  se !arg1
    ret !arg0.sock.var.z_hist_gritar, $mens.mp(m_hist_vazio, arg0)
    refvar t = arg0.sock.txtmais
    t.limpar
    t.addfim(m_hist_lista)
    t.addfim(arg0.sock.var.z_hist_gritar)
    ret arg0.sock.txtmostra
  senao perm_msg
    ret $mens.mp(perm_msg, arg0)
  senao arg0.pnivel < v_nivel
    $mens.mens = v_nivel
    ret $mens.mp(m_nivel, arg0)
  senao arg0.pmove < m_move
    ret $mens.mp(m_move, arg0)
  fimse
  epara r = arg0.dono, r, r = r.dono
    area = r.s_area
    refvar g = txt(r.s_gritar(arg0))
    ret g, arg0.msg(g)
  efim
  arg0.pmove -= m_move
  $mens.p(arg0)
  $mens.mens = $miscbebida.msgperso(arg1, arg0.p_bebida)
  $mens.msg(m_gritar1, arg0)
  se arg0.sock
    $misclog.falar("gritar " + arg0.sock.nome + ": " + arg1)
    refvar e = arg0.sock.var.z_hist_gritar
    e = $mens.txt(m_hist1, arg0) + (e ? "\n") + txtsublin(e, 0, 29)
  fimse
  indiceitem item
  epara item.ini("un "), txt1(item.txt) == "un", item.depois
    r = item.obj.perso
    continuar !r || r == arg0 || r.var.u_[arg0.nome]
    epara r = r.dono, r.dono, r = r.dono
      r.s_gritar(arg0) && (r = nulo)
    efim
    continuar !r || r.s_gritar(arg0) || r.s_area != area
    $mens.msg(m_gritar2, item.obj.perso)
    continuar !arg0.sock
    refvar e = item.obj.perso.sock.var.z_hist_gritar
    e = $mens.txt(m_hist2, item.obj.perso) + (e ? "\n") + txtsublin(e, 0, 29)
  efim
# Executa eventos
  cmd_gritou(arg0, arg1)
  listaobj l
  epara l.addfim(arg0.evento), l, l.ini.remove
    l.objini.cmd_gritou(arg0, arg1)
  efim


classe m_cmd_gritar
herda comando_menu_cmd
#
const nome1 = "Comando Gritar"
const tipo1 = "opc_opcao"
const vari1 = "v_tipo"
const extr1 = "Desabilitado\nHabilitado"
#
const nome2 = "Ajuda"
const tipo2 = "opc_texto"
const vari2 = "m_ajuda"
#
const nome3 = "Histórico vazio"
const tipo3 = "opc_linha"
const vari3 = "m_hist_vazio"
#
const nome4 = "Histórico"
const tipo4 = "opc_linha"
const vari4 = "m_hist_lista"
#
const nome5 = "Nível mínimo"
const tipo5 = "opc_numero"
const vari5 = "v_nivel"
#
const nome6 = "Nível insuficiente"
const tipo6 = "opc_linha"
const vari6 = "m_nivel"
#
const nome7 = "Movimentos gastos"
const info7 = "Quantos pontos de movimentos o personagem gasta ao gritar"
const tipo7 = "opc_numero"
const vari7 = "v_move"
#
const nome8 = "Move insuficiente"
const tipo8 = "opc_linha"
const vari8 = "m_move"
#
const nome9 = "Gritar: perso"
const info9 = "Ao teclar gritar e uma mensagem"
const tipo9 = "opc_linha"
const vari9 = "m_gritar1"
#
const nome10 = "Gritar: outros"
const info10 = "Ao teclar gritar e uma mensagem"
const tipo10 = "opc_linha"
const vari10 = "m_gritar2"
#
const nome11 = "Histórico enviado"
const tipo11 = "opc_linha"
const vari11 = "m_hist1"
#
const nome12 = "Histórico recebido"
const tipo12 = "opc_linha"
const vari12 = "m_hist2"
