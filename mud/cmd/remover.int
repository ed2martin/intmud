classe h_cmd_remover
herda comando_comum
const objmenu = $m_cmd_remover
const objtipo = 2 # Pode renomear
const posic = 5
#
const m_ajuda = "-t\n\
-s <objeto>\n\
-s <quantidade> <objeto>\n\
Seu personagem deixa de usar um objeto que está vestindo ou usando.\n\
Para remover tudo (até 10 objetos) tecle TUDO ao invés do objeto."
const m_sem_args = "Remover o quê?"
const m_naover_p = "Você não está usando isso."
const m_naover_a = "$A não está usando isso."
const m_longe_a = "$A está longe."
const m_em_cima_p = "Antes você precisa parar de usar $o."
const m_em_cima_a = "Antes $a precisa parar de usar $o."
const m_removeu1_p = "Você removeu $o."
const m_removeu1_a = "$A removeu $o."
const m_removeu2_p = "$P removeu $o."
const m_removeu2_a = "$A removeu $o."
const admordem = "m_ajuda m_sem_args m_naover_p m_naover_a m_longe_a m_em_cima_p\n\
m_em_cima_a m_removeu1_p m_removeu1_a m_removeu2_p m_removeu2_a"

func escr
  ret !arg1, $mensjog.msg(m_sem_args, arg0)
  refvar perm_msg = $perm_[arg0.jogperm].vestir
  ret perm_msg, $mensjog.msg(perm_msg, arg0)
  refvar alvo = ref(arg0.persoesc) ?? arg0 # Quem vai remover
  ret alvo.dono != arg0 && alvo.dono != arg0.dono, $mens.mp(m_longe_a, arg0, alvo)
  refvar tipomsg = arg0 == alvo ? "_p" : "_a"
# Variáveis
  txt12 vest1 = alvo.positemvestir # Aonde está vestindo
  txt512 lin
  uint8 total
  listaobj l
  nomeobj n # Para reconhecer os itens
  n.ini(arg1, misc:objmax, misc:tudo)
  epara l.addfim(alvo.dentro2), l, l.ini.remove
    ref r = l.objini
    continuar !r.vestpos || !r.visivel(arg0) || !n.nome(r.ident2, r.objtot)
    total++
# Verifica itens em cima
    refvar vest2 = vest1 & ~txthex(r.vestpos2, 12)
    epara lin = txtbith(r.vestpos2), lin, lin = txt2(lin)
      continuar vest2 & config:vestir[txt1(lin)] == "0"
      refvar obj = alvo.objitemvestir(vest2 & config:vestir[txt1(lin)])
      $mens.mp(m_em_cima[tipomsg], arg0, alvo, obj)
      sair
    efim
    continuar lin
    refvar posic = int(r.vestpos)
# Eventos
    ret cmd_remover(alvo, r, posic), nulo
    listaobj e
    epara e.addfim(alvo.evento), e, e.ini.remove
      ret e.objini.cmd_remover(alvo, r, posic, alvo), nulo
    efim
    epara e.addfim(r.evento), e, e.ini.remove
      ret e.objini.cmd_remover(alvo, r, posic, r), nulo
    efim
# Remove o item
    refvar som = r.vestpos == 50 ? r.i_som_emp0 : r.i_som_vest0
    r.vestir(0)
    $mens.p(arg0, alvo, r)
    $mens.msgsomvis(m_removeu1[tipomsg], som, arg0)
    $mens.mvis2som(m_removeu2[tipomsg], som)
# Eventos
    cmd_removeu(alvo, r, posic)
    epara e.addfim(alvo.evento), e, e.ini.remove
      e.objini.cmd_removeu(alvo, r, posic, alvo)
    efim
    epara e.addfim(r.evento), e, e.ini.remove
      e.objini.cmd_removeu(alvo, r, posic, r)
    efim
# Acerta posições
    vest1 = alvo.positemvestir
  efim
# Mensagem se não encontrou nenhum item
  !total && $mens.mp(m_naover[tipomsg], arg0, alvo)


classe m_cmd_remover
herda comando_menu_cmd
#
const nome1 = "Ajuda"
const tipo1 = "opc_texto"
const vari1 = "m_ajuda"
#
const nome2 = "Sem argumentos"
const tipo2 = "opc_linha"
const vari2 = "m_sem_args"
#
const titu3 = " * Personagem remove"
#
const nome3 = "Sem alvo"
const tipo3 = "opc_linha"
const vari3 = "m_naover_p"
#
const nome4 = "Outro item em cima"
const tipo4 = "opc_linha"
const vari4 = "m_em_cima_p"
#
const nome5 = "Removeu perso"
const tipo5 = "opc_linha"
const vari5 = "m_removeu1_p"
#
const nome6 = "Removeu outros"
const tipo6 = "opc_linha"
const vari6 = "m_removeu2_p"
#
const titu7 = " * Animal remove"
#
const nome7 = "Sem alvo"
const tipo7 = "opc_linha"
const vari7 = "m_naover_a"
#
const nome8 = "Animal longe"
const tipo8 = "opc_linha"
const vari8 = "m_longe_a"
#
const nome9 = "Outro item em cima"
const tipo9 = "opc_linha"
const vari9 = "m_em_cima_a"
#
const nome10 = "Removeu perso"
const tipo10 = "opc_linha"
const vari10 = "m_removeu1_a"
#
const nome11 = "Removeu outros"
const tipo11 = "opc_linha"
const vari11 = "m_removeu2_a"
