classe h_cmd_renascer
herda comando_comum
const objmenu = $m_cmd_renascer
const objtipo = 2 # Pode renomear
const objcmd = config:renascer ? este
const posic = 5
#
const m_ajudaI = "-t\n\
-s\n\
Assim que o seu personagem atingir o nível máximo, você poderá usar\n\
esse comando para renascer em outra raça e/ou classe.\n\
O nível máximo depende muito da raça e da classe."
const m_ajuda2 = "Você perde todas as habilidades e magias, mas poderá escolher qual\n\
não perderá nas próximas vezes que renascer."
const m_ajuda3 = "Você perde todas as habilidades e magias, mas poderá escolher duas que\n\
não perderá nas próximas vezes que renascer. Pode repetir."
const m_ajuda4 = "Você perde todas as habilidades e magias, mas poderá escolher 3 que\n\
não perderá nas próximas vezes que renascer. Pode repetir."
const m_ajuda5 = "Você perde todas as habilidades e magias, mas poderá escolher 4 que\n\
não perderá nas próximas vezes que renascer. Pode repetir."
const m_ajuda6 = "Você perde todas as habilidades e magias, mas poderá escolher 5 que\n\
não perderá nas próximas vezes que renascer. Pode repetir."
const m_ajudaR = "Nos comandos hab e magia, aparecerá R1, para indicar que foi escolhida\n\
uma vez, e renascer fará voltar ao nível iniciante. Na segunda vez, R2,\n\
e voltará para muito básico, e na terceira em diante, nível básico."
const m_ajudaM1 = "E também, cada vez que é escolhida, o nível para aprender diminui em $m."
const m_ajudaM2 = "E também, cada vez que é escolhida, o nível para aprender aumenta em $m."
#
const m_sem = "Na raça e classe que você escolheu não tem como renascer."
const m_nivel = "Você precisa chegar no nível $m para renascer."
const m_escolha1 = "Escolha uma raça ou tecle Z para desistir"
const m_escolha2 = "Escolha uma classe ou tecle Z para desistir"
const m_escolha3 = "Escolha uma subclasse ou tecle Z para desistir"
const m_confirma1 = "Você quer a raça $m? (tecle S ou N)"
const m_confirma2 = "Você quer a classe $m? (tecle S ou N)"
const m_confirma3 = "Você quer a subclasse $m? (tecle S ou N)"
const m_invalido1 = "Raça inválida; escolha uma:"
const m_invalido2 = "Classe inválida; escolha uma:"
const m_invalido3 = "Subclasse inválida; escolha uma:"
const m_habmag1 = "Qual a habilidade ou magia você deseja manter após renascer? Z desiste"
const m_habmag2 = "Qual a segunda habilidade ou magia? Z desiste"
const m_habmag3 = "Qual a terceira habilidade ou magia? Z desiste"
const m_habmag4 = "Qual a quarta habilidade ou magia? Z desiste"
const m_habmag5 = "Qual a quinta habilidade ou magia? Z desiste"
const m_hab = "Você quer a habilidade $m? (Tecle S ou N)"
const m_magia = "Você quer a magia $m? (Tecle S ou N)"
const m_nao_possui = "Você não possui $m, escolha outra."
const m_renasceu = "Você renasceu no nível $m."
const m_cancelar = "Desistiu."
const m_antes2 = "$P some em um redemoinho de fumaça."
const m_depois2 = "$P aparece de um redemoinho de fumaça."
#
const admordem = "m_ajudaI m_ajuda2 m_ajuda3 m_ajuda4 m_ajuda5 m_ajuda6\n\
m_ajudaR m_ajudaM1 m_ajudaM2\n\
m_sem m_nivel m_escolha1 m_escolha2 m_escolha3\n\
m_confirma1 m_confirma2 m_confirma3\n\
m_invalido1 m_invalido2 m_invalido3\n\
m_habmag1 m_habmag2 m_habmag3 m_habmag4 m_habmag5\n\
m_hab m_magia m_nao_possui m_renasceu m_cancelar\n\
m_antes1 m_antes2 m_depois1 m_depois2"

func acertahab # Acerta cada habilidade ou magia do jogador
# Nota: só é chamado quando o comando Renascer perde as hab/magias
# arg0 = personagem
# arg1 = nome da variável em var; por exmeplo, habilidade Socar é "h_socar"
# arg2 = variável em var; arg2 = arg0.var.[arg1]
# arg2 contém grau de conhecimento seguido de espaço e quantas veses escolheu
  arg2 = txt2(arg2) ? intmin("3", txt1(arg2), txt2(arg2)) + " " + txt2(arg2) : ""

func acertasala # Define em que sala o personagem vai após renascer
# arg0 = personagem
# arg1 = nova sala
# Retorna: nova sala ou null se não deve mudar de sala
  ret arg1

func txtajuda
  ret !config:renascer, nulo
  ret config:renascer < 2, txtajuda1(m_ajudaI)
  textotxt t
  t.addfiM(m_ajudaI)
  m_ajuda[config:renascer] && t.addfim(m_ajuda[config:renascer])
  m_ajudaR && t.addfim(m_ajudaR)
  se config:nrenascer > 0
    $mensjog.mens = config:nrenascer
    m_ajudaM1 && t.addfim($mensjog.txt(m_ajudaM1, arg0))
  senao config:nrenascer < 0
    $mensjog.mens = -config:nrenascer
    m_ajudaM2 && t.addfim($mensjog.txt(m_ajudaM2, arg0))
  fimse
  ret txtajuda1(t.remove(1000))

func escr
  refvar nmax = arg0.pnivelmax
  se nmax <= 0
    ret $mens.mp(m_sem, arg0)
  senao arg0.pnivel < nmax
    $mens.mens = nmax
    ret $mens.mp(m_nivel, arg0)
  senao
    adiciona(arg0.var.z_tipo1, arg0.tipo1)
    adiciona(arg0.var.z_tipo2, arg0.tipo2)
    adiciona(arg0.var.z_tipo3, arg0.tipo3)
    arg0.sock.tpasso = "1"
    passo(arg0.sock, "")
  fimse

func adiciona # Adiciona o texto arg1 na variável arg0
  se !arg0
    arg0 = arg1
  senao arg1 && txtproclin(arg0, arg1) < 0
    arg0 += "\n" + arg1
  fimse

func passo
# Cancelar
  se arg1 == "Z"
    arg0.passo = ""
    arg0.var.limpar("j_")
    $mens.mp(m_cancelar, arg0.perso)
    ret 1
  fimse
# Chama passo1
  arg0.passo = este
  ret arg0.tpasso < 4 ? !passo1(arg0, arg1) : !passo4(arg0, arg1), 1
  enquanto arg0.tpasso < 4 ? passo1(arg0, "") : passo4(arg0, "")
  efim
  ret 1

func passo1 # Escolha da raça, classe e subclasse
# arg0 = objeto jogsock
# arg1 = o que digitou
  txt100 lin
  prog p
  textovar var # Contém os tipos que o jogador pode escolher
  textotxt t1 # Para acertar var
  textotxt t2 # Para acertar var
  refvar tpasso = arg0.tpasso
# Informações da raça
  se txt2(tpasso)
    se arg1 == "S"
      ret escolheu(arg0)
    senao arg1 == "N"
      tpasso = txt1(tpasso)
      ret 1
    senao
      lin = int(tpasso) == 1 ? "1" : int(tpasso) == 2 ? "2" : "3"
      refvar r = $[txt2(tpasso)]
      $mens.mens = (arg0.perso.msexo2 ? "" : r.nome2) ?? r.nome
      $mens.mp(m_confirma[lin], arg0.perso)
      ret 0
    fimse
  fimse
# Tipos que todos podem escolher
  epara p.iniclasse("t_"), p.lin, p.depois
    tpasso == $[p.texto].menu && (var.[p.texto]_ = 1)
  efim
# Tipos que o jogador já completou
  epara t1.addfim(arg0.perso.var.z_tipo[tpasso]), t1, nulo
    refvar r = $t_[t1.remove(1)]
    var.[r]_ = 1
    epara t2.addfim(r.evoluir), t2, var.[$t_[t2.remove(1)]]_ = 1
    efim
  efim
# Obtém a lista de raças/classes/subclasses e checa se escolheu alguma
  arg0.txtmais.limpar
  epara nulo, var.ini, var.valorini("") = ""
    refvar r = $[var.ini]
    se !r.racas || tpasso < 2
    senao txtproclin(r.racas, arg0.var.j_tipo1) < 0
      continuar
    fimse
    continuar r.sexo && arg0.perso.psexo != r.sexo - 1
    se !r.classes || tpasso < 3
    senao txtproclin(r.classes, arg0.var.j_tipo2) < 0
      continuar
    fimse
    refvar nome = (arg0.perso.msexo2 ? "" : r.nome2) ?? r.nome
    arg0.txtmais.addfim(txt(arg0.txtmais.linhas + 1) + ". " + nome)
    lin = var.ini
    continuar txt(arg1) != txt(arg0.txtmais.linhas)
    arg0.txtmais.limpar
    tpasso += " " + var.ini
    arg0.msg2((arg0.perso.msexo2 ? "" : r.desc2) ?? r.desc ?? nome)
    ret 1
  efim
# Uma ou nenhuma: escolhe automaticamente
  se arg0.txtmais.linhas <= 1
    arg0.txtmais.limpar
    tpasso += " " + lin
    ret escolheu(arg0)
# Mais de uma raça: apresenta o menu
  senao
    $mensjog.mens = arg1
    se int(tpasso) == 1 # Raça
      arg0.txtmais.addini($mensjog.txt(arg1 ? m_invalido1 : m_escolha1, arg0.perso))
    senao int(tpasso) == 2 # Classe
      arg0.txtmais.addini($mensjog.txt(arg1 ? m_invalido2 : m_escolha2, arg0.perso))
    senao # Subclasse
      arg0.txtmais.addini($mensjog.txt(arg1 ? m_invalido3 : m_escolha3, arg0.perso))
    fimse
    arg0.txtmostra
    ret 0
  fimse

func escolheu # Jogador fez a escolha
# arg0 = objeto jogsock do jogador
# txt1(arg0.tpasso) = 1 se raça, 2 se classe, 3 se subclasse
# txt2(arg0.tpasso) = nome da classe t_ alguma coisa
# Retorna 1 se deve fazer mais uma escolha: se txt1(arg0.tpasso)<=3
  arg0.var.j_tipo[txt1(arg0.tpasso)] = txt(txt2(arg0.tpasso), 2)
  arg0.tpasso = int(arg0.tpasso) + 1
  ret 1

func passo4 # Escolha de uma habilidade ou magia
# arg0 = objeto jogsock
# arg1 = o que digitou
  ret config:renascer < 2, renascer(arg0)
  ret !arg0.perso.var.ini("h_") && !arg0.perso.var.ini("m_"), renascer(arg0)
  refvar tpasso = arg0.tpasso
# Pede a habilidade ou magia
  se txt2(tpasso) == ""
    refvar var = arg0.perso.var
    se arg1 == ""
      casovar txt1(tpasso)
      casose
        $mens.mp(m_habmag1, arg0.perso)
        ret 0
      casose "5"
        $mens.mp(m_habmag2, arg0.perso)
        ret 0
      casose "6"
        $mens.mp(m_habmag3, arg0.perso)
        ret 0
      casose "7"
        $mens.mp(m_habmag4, arg0.perso)
        ret 0
      casose "8"
        $mens.mp(m_habmag5, arg0.perso)
        ret 0
      casofim
    senao var.h_[arg1]
      tpasso += " " + var.nomevar("h_" + arg1)
      $mens.mens = txte(txt(tpasso, 4))
      $mens.mp(m_hab, arg0.perso)
    senao var.m_[arg1]
      tpasso += " " + var.nomevar("m_" + arg1)
      $mens.mens = txte(txt(tpasso, 4))
      $mens.mp(m_magia, arg0.perso)
    senao
      txt100 t1
      nomeobj n
      n.ini(arg1)
      epara t1 = var.ini("h_"), t1, t1 = var.depois(t1, "h_")
        continuar !n.nome(txt(t1, 2))
        tpasso += " " + t1
        $mens.mens = txt2(txte(t1))
        $mens.mp(m_hab, arg0.perso)
        ret 0
      efim
      epara t1 = var.ini("m_"), t1, t1 = var.depois(t1, "m_")
        continuar !n.nome(txt(t1, 2))
        tpasso += " " + t1
        $mens.mens = txt2(txte(t1))
        $mens.mp(m_magia, arg0.perso)
        ret 0
      efim
      $mens.mens = arg1
      $mens.mp(m_nao_possui, arg0.perso)
    fimse
    ret 0
# Confirma
  senao arg1 == "S"
    arg0.var.j_hab[txt1(tpasso)] = txt2(tpasso)
    arg0.tpasso = int(arg0.tpasso) + 1
    ret int(tpasso) < config:renascer + 3, 1
    refvar v = arg0.perso.var
    txt100 lin
    lin = arg0.var.j_hab4, v.[lin] = txt1(v.[lin]) + " " + (1 + txt2(v.[lin]))
    lin = arg0.var.j_hab5, v.[lin] = txt1(v.[lin]) + " " + (1 + txt2(v.[lin]))
    lin = arg0.var.j_hab6, v.[lin] = txt1(v.[lin]) + " " + (1 + txt2(v.[lin]))
    lin = arg0.var.j_hab7, v.[lin] = txt1(v.[lin]) + " " + (1 + txt2(v.[lin]))
    lin = arg0.var.j_hab8, v.[lin] = txt1(v.[lin]) + " " + (1 + txt2(v.[lin]))
    debug d
    d.ini
    epara lin = v.ini("h_"), txt(lin, 0, 2) == "h_", lin = v.depois(lin)
      acertahab(arg0, lin, v.[lin])
    efim
    d.ini
    epara lin = v.ini("m_"), txt(lin, 0, 2) == "m_", lin = v.depois(lin)
      acertahab(arg0, lin, v.[lin])
    efim
    d.ini
    ret renascer(arg0)
  senao arg1 == "N"
    tpasso = txt1(tpasso)
    ret 1
  senao txt(tpasso, 2, 1) == "h" # Quer a habilidade ... ?
    $mens.mens = txt(tpasso, 4)
    $mens.mp(m_hab, arg0.perso)
  senao
    $mens.mens = txt(tpasso, 4) # Quer a magia ... ?
    $mens.mp(m_magia, arg0.perso)
  fimse
  ret 0

func renascer
# arg0 = objeto jogsock
  refvar perso = arg0.perso
  refvar var = arg0.var
  arg0.passo = ""
  perso.tipo1 = var.j_tipo1
  perso.tipo2 = var.j_tipo2
  perso.tipo3 = var.j_tipo3
  perso.pnivel = intmax(t_[var.j_tipo1]:nmin, t_[var.j_tipo2]:nmin, t_[var.j_tipo3]:nmin)
  perso.expatual = 0
  perso.recalc = 1
  perso.prenascer++
  var.limpar("j_")
  $mens.mens = perso.pnivel
  $mens.mp(m_renasceu, perso)
  listaobj l
  epara l.addfim(perso.dentro2), l, l.ini.remove
    l.objini.item && $comum_vestir_obj.checavestir(perso, l.objini) && l.objini.vestir(0)
    l.objini.e_renascer && apagar(l.objini)
  efim
  perso.cmd_nivel1(perso, 0)
  listaobj l
  epara l.addfim(perso.evento), l, l.ini.remove
    l.objini.cmd_nivel2(perso, 0)
  efim
  perso.recalc_exec
  perso.recalc = 0
  perso.pvida = perso.pvidamax
  perso.pmana = perso.pmanamax
  perso.pmove = perso.pmovemax
# Muda de sala
  ref sala = acertasala(perso, $t_[perso.tipo1].sala_renascer ?? $t_[perso.tipo2].sala_renascer ?? $t_[perso.tipo3].sala_renascer ?? config:sala_renascer)
  se sala && sala != perso.dono
    $mens.p(perso)
    $mens.mvis2(m_antes1, m_antes2)
    perso.mudadono(sala)
    $mens.p(perso)
    $mens.mvis2(m_depois1, m_depois2)
  fimse
  ret 0


classe m_cmd_renascer
herda comando_menu_cmd
#
const nome1 = "Renascer"
const info1 = "Nota: Renascer não funciona se não houver nível máximo nas raças ou classes\n\
Nota: A explicação de AJUDA RENASCER muda conforme essa opção e a próxima"
const tipo1 = "opc_opcao--"
const clas1 = "config"
const vari1 = "renascer"
const extr1 = "Desabilitado\n\
Não perde as hab/magias\n\
Escolhe uma hab/magia\n\
Escolhe duas habs/magias\n\
Escolhe três habs/magias\n\
Escolhe quatro habs/magias\n\
Escolhe cinco habs/magias"
#
const nome2 = "Nível aula"
const info2 = "Cada vez que o jogador escolhe uma habilidade ou magia no comando renascer,\n\
poderá aprendê-la em um nível menor. Essa opção é quantos níveis reduzir."
const tipo2 = "opc_numero--"
const clas2 = "config"
const vari2 = "nrenascer"
#
const nome3 = "Nível máximo"
const info3 = "Após renascer, o nível para renascer novamente aumenta conforme essa opção"
const tipo3 = "opc_numero--"
const clas3 = "config"
const vari3 = "nivel_renascer"
#
const nome4 = "Experiência máxima"
const info4 = "Em porcentagem. Ao renascer, a experiência necessária para subir de nível\n\
é multiplicada por esse número."
const tipo4 = "opc_numero--"
const clas4 = "config"
const vari4 = "exp_renascer"
const extr4 = "1 1000"
#
const nome5 = "Sala renascer"
const info5 = "Para que sala vai após renascer; se ausente continua na mesma sala"
const tipo5 = "opc_sala"
const clas5 = "config"
const vari5 = "sala_renascer"
#
const nome6 = "Ajuda Início"
const info6 = "Início do texto de ajuda, ao teclar Ajuda Renascer"
const tipo6 = "opc_texto"
const vari6 = "m_ajudaI"
#
const nome7 = "Ajuda 1 hab/mag"
const info7 = "Quando pode escolher uma habilidade/magia"
const tipo7 = "opc_texto"
const vari7 = "m_ajuda2"
#
const nome8 = "Ajuda 2 hab/mag"
const info8 = "Quando pode escolher duas habilidades/magias"
const tipo8 = "opc_texto"
const vari8 = "m_ajuda3"
#
const nome9 = "Ajuda 3 hab/mag"
const info9 = "Quando pode escolher três habilidades/magias"
const tipo9 = "opc_texto"
const vari9 = "m_ajuda4"
#
const nome10 = "Ajuda 4 hab/mag"
const info10 = "Quando pode escolher quatro habilidades/magias"
const tipo10 = "opc_texto"
const vari10 = "m_ajuda5"
#
const nome11 = "Ajuda 5 hab/mag"
const info11 = "Quando pode escolher cinco habilidades/magias"
const tipo11 = "opc_texto"
const vari11 = "m_ajuda6"
#
const nome12 = "Ajuda R"
const info12 = "R nas habilidades e magias para indicar Renasceu"
const tipo12 = "opc_texto"
const vari12 = "m_ajuda6"
#
const nome13 = "Ajuda Nível Menos"
const tipo13 = "opc_texto"
const vari13 = "m_ajudaM1"
#
const nome14 = "Ajuda Nível Mais"
const tipo14 = "opc_texto"
const vari14 = "m_ajudaM2"
#
const nome15 = "Sem renascer"
const tipo15 = "opc_linha"
const vari15 = "m_sem"
#
const nome16 = "Nível"
const tipo16 = "opc_linha"
const vari16 = "m_nivel"
#
const nome17 = "Escolha raça"
const tipo17 = "opc_linha"
const vari17 = "m_escolha1"
#
const nome18 = "Escolha classe"
const tipo18 = "opc_linha"
const vari18 = "m_escolha2"
#
const nome19 = "Escolha subclasse"
const tipo19 = "opc_linha"
const vari19 = "m_escolha3"
#
const nome20 = "Confirma raça"
const tipo20 = "opc_linha"
const vari20 = "m_confirma1"
#
const nome21 = "Confirma classe"
const tipo21 = "opc_linha"
const vari21 = "m_confirma2"
#
const nome22 = "Confirma subclasse"
const tipo22 = "opc_linha"
const vari22 = "m_confirma3"
#
const nome23 = "Raça inválida"
const tipo23 = "opc_linha"
const vari23 = "m_invalido1"
#
const nome24 = "Classe inválida"
const tipo24 = "opc_linha"
const vari24 = "m_invalido2"
#
const nome25 = "Subclasse inválida"
const tipo25 = "opc_linha"
const vari25 = "m_invalido3"
#
const nome26 = "Primeira hab/mag"
const tipo26 = "opc_linha"
const vari26 = "m_habmag1"
#
const nome27 = "Segunda hab/mag"
const tipo27 = "opc_linha"
const vari27 = "m_habmag2"
#
const nome28 = "Terceira hab/mag"
const tipo28 = "opc_linha"
const vari28 = "m_habmag3"
#
const nome29 = "Quarta hab/mag"
const tipo29 = "opc_linha"
const vari29 = "m_habmag4"
#
const nome30 = "Quinta hab/mag"
const tipo30 = "opc_linha"
const vari30 = "m_habmag5"
#
const nome31 = "Confirma hab"
const tipo31 = "opc_linha"
const vari31 = "m_hab"
#
const nome32 = "Confirma magia"
const tipo32 = "opc_linha"
const vari32 = "m_magia"
#
const nome33 = "Não possui hab/magia"
const tipo33 = "opc_linha"
const vari33 = "m_nao_possui"
#
const nome34 = "Renasceu"
const tipo34 = "opc_linha"
const vari34 = "m_renasceu"
#
const nome35 = "Cancelou"
const tipo35 = "opc_linha"
const vari35 = "m_cancelar"
#
const nome36 = "Saiu da sala perso"
const tipo36 = "opc_linha"
const vari36 = "m_antes1"
#
const nome37 = "Saiu da sala outros"
const tipo37 = "opc_linha"
const vari37 = "m_antes2"
#
const nome38 = "Entrou na sala perso"
const tipo38 = "opc_linha"
const vari38 = "m_depois1"
#
const nome39 = "Entrou na sala outros"
const tipo39 = "opc_linha"
const vari39 = "m_depois2"
