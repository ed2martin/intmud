classe h_cmd_social
herda comando_comum
const objmenu = $m_cmd_social
const objtipo = 2 # Pode renomear
const objnivel = 6
const posic = 0
const o1 = $cmd2_socialX
const o2 = $cmd2_socialY
const o3 = $cmd2_socialZ
#
const m_ajuda = "-t\n\
-s [nome do comando]\n\
Sem argumentos, mostra a lista de comandos sociais disponíveis.\n\
Seguido do nome do social mostra as mensagens que o social emitirá.\n\n\
Os comandos sociais são usados para interpretação entre personagens.\n\
São comandos que enviam uma mensagem para os personagens na mesma sala,\n\
mas não causam nenhum dano nos personagens e/ou itens envolvidos."
const m_lista_vazia = "Nenhum comando social disponível."
const m_lista_soc = "Comandos sociais disponíveis:"
const m_naoexiste = "Comando social não existe: $m"
#
const m_sem_args = "Digite alguma coisa após $m"
const m_ignorar = "Você está ignorando %c."
const m_ignorado = "$C ignora suas palavras."
const m_condicoes1 = "Você não está em condições."
const m_condicoes2 = "$A não está em condições."
const admordem = "m_ajuda m_lista_soc m_naoexiste\n\
m_sem_args m_ignorar m_ignorado m_condicoes1 m_condicoes2"

func escr
  ret arg1, escr_arg(arg0, arg1)
  $mens.mens = arg1
  textotxt t
  prog p
  epara p.iniclasse("soc_"), p.lin, p.depois
    arg0.pnivel >= $[p.texto].nivel && t.addfim(txt2(txte(p.texto)))
  efim
  ret t.linhas == 0, $mens.mp(m_lista_vazia, arg0)
  t.addfim(m_lista_soc + "\n" + txttroca(t.remove(1000), "\n", ", "))
  t.dividelin(50, 75)
  arg0.msg2(t.remove(1000))

func escr_arg # Com algum argumento
  textotxt t # Mensagens
  prog p # Para obter o objeto correspondente ao comando
  ref r # Objeto correspondente ao comando
  epara p.iniclasse("soc_" + arg1), p.lin, p.depois
    sair arg0.pnivel >= $[p.texto].nivel
  efim
  $mens.mens = arg1
  ret !p.lin, $mens.mp(m_naoexiste, arg0)
  r = $[p.texto]
  refvar nome = txt2(txte(r)) # Nome do comando
  refvar msgini = "\nSe " + o1.descnome + " digitar " + nome
  txt100
  $mens.p(o1)
  se r.sem1 && r.sem2
    t.addfim($mens.txt(msgini + ", el$v receberá:\n" + r.sem1, o1))
    t.addfim($mens.txt("E os demais:\n" + r.sem2, o2))
  fimse
  $mens.p(o1, o1)
  se r.auto1 && r.auto2
    t.addfim($mens.txt(msgini + " " + o1.nome + ", el$v receberá:\n" + r.auto1, o1))
    t.addfim($mens.txt("E os demais:\n" + r.auto2, o2))
  fimse
  $mens.p(o1, o2)
  se r.perso1 && r.perso2 && r.perso3
    t.addfim($mens.txt(msgini + " " + o2.nome + ", el$v receberá:\n" + r.perso1, o1))
    t.addfim($mens.txt("E " + o2.descnome + ":\n" + r.perso2, o2))
    t.addfim($mens.txt("E os demais:\n" + r.perso3, este))
  fimse
  $mens.p(o1, nulo, o3)
  se r.item1 && r.item2
    t.addfim($mens.txt(msgini + " " + o3.nome + ", el$v receberá:\n" + r.item1, o1))
    t.addfim($mens.txt("E os demais:\n" + r.item2, este))
  fimse
  se t.linhas
    t.addini("\b\c3" + txtcopiamai(nome, "A") + "\b")
    arg0.msg2(t.remove(1000))
  senao
    arg0.msg("Esse social ainda não está funcionando.")
  fimse


classe cmd2_socialX
# Pseudo personagem 1 para gerar mensagens do social
const perso = 1
const nome = "João"
const descnome = "João"
const descnome2 = descnome
const msexo = 1
const msexo2 = 1
const visivel = 1
const persobat = este
const persoesc = este
const contr = este
const iniclasse = !$[arg0] && criar(arg0)


classe cmd2_socialY
herda cmd2_socialX
# Pseudo personagem 2 para gerar mensagens do social
const nome = "Maria"
const descnome = "Maria"
const descnome2 = descnome
const msexo = 0
const msexo2 = 0
const contr = este


classe cmd2_socialZ
# Pseudo item para gerar mensagens do social
const item = 1
const nome = "bolsa"
const descnome = "uma bolsa"
const descnome2 = descnome
const msexo = 0
const msexo2 = 0
const visivel = 1
const contr = este
const iniclasse = !$[arg0] && criar(arg0)


classe soccomum
herda comando_comum
# Comum a todos os sociais
const objcmd = arg0.pnivel >= nivel ? este
const objnivel = 6
const nivel = 0
const posic = 5
const alvopos = 5
const mvis = 1
const invalido = "Você não vê $m."
# const auto2 = auto1
# const perso2 = perso1
# const perso3 = perso1
# const item2 = item1
const admordem = "nivel posic alvopos mvis invalido sem1 sem2 auto1 auto2\n\
perso1 perso2 perso3 item1 item2"

func escr
  $mens.mens = arg1
  listaobj l
  ret arg2.c_social, $mensjog.msg(arg2.c_social, arg0)
  se !arg1 # Sem argumentos
    se !sem1
      $mens.mens = txt(este, 4)
      $mens.mp(h_cmd_social:m_sem_args, arg0)
    fimse
    $mens.p(arg0)
    mvis ? $mens.mtodos2(sem1, sem2) : $mens.mvis2(sem1, sem2)
    cmd_social(arg0, nulo, este)
    epara l.addfim(arg0.evento), l, l.ini.remove
      l.objini.cmd_social(arg0, nulo, este)
    efim
    ret
  fimse
  perso1 && l.addfim(arg0.dono.dentro2)
  auto1 && l.addfim1(arg0)
  item1 && l.addfim(arg0.dono.dentro1, arg0.dentro1)
  ref r = misc:itemlista(arg0, arg1, l)
  ret !r, $mens.mp(invalido, arg0)
  l.limpar
  se r.var.u_[arg0.nome]
    $mens.mp(h_cmd_social:m_ignorado, arg0, r)
  senao arg0.var.u_[r.nome]
    ret $mens.mp(h_cmd_social:m_ignorar, arg0, r)
  senao r == arg0 && auto1
    ret r.posic < alvopos, $mens.mp(h_cmd_social:m_condicoes1, arg0, r)
    $mens.p(arg0)
    mvis ? $mens.mtodos2(auto1, auto2) : $mens.mvis2(auto1, auto2)
  senao r.perso
    ret r.posic < alvopos, $mens.mp(h_cmd_social:m_condicoes2, arg0, r)
    $mens.p(arg0, r)
    mvis ? $mens.mtodos3(perso1, perso2, perso3) : $mens.mvis3(perso1, perso2, perso3)
  senao
    $mens.p(arg0, nulo, r)
    mvis ? $mens.mtodos2(item1, item2) : $mens.mvis2(item1, item2)
  fimse
  cmd_social(arg0, r, este)
  epara l.addfim(arg0.evento), l, l.ini.remove
    l.objini.cmd_social(arg0, r, este, arg0)
  efim
  epara l.addfim(r.evento), l, l.ini.remove
    l.objini.cmd_social(arg0, r, este, r)
  efim
  ret


classe m_cmd_social
herda comando_menu_cmd
#
const nome1 = "Ajuda"
const tipo1 = "opc_texto"
const vari1 = "m_ajuda"
#
const nome2 = "Nenhum comando"
const tipo2 = "opc_linha"
const vari2 = "m_lista_vazia"
#
const nome3 = "Comandos sociais"
const tipo3 = "opc_linha"
const vari3 = "m_lista_soc"
#
const nome4 = "Comando não existe"
const tipo4 = "opc_linha"
const vari4 = "m_naoexiste"
#
const titu5 = "Nos comandos sociais"
#
const nome5 = "Sem argumentos"
const tipo5 = "opc_linha"
const vari5 = "m_sem_args"
#
const nome6 = "Ignorando"
const tipo6 = "opc_linha"
const vari6 = "m_ignorar"
#
const nome7 = "Ignorado"
const tipo7 = "opc_linha"
const vari7 = "m_ignorado"
#
const nome8 = "Perso sem condições"
const tipo8 = "opc_linha"
const vari8 = "m_condicoes1"
#
const nome9 = "Alvo sem condições"
const tipo9 = "opc_linha"
const vari9 = "m_condicoes2"
