classe h_cmd_doar
herda comando_comum
const objmenu = $m_cmd_doar
const objtipo = 2 # Pode renomear
const posic = 5
int8 achou # Quantos itens achou
txt100 erro # Mensagem de erro
#
const m_ajuda = "-t\n\
-s <objeto>\n\
-s <quantidade> <objeto>\n\
Doa um objeto que você está carregando."
const m_naover = "Você não vê $m"
const m_nao_doar = "Não é possível doar $o"
const m_nao_vazio = "$O não está vazi$u."
const m_doar_um1 = "Você doa $j $o."
const m_doar_um2 = "$p doa $o."
const m_doar_mais1 = "Você doa $mx $o."
const m_doar_mais2 = "Você doa $mx $o."
const admordem = "m_ajuda m_naover m_nao_doar m_nao_vazio\n\
m_doar_um1 m_doar_um2 m_doar_mais1 m_doar_mais2"

func escr
  refvar perm_msg = $perm_[arg0.jogperm].item
  ret perm_msg, $mensjog.msg(perm_msg, arg0)
  ret cmd_doar(arg0, arg1), nulo
  listaobj l
  epara l.addfim(arg0.evento), l, l.ini.remove
    ret l.objini.cmd_doar(arg0, arg1), nulo
  efim
  arg0.p_espera < 3 && (arg0.p_espera = 3)
# Obtém o objeto de onde soltar
  ref sala = arg0.dono
  nomeobj n # Para reconhecer os itens
  n.ini(arg1, misc:objmax)
# Doa os itens
  achou = 0
  $mens.mens = arg1
  erro = $mens.txt(m_naover, arg0)
  epara l.addfim(arg0.dentro1), l, l.ini.remove
    ref ll = l.objini
    continuar !ll.visivel(arg0) || !n.nome(ll.ident2, ll.objtot)
    doarobj(arg0, ll, int(n))
    sair achou >= 10
  efim
# Mensagem se não doou nada
  !achou && arg0.msg(erro)

func doarobj
# arg0=personagem, arg1=item que quer soltar, arg2=quantidade de itens
# Faz achou++ se soltou o item
# Coloca mensagem de erro na variável erro se não conseguiu pegar
  refvar tipo = arg1.tipoitem2
# Obtém as salas de doação
  textotxt t
  textopos p
  t.addfim(arg0.dono.s_doarsalas)
  p = t.ini
  enquanto p.lin
    refvar s = $s_[p.texto]
    se !s || (tipo & s.s_doarnao) != "0"
      p.remove
    senao s.s_doarsim && s.s_doarsim != "0" && (tipo & s.s_doarsim) == "0"
      p.remove
    senao
      p.depois
    fimse
  efim
# Obtém a salas de doação
  se !t.linhas
    $mens.p(arg0, nulo, arg1)
    erro = $mens.txt(m_nao_doar, arg0)
    ret
  fimse
  t.remove(rand(t.linhas))
  refvar s = $s_[t.remove]
# Checa se o item está vazio
  se arg1.dentro1.total
    $mens.p(arg0, nulo, arg1)
    erro = $mens.txt(m_nao_vazio, arg0)
    ret
  fimse
# Apaga itens antigos para abrir espaço se necessário
  se arg1.cabedentro(s) < arg2
    apagar(s.dentro1.objini)
  fimse
  achou++
# Eventos
  ret cmd_doarobj(arg0, s, arg1, arg2), nulo
  listaobj e
  epara e.addfim(arg0.evento), e, e.ini.remove
    ret e.objini.cmd_doarobj(arg0, s, arg1, arg2, arg0), nulo
  efim
  epara e.addfim(s.evento), e, e.ini.remove
    ret e.objini.cmd_doarobj(arg0, s, arg1, arg2, s), nulo
  efim
  epara e.addfim(arg1.evento), e, e.ini.remove
    ret e.objini.cmd_doarobj(arg0, s, arg1, arg2, arg1), nulo
  efim
# Mensagens
  $mens.p(arg0, nulo, arg1)
  $mens.mens = arg2
  se arg2 <= 1
    $mens.mvis2(m_doar_um1, m_doar_um2)
  senao
    $mens.mvis2(m_doar_mais1, m_doar_mais2)
  fimse
# Doa item
  arg0.p_espera += 2
  ref r = arg1.mudadono(s, arg2)
# Eventos
  cmd_doouobj(arg0, s, r, arg2)
  epara e.addfim(arg0.evento), e, e.ini.remove
    e.objini.cmd_doouobj(arg0, s, r, arg2, arg0)
  efim
  epara e.addfim(s.evento), e, e.ini.remove
    e.objini.cmd_doouobj(arg0, s, r, arg2, s)
  efim
  epara e.addfim(r.evento), e, e.ini.remove
    e.objini.cmd_doouobj(arg0, s, r, arg2, r)
  efim


classe m_cmd_doar
herda comando_menu_cmd
#
const nome1 = "Ajuda"
const tipo1 = "opc_texto"
const vari1 = "m_ajuda"
#
const nome2 = "Alvo não existe"
const tipo2 = "opc_linha"
const vari2 = "m_naover"
#
const nome3 = "Não pode"
const tipo3 = "opc_linha"
const vari3 = "m_nao_doar"
#
const nome4 = "Não vazio"
const tipo4 = "opc_linha"
const vari4 = "m_nao_vazio"
#
const nome5 = "Doa um perso"
const tipo5 = "opc_linha"
const vari5 = "m_doar_um1"
#
const nome6 = "Doa um outros"
const tipo6 = "opc_linha"
const vari6 = "m_doar_um2"
#
const nome7 = "Doa vários perso"
const tipo7 = "opc_linha"
const vari7 = "m_doar_mais1"
#
const nome8 = "Doa vários outros"
const tipo8 = "opc_linha"
const vari8 = "m_doar_mais2"
