classe comando_comebebe
herda comando_comum

func efeito
# arg0 = personagem que usou o objeto
# arg1 = o que o personagem digitou; usado ao lançar magias
# arg2 = item (objeto)
# arg3 = líquido (objeto ou nulo)
# arg4 = quantidade de líquido (de 0 a 1)
  refvar cheio = $miscfome.cheio
  arg0.p_fome = intmin(cheio, arg0.p_fome + arg2.f_fome + arg3.f_fome * arg4)
  arg0.p_sede = intmin(cheio, arg0.p_sede + arg2.f_sede + arg3.f_sede * arg4)
  arg0.p_bebida = intmin(cheio, arg0.p_bebida + arg2.f_bebida + arg3.f_bebida * arg4)
  arg0.p_diges = intmin(cheio, arg0.p_diges + arg2.f_diges + arg3.f_diges * arg4)
# Magias
  arg2.f_magia1 && $magia_[arg2.f_magia1].escrhab(arg0, arg1, arg2, arg2.f_nivel1)
  arg2.f_magia2 && $magia_[arg2.f_magia2].escrhab(arg0, arg1, arg2, arg2.f_nivel2)
  arg2.f_magia3 && $magia_[arg2.f_magia3].escrhab(arg0, arg1, arg2, arg2.f_nivel3)
  arg3.f_magia1 && $magia_[arg3.f_magia1].escrhab(arg0, arg1, arg3, arg3.f_nivel1)
  arg3.f_magia2 && $magia_[arg3.f_magia2].escrhab(arg0, arg1, arg3, arg3.f_nivel2)
  arg3.f_magia3 && $magia_[arg3.f_magia3].escrhab(arg0, arg1, arg3, arg3.f_nivel3)


classe h_cmd_comer
herda comando_comebebe
const objmenu = $m_cmd_comer
const objtipo = 2 # Pode renomear
const posic = 5
#
const m_ajuda = "-t\n-s <objeto>\nTenta comer alguma coisa, geralmente um alimento."
const m_sem_args = "Comer o quê?"
const m_naover = "Você não vê $m"
const m_naoconsegue = "Você não consegue comer $o."
const m_cheio = "Você não consegue comer mais nada."
const m_embriaguez = "Você não consegue levar $o à boca."
const m_comer1 = "Você come $o."
const m_comer2 = "$P come $o."
const admordem = "m_ajuda m_sem_args m_naover m_naoconsegue m_cheio\n\
m_embriaguez m_comer1 m_comer2"

func escr
  ret arg0.posicao == 7, msgposicao # Não come durante a luta
  ret !arg1, $mens.mp(m_sem_args, arg0)
  refvar r = misc:itemdentro(arg0, arg1)
  se !r
    $mens.mens = arg1
    ret $mens.mp(m_naover, arg0)
  senao arg0.j_imortal # Se é imortal, consegue comer
  senao r.f_tipo != 3 # Checa se é comida
    ret $mens.mp(m_naoconsegue, arg0, nulo, r)
  senao arg0.p_fome >= $miscfome.cheio - 5
    ret $mens.mp(m_cheio, arg0)
  senao arg0.p_bebida >= $miscfome.cheio - 5
    ret $mens.mp(m_embriaguez, arg0, nulo, r)
  fimse
  comer(arg0, r)

func comer # Personagem arg0 come item arg1
# arg2 = mensagem ao comer
# Retorna: 1=conseguiu comer, 0=não conseguiu comer
# Nota: Essa função é chamada em obj/perso.int quando o personagem come corpos
  listaobj l
# Eventos
  ret cmd_comer(arg0, arg1), nulo
  epara l.addfim(arg0.evento), l, l.ini.remove
    ret l.objini.cmd_comer(arg0, arg1, arg0), nulo
  efim
  epara l.addfim(arg1.evento), l, l.ini.remove
    ret l.objini.cmd_comer(arg0, arg1, arg1), nulo
  efim
# Come o objeto
  $mens.mens = ""
  $mens.p(arg0, nulo, arg1)
  $mens.mvis2(arg1.f_msgperso ?? m_comer1, arg1.f_msgoutros ?? arg1.f_msgperso ?? m_comer2)
  arg1.apagar(1)
  efeito(arg0, "", arg1)
# Eventos
  cmd_comeu(arg0, arg1)
  epara l.addfim(arg0.evento), l, l.ini.remove
    l.objini.cmd_comeu(arg0, arg1, arg0)
  efim
  epara l.addfim(arg1.evento), l, l.ini.remove
    l.objini.cmd_comeu(arg0, arg1, arg1)
  efim
  ret 1


classe comando_beber
herda comando_comebebe
const objmenu = $m_cmd_beber
const objtipo = 2 # Pode renomear
const posic = 5
const totalml = 1
#
const m_ajuda = "-t\n\
-s [objeto]\n\
Tenta beber alguma coisa. Sem argumentos, bebe a primeira fonte\n\
que encontrar."
const m_sem_args = "Beber o quê?"
const m_naover = "Você não vê $m"
const m_pegar = "Você precisa pegar $o primeiro."
const m_vazio = "$O está vazi$u."
const m_fechado = "$O está fechad$u."
const m_naoconsegue = "Você não consegue beber $o."
const m_cheio = "Você não consegue beber mais nada."
const m_embriaguez = "Você não consegue levar $o à boca."
const m_fonte1 = "Você bebe $d $o."
const m_fonte2 = "$P bebe $d $o."
const m_item1c = "Você bebe $m $d $o."
const m_item2c = "$P bebe um líquido $1 $d $o."
const m_item1d = "Você bebe $d $o."
const m_item2d = "$P bebe $d $o."
const m_pocao1 = "Você bebe $o."
const m_pocao2 = "$P bebe $o."
const admordem = "m_ajuda m_sem_args m_naover m_pegar m_vazio m_fechado\n\
m_naoconsegue m_cheio m_embriaguez m_fonte1 m_fonte2 m_item1c m_item2c\n\
m_item1d m_item2d m_pocao1 m_pocao2"

func escr
  listaobj l
  ref r
# Obtém o objeto
  se !arg1
    epara l.addfim(arg0.dono.dentro1), l, l.ini.remove
      sair l.objini.f_tipo == 1 && l.objini.visivel(arg0)
    efim
    ret !l.objini, $mens.mp(m_sem_args, arg0)
    r = l.objini
  senao
    r = misc:itemtudo(arg0, arg1)
    se !r
      $mens.mens = arg1
      ret $mens.mp(m_naover, arg0)
    senao r.f_tipo == 1 # Fonte
    senao r.dono != arg0
      ret $mens.mp(m_pegar, arg0, nulo, r)
    senao r.f_tipo == 5 # Container de líquido
      se !$liq_[txt2(r.var.z_liquido)]
        ret $mens.mp(m_vazio, arg0, nulo, r)
      senao r.i_aberto >= 3
        ret $mens.mp(m_fechado, arg0, nulo, r)
      fimse
    senao r.f_tipo != 2 # Não é bebida ou poção
      ret $mens.mp(m_naoconsegue, arg0, nulo, r)
    fimse
  fimse
# Checa se consegue beber
  se arg0.p_sede >= $miscfome.cheio || arg0.p_fome >= $miscfome.cheio
    ret arg0.msg(m_cheio)
  senao arg0.p_bebida >= $miscfome.cheio - 5
    ret $mens.mp(m_embriaguez, arg0, nulo, r)
  fimse
# Bebe
  beber(arg0, r, totalml)

func beber # Personagem arg0 bebe item arg1, arg2=quantidade (de 0 a 1)
  listaobj l
  refvar liq = $liq_[arg1.f_tipo == 5 ? txt2(arg1.var.z_liquido) : arg1.f_liquido]
# Eventos
  ret cmd_beber(arg0, arg1, liq), nulo
  ret liq.cmd_beber(arg0, arg1, liq, liq), nulo
  epara l.addfim(arg0.evento), l, l.ini.remove
    ret l.objini.cmd_beber(arg0, arg1, arg0, liq), nulo
  efim
  epara l.addfim(arg1.evento), l, l.ini.remove
    ret l.objini.cmd_beber(arg0, arg1, arg1, liq), nulo
  efim
# Bebe o objeto
  $mens.p(arg0, nulo, arg1)
  $mens.mens = liq.nome
  $mens.o_1 = liq.aspecto
  $mens.o_2 = liq.msexo ? "um" : "uma"
  $mens.o_3 = liq.msexo ? "o" : "a"
  refvar m_outros = arg1.f_msgoutros ?? arg1.f_msgperso
  se arg1.f_tipo == 1 # Fonte
    $mens.mvis2(arg1.f_msgperso ?? m_fonte1, m_outros ?? m_fonte2)
    efeito(arg0, "", arg1, liq, 1)
  senao arg1.f_tipo == 5 # Container de líquido
    refvar varliq = arg1.var.z_liquido
    refvar totalml = intpos(int(liq.beber * arg2))
    se !liq
      $mens.mvis2(arg1.f_msgperso ?? m_item1d, m_outros ?? m_item2d)
      varliq = ""
      efeito(arg0, "", arg1)
    senao int(varliq) > totalml
      $mens.mvis2(arg1.f_msgperso ?? m_item1c, m_outros ?? m_item2c)
      varliq = txt(int(varliq - totalml)) + " " + txt(varliq, 4)
      arg1.ajustapeso
      efeito(arg0, "", arg1, liq, arg2)
    senao
      $mens.mvis2(arg1.f_msgperso ?? m_item1c, m_outros ?? m_item2c)
      refvar total = int(varliq) / liq.beber
      varliq = ""
      arg1.ajustapeso
      efeito(arg0, "", arg1, liq, total)
    fimse
  senao # Poção
    $mens.mvis2(arg1.f_msgperso ?? m_pocao1, m_outros ?? m_pocao2)
    arg1.apagar(1)
    efeito(arg0, "", arg1)
  fimse
# Eventos
  cmd_bebeu(arg0, arg1, liq)
  liq.cmd_bebeu(arg0, arg1, liq, liq)
  epara l.addfim(arg0.evento), l, l.ini.remove
    l.objini.cmd_bebeu(arg0, arg1, arg0, liq)
  efim
  epara l.addfim(arg1.evento), l, l.ini.remove
    l.objini.cmd_bebeu(arg0, arg1, arg1, liq)
  efim


classe h_cmd_beber
herda comando_beber


classe h_cmd_provar
herda comando_beber
const totalml = 0.1
#
const m_ajuda = "-t\n\
-s [objeto]\n\
Tenta provar alguma coisa (bebe 1 décimo do que beberia teclando Beber).\n\
Sem argumentos, prova a primeira fonte que encontrar."
const m_sem_args = "Provar o quê?"


classe m_cmd_comer
herda comando_menu_cmd
#
const nome1 = "Ajuda"
const tipo1 = "opc_texto"
const vari1 = "m_ajuda"
#
const nome2 = "Sem argumentos"
const tipo2 = "opc_linha"
const vari2 = "m_sem_args"
#
const nome3 = "Sem alvo"
const tipo3 = "opc_linha"
const vari3 = "m_naover"
#
const nome4 = "Não consegue"
const tipo4 = "opc_linha"
const vari4 = "m_naoconsegue"
#
const nome5 = "Está cheio"
const tipo5 = "opc_linha"
const vari5 = "m_cheio"
#
const nome6 = "Embriagado"
const tipo6 = "opc_linha"
const vari6 = "m_embriaguez"
#
const nome7 = "Comer perso"
const tipo7 = "opc_linha"
const vari7 = "m_comer1"
#
const nome8 = "Comer outros"
const tipo8 = "opc_linha"
const vari8 = "m_comer1"


classe m_cmd_beber
herda comando_menu_cmd
#
const nome1 = "Ajuda"
const tipo1 = "opc_texto"
const vari1 = "m_ajuda"
#
const nome2 = "Sem argumentos"
const tipo2 = "opc_linha"
const vari2 = "m_sem_args"
#
const nome3 = "Sem alvo"
const tipo3 = "opc_linha"
const vari3 = "m_naover"
#
const nome4 = "Precisa pegar"
const tipo4 = "opc_linha"
const vari4 = "m_pegar"
#
const nome5 = "Item vazio"
const tipo5 = "opc_linha"
const vari5 = "m_vazio"
#
const nome6 = "Item fechado"
const tipo6 = "opc_linha"
const vari6 = "m_fechado"
#
const nome7 = "Não consegue"
const tipo7 = "opc_linha"
const vari7 = "m_naoconsegue"
#
const nome8 = "Está cheio"
const tipo8 = "opc_linha"
const vari8 = "m_cheio"
#
const nome9 = "Embriagado"
const tipo9 = "opc_linha"
const vari9 = "m_embriaguez"
#
const nome10 = "Bebe fonte perso"
const tipo10 = "opc_linha"
const vari10 = "m_fonte1"
#
const nome11 = "Bebe fonte outros"
const tipo11 = "opc_linha"
const vari11 = "m_fonte2"
#
const nome12 = "Bebe líquido perso"
const info12 = "Líquido conhecido; $m=nome do líquido, $1=aspecto, $2=um ou uma, $3=o ou a"
const tipo12 = "opc_linha"
const vari12 = "m_item1c"
#
const nome13 = "Bebe líquido outros"
const info13 = "Líquido conhecido; $m=nome do líquido, $1=aspecto, $2=um ou uma, $3=o ou a"
const tipo13 = "opc_linha"
const vari13 = "m_item2c"
#
const nome14 = "Bebe outro líq. perso"
const info14 = "Líquido desconhecido"
const tipo14 = "opc_linha"
const vari14 = "m_item1d"
#
const nome15 = "Bebe outro líq. outros"
const info15 = "Líquido desconhecido"
const tipo15 = "opc_linha"
const vari15 = "m_item2d"
#
const nome16 = "Bebe poção perso"
const tipo16 = "opc_linha"
const vari16 = "m_pocao1"
#
const nome17 = "Bebe poção outros"
const tipo17 = "opc_linha"
const vari17 = "m_pocao2"
