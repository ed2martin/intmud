1. Comum a salas, personagens e itens (classe comum_obj, em obj/comum.int)

ref dono
Quem possui esse objeto; mesmo que: idono.objlista
No caso do personagem, é a sala aonde o personagem está.
Para mudar o dono, usar a função mdono.

ref donoantes
Dono anterior desse objeto.

listaobj dentro1
Lista de itens, exceto os que estão sendo vestidos.

listaobj dentro2
Se for sala: lista de personagens.
Se for personagem: lista de itens que está vestindo, animais e efeitos.

listaobj evento
Objetos que recebem eventos desse objeto.

const objsav = 0
Se deve salvar o objeto ao salvar personagem ou sala
0 = não salva
1 = salva
2 = salva só em arquivos de jogadores
3 = salva só em arquivos de casas

int1 objmudou
Se 1, deve salvar a sala porque ocorreu alguma mudança na lista de objetos
Essa variável costuma estar presente somente nas salas

Variáveis relacionadas ao peso
uint32 pesoden # Somente leitura: quanto peso tem dentro
uint32 pesotot # Somente leitura: peso total
uint32 pesovar # Peso nas variáveis do objeto (em gramas)
const pesoobj = 1 # Peso do objeto (em gramas)
const pesoadd = 1 # Se falso, está voando/flutuando (pesotot será 0)

func mdono( novo dono )
Muda o dono do objeto, acertando diversas variáveis.

func ajustaobj
Acerta o dono do objeto (variável dono) e os eventos, baseado nas constantes:
const eveste = 1 # Receber eventos do próprio objeto
const evperso = 1 # Receber eventos do dono se o dono for personagem
const evitem = 1 # Receber eventos do dono se o dono for item
const evsala = 1 # Receber eventos do dono se o dono for sala
Usa internamente a variável:
listaitem evrec.2

func ajustapeso
Ajuda peso e volume; variáveis pesoden, pesotot, volden, voltot.
Vide arquivo obj/comum.int


2. Personagens e itens (classe comum_persoitem, em obj/comum.int)

int16 bitinv
Grau de invisibilidade do personagem ou objeto; geralmente é 3
0 = visível a qualquer um, mesmo no escuro ou a quem estiver cego
somar 1 se invisível a quem estiver cego
somar 2 se invisível no escuro
somar 4 se está invisível
somar 8 se está oculto
somar 0x10 se está voando
somar 0x20 se está voando alto
somar 0x80 se é administrador invisível

int16 bitver
O que está visível ao personagem ou objeto; geralmente é 1 ou 3
0 = nada (está cego)
somar 1 se não está cego
somar 2 se enxerga no escuro
somar 4 se pode ver invisível
somar 8 se pode ver oculto
somar 0x10 se pode ver voando
somar 0x20 se pode ver voando alto
somar 0x80 se pode ver administradores invisíveis
somar 0x100 se anda em silêncio
somar 0x200 se está flutuando
somar 0x400 se está dormindo por efeito de algo
somar 0x800 se não pode ser colocado para dormir
somar 0x1000 se percebe quem anda em silêncio

textotxt atribs
Contém os textos que vão na frente dos personagens e itens e nos textos
que vão após o personagem ou item.
A função atribs_exec acerta o conteúdo dessa variável.
A constante m_atribs1 do próprio item/personagem e a constante m_atribs2
do dono contém o texto que será acrescentado. Se o texto começar com um
asterisco, será colocado na linha de baixo. Caso contrário será colocado
na frente da descrição.
Exemplo, uma constante:
const m_atribs1 = "encharcado"
Num personagem chamado Joaquim mudará a descrição para:
(encharcado) Joaquim está aqui.
Já uma constante:
const m_atribs2 = "* ... e emana uma luz azul."
Em um item que Joaquim está vestindo, aparecerá após "Joaquim está aqui":
 ... e emana uma luz azul.

func atribs_exec
Ajusta variável atribs (acima).

func atribs_dono
Ajusta variável atribs do dono se o dono for personagem.

const nivel = 0
Nível definido no item ou personagem.

sav uint16 pnivel
Nível atual do item ou personagem.
Os personagens só conseguem vestir itens de nível igual ou menor.

sav uint16 prenascer
Quantas vezes o personagem renasceu (usou o comando renascer).

txt16 nome
const nome = ""
Nome do personagem ou item, usado principalmente em comandos de
administração. Por ser um nome, e não uma descrição, não costuma ter
o artigo na frente. Por exemplo, "borracha" ao invés de "uma borracha".
Nota: a maioria das mensagens usa descnome (abaixo) ao invés de nome.

const ident = nome
Nomes que o jogador digita para ações com o personagem ou item.
Exemplo: ao pegar um item ou atacar um personagem.

const identfem = ident
Somente personagens: nomes que o jogador digita para ações com o personagem.
Se ausente, assume ident.

func ident2
Retorna nomes que o jogador digita para ações com o personagem ou item.
Pode ser ident, identfem ou nome.

const descnome = nome
Descrição curta. É a descrição usada na maioria dos comandos.
Exemplos: "uma bola", "Joaquim" e "um ladrão"

const descnomefem = descnome
Somente personagens: descrição curta se for feminino. Se ausente, assume
descnome.

func descnome2
Retorna a descrição curta. Pode ser var.z_descnome, descnome, descnomefem
ou nome.

const descver = ""
arg0 = personagem que está consultando essa constante
Descrição quando alguém olha para o item ou personagem (comando olhar).

const descloja = ""
arg0 = personagem que está consultando essa constante
Descrição de quando o item pode ser vendido na loja, mas ainda não existe.
Se for um texto vazio, é usada a descrição de descnome ao invés de descloja.

const descident = ""
arg0 = personagem que está consultando essa constante
Descrição para quem usa a habilidade identificar no item ou personagem.
Não é necessário colocar aqui a maioria das propriedades (nível, tipo,
etc) porque elas já são mostradas automaticamente.

const msexo = 0
Usado nas mensagens com o personagem ou item.
0=feminino, 1=masculino, 2=variável psexo (somente personagens)

func msexo2
Retorna o gênero de var.z_msexo ou de msexo.

const inivar = ""
Lista de variáveis definidas quando o personagem ou item é criado.
Vide tópico "Variáveis dinâmicas de personagens, salas e itens".

intexec recalc
Para chamar recalc_exec quando necessário.

func recalc_exec
Ajusta variáveis, principalmente batalha.
Nota: Quando for necessário atualizar vários personagens ou itens, podem
ser usadas funções da classe admrecalc (arquivo adm/atributos.int).
Para recalcular os atributos de todos os personagens que lutam:
$admrecalc.exec
Para atualizar os atributos de todos os personagens:
$admrecalc.atuperso
Para atualizar os atributos de todos os itens:
$admrecalc.atuitem

func recalc_dono
Ajusta variáveis do dono (principalmente batalha) se o dono for personagem.

func visivel( personagem )
Retorna verdadeiro se está visível para o personagem.

func mudadono( item ou personagem, quantidade )
Item ou personagem muda de dono.
Quando a quantidade for omitida ou não for um item que pode ser
agrupado em um objeto, a quantidade será considerada 1.
Essa função retorna o próprio personagem ou item que foi movido.
Isso é útil principalmente em itens que agrupam.

func apagar( quantidade )
Apaga o personagem ou uma quantidade do item.

func seguir( personagem ou item )
Faz seguir um personagem ou item.
Se não for especificado o item ou personagem ou for nulo, deixa de seguir.

func mesmogrupo( personagem ou item )
Retorna 1 se o personagem ou item está no mesmo grupo ou 0 se não está
(vide comando grupo).

func donogrupo
Retorna o dono do grupo ou nulo se não está agrupado (vide comando grupo).

func listagrupo( variável listaobj )
Adiciona todos os integrantes do grupo em uma listaobj.
Se não estiver em grupo, adiciona o personagem e os animais dele.

func rastrearsala( sala, opções, quantidade de salas )
Obtém o caminho para chegar até uma sala
Sala é a sala aonde quer ir (exemplo, $s_teste001)
Opções é um texto que pode ser "" ou ter uma ou mais letras entre:
"a" limita à mesma área
"p" não percorre portas fechadas
"d" checa se cabe nas salas
"s" retorna salas da origem ao destino ao invés das direções
Quantidade de salas é quantas salas deve verificar até chegar na sala
especificada. Não é necessariamente a distância máxima entre o item ou
personagem e a sala. Se estiver ausente, assume 65535.
Retorna: direções a seguir, separadas por "\n"
Se não achar o caminho ou já estiver na sala, retorna "".

func rastrearsaladir( sala, opções, quantidade de salas )
Obtém a próxima direção para chegar até uma sala
Guarda as últimas rotas na memória
Os argumentos são os mesmos de rastrear sala

textotxt rastrearsaladircache
Contém as rotas guardadas na memória, para a função rastrearsaladir

const rastrearsaladirlinhas = 5
Quantidade de rotas que rastrearsaladircache pode guardar
